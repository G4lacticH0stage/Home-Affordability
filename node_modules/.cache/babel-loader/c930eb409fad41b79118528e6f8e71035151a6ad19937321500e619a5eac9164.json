{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethrichardson/taxcalc/src/components/HomeAffordabilityCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TaxCalculator.css';\nimport { INDIANA_COUNTIES } from '../data/indianaTaxData';\nimport { MARYLAND_COUNTIES } from '../data/marylandTaxData';\nimport { MICHIGAN_CITIES, calculateMichiganLocalTax } from '../data/michiganTaxData';\nimport { MISSOURI_CITIES } from '../data/missouriTaxData';\nimport { NEW_JERSEY_CITIES } from '../data/newJerseyTaxData';\nimport { NEW_YORK_TAX, calculateNYTax } from '../data/newYorkTaxData';\nimport { OHIO_MUNICIPALITIES } from '../data/ohioTaxData';\nimport { OREGON_TAX } from '../data/oregon-tax';\nimport { PENNSYLVANIA_TAX } from '../data/pennsylvaniaTaxData';\nimport { WEST_VIRGINIA_TAX } from '../data/westVirginiaTaxData';\nimport { STATE_TAX_DATA } from '../data/tax-data';\n\n// Utility functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calculateMonthlyMortgage = (homePrice, downPayment, interestRate, loanTermYears) => {\n  // Calculate loan amount\n  const loanAmount = homePrice - downPayment;\n\n  // Convert annual interest rate to monthly and decimal form\n  const monthlyInterestRate = interestRate / 100 / 12;\n\n  // Calculate number of payments\n  const numberOfPayments = loanTermYears * 12;\n\n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    return loanAmount / numberOfPayments;\n  }\n\n  // Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n  const monthlyPayment = loanAmount * (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments)) / (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n  return monthlyPayment;\n};\n\n// Calculate maximum home price based on gross income\nconst calculateMaxHomePrice = (monthlyGrossIncome, interestRate, loanTermYears, downPayment, monthlyDebts = 0) => {\n  // Maximum payment based on whether there are debts included\n  // If debts included, use 36% rule (minus debts), otherwise use 28% rule\n  const maxMonthlyPaymentPercent = monthlyDebts > 0 ? 0.36 : 0.28;\n  const maxMonthlyPayment = monthlyGrossIncome * maxMonthlyPaymentPercent - monthlyDebts;\n  if (maxMonthlyPayment <= 0) return 0;\n\n  // Convert annual interest rate to monthly\n  const monthlyInterestRate = interestRate / 100 / 12;\n\n  // Number of payments\n  const numberOfPayments = loanTermYears * 12;\n\n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    const maxLoanAmount = maxMonthlyPayment * numberOfPayments;\n    return maxLoanAmount + downPayment;\n  }\n\n  // Calculate maximum loan amount\n  // Using formula: P = pmt * (1 - (1 + r)^-n) / r\n  const maxLoanAmount = maxMonthlyPayment * (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / monthlyInterestRate;\n\n  // Calculate max home price (loan amount + down payment)\n  const maxHomePrice = maxLoanAmount + downPayment;\n  return maxHomePrice;\n};\n\n// Format currency for display\nconst formatCurrency = value => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Format percentage for display\nconst formatPercentage = value => {\n  return value.toFixed(1) + '%';\n};\n\n// Federal Tax Brackets 2024\n// Define the federal tax brackets correctly with \"limit\" being the upper bound of each bracket\nconst FEDERAL_TAX_BRACKETS_2024 = [{\n  min: 0,\n  max: 11600,\n  rate: 0.10\n}, {\n  min: 11600,\n  max: 47150,\n  rate: 0.12\n}, {\n  min: 47150,\n  max: 100525,\n  rate: 0.22\n}, {\n  min: 100525,\n  max: 191950,\n  rate: 0.24\n}, {\n  min: 191950,\n  max: 243725,\n  rate: 0.32\n}, {\n  min: 243725,\n  max: 609350,\n  rate: 0.35\n}, {\n  min: 609350,\n  max: Infinity,\n  rate: 0.37\n}];\n\n// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax = (income, brackets) => {\n  let tax = 0;\n  for (let i = 0; i < brackets.length; i++) {\n    const currentBracket = brackets[i];\n\n    // Calculate income in this bracket\n    const bracketMin = currentBracket.min;\n    const bracketMax = currentBracket.max;\n    if (income > bracketMin) {\n      // Calculate the portion of income that falls within this bracket\n      const taxableInThisBracket = Math.min(income, bracketMax) - bracketMin;\n      tax += taxableInThisBracket * currentBracket.rate;\n    }\n\n    // If we've processed all income, we can stop\n    if (income <= bracketMax) break;\n  }\n  return tax;\n};\n\n// Example calculation for $58,000 income\nfunction calculateExampleTax() {\n  const income = 58000;\n  const federalTax = calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n  console.log(`Federal tax on $${income.toFixed(2)}:`);\n\n  // Show calculation breakdown\n  let totalTax = 0;\n  for (let i = 0; i < FEDERAL_TAX_BRACKETS_2024.length; i++) {\n    const bracket = FEDERAL_TAX_BRACKETS_2024[i];\n    if (income > bracket.min) {\n      const taxableAmount = Math.min(income, bracket.max) - bracket.min;\n      const taxInBracket = taxableAmount * bracket.rate;\n      totalTax += taxInBracket;\n      console.log(`${bracket.min.toLocaleString()} to ${Math.min(income, bracket.max).toLocaleString()}: ${taxableAmount.toLocaleString()} @ ${(bracket.rate * 100).toFixed(1)}% = $${taxInBracket.toFixed(2)}`);\n    }\n    if (income <= bracket.max) break;\n  }\n  console.log(`Total federal tax: $${totalTax.toFixed(2)}`);\n  console.log(`Effective tax rate: ${(totalTax / income * 100).toFixed(2)}%`);\n  return federalTax;\n}\ncalculateExampleTax();\n\n// FICA rates\nconst FICA_RATES = {\n  socialSecurity: 0.062,\n  // 6.2%\n  medicare: 0.0145,\n  // 1.45%\n  additionalMedicare: 0.009,\n  // 0.9% additional Medicare tax for high earners\n  socialSecurityWageCap: 168600 // 2024 wage cap for Social Security tax\n};\n\n// State tax rates (simplified)\nconst STATE_TAX_RATES = {\n  \"Alabama\": 0.05,\n  \"Alaska\": 0.00,\n  \"Arizona\": 0.025,\n  \"Arkansas\": 0.039,\n  \"California\": 0.095,\n  \"Colorado\": 0.044,\n  \"Connecticut\": 0.0699,\n  \"Delaware\": 0.066,\n  \"Florida\": 0.00,\n  \"Georgia\": 0.0539,\n  \"Hawaii\": 0.11,\n  \"Idaho\": 0.059,\n  \"Illinois\": 0.049,\n  \"Indiana\": 0.03,\n  \"Iowa\": 0.038,\n  \"Kansas\": 0.055,\n  \"Kentucky\": 0.04,\n  \"Louisiana\": 0.03,\n  \"Maine\": 0.071,\n  \"Maryland\": 0.057,\n  \"Massachusetts\": 0.09,\n  \"Michigan\": 0.042,\n  \"Minnesota\": 0.098,\n  \"Mississippi\": 0.044,\n  \"Missouri\": 0.047,\n  \"Montana\": 0.059,\n  \"Nebraska\": 0.052,\n  \"Nevada\": 0.00,\n  \"New Hampshire\": 0.05,\n  \"New Jersey\": 0.057,\n  \"New Mexico\": 0.059,\n  \"New York\": 0.065,\n  \"North Carolina\": 0.0425,\n  \"North Dakota\": 0.025,\n  \"Ohio\": 0.035,\n  \"Oklahoma\": 0.0475,\n  \"Oregon\": 0.099,\n  \"Pennsylvania\": 0.0307,\n  \"Rhode Island\": 0.0599,\n  \"South Carolina\": 0.062,\n  \"South Dakota\": 0.00,\n  \"Tennessee\": 0.00,\n  \"Texas\": 0.00,\n  \"Utah\": 0.0455,\n  \"Vermont\": 0.0875,\n  \"Virginia\": 0.0575,\n  \"Washington\": 0.00,\n  \"West Virginia\": 0.0482,\n  \"Wisconsin\": 0.0765,\n  \"Wyoming\": 0.00\n};\n\n// Default interest rates by term\nconst DEFAULT_INTEREST_RATES = {\n  10: 5.84,\n  15: 5.96,\n  30: 6.5\n};\n\n// Convert various income types to annual\nconst convertToAnnualIncome = (income, payType) => {\n  const numericIncome = parseFloat(income);\n  if (isNaN(numericIncome)) return 0;\n  switch (payType) {\n    case 'hourly':\n      return numericIncome * 40 * 52;\n    // 40 hours per week, 52 weeks per year\n    case 'weekly':\n      return numericIncome * 52;\n    case 'biweekly':\n      return numericIncome * 26;\n    case 'monthly':\n      return numericIncome * 12;\n    case 'annual':\n    default:\n      return numericIncome;\n  }\n};\n\n// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax = income => {\n  const {\n    socialSecurity,\n    medicare,\n    additionalMedicare,\n    socialSecurityWageCap\n  } = FICA_RATES;\n\n  // Social Security has a wage cap\n  const socialSecurityTax = Math.min(income, socialSecurityWageCap) * socialSecurity;\n\n  // Regular Medicare tax\n  let medicareTax = income * medicare;\n\n  // Additional Medicare tax for high earners (over $200,000)\n  if (income > 200000) {\n    medicareTax += (income - 200000) * additionalMedicare;\n  }\n  return {\n    socialSecurity: socialSecurityTax,\n    medicare: medicareTax,\n    total: socialSecurityTax + medicareTax\n  };\n};\n\n// Helper function to safely get tax rate value from different tax structures\nconst getTaxRateValue = taxData => {\n  if (!taxData) return 0;\n  if (taxData.type === \"percentage\" || taxData.type === \"flat\") {\n    return taxData.value;\n  } else if (taxData.type === \"range\") {\n    return (taxData.min + taxData.max) / 2; // Use average of range\n  } else if (taxData.type === \"fixed\") {\n    return taxData.value;\n  }\n  return 0;\n};\n\n// Calculate local tax (city or county)\nconst calculateLocalTax = (income, state, city) => {\n  if (!state || !city || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n    return 0;\n  }\n  switch (state) {\n    case 'Indiana':\n      if (INDIANA_COUNTIES[city]) {\n        return income * getTaxRateValue(INDIANA_COUNTIES[city]);\n      }\n      break;\n    case 'Maryland':\n      if (MARYLAND_COUNTIES[city]) {\n        return income * getTaxRateValue(MARYLAND_COUNTIES[city]);\n      }\n      break;\n    case 'Michigan':\n      return calculateMichiganLocalTax(income, city);\n    case 'Missouri':\n      if (MISSOURI_CITIES[city]) {\n        return income * getTaxRateValue(MISSOURI_CITIES[city]);\n      }\n      break;\n    case 'New Jersey':\n      if (NEW_JERSEY_CITIES[city]) {\n        return income * getTaxRateValue(NEW_JERSEY_CITIES[city]);\n      }\n      break;\n    case 'New York':\n      if (NEW_YORK_TAX.cities[city]) {\n        const taxResult = calculateNYTax(income, city);\n        return taxResult.cityTax;\n      }\n      break;\n    case 'Ohio':\n      if (OHIO_MUNICIPALITIES[city]) {\n        return income * getTaxRateValue(OHIO_MUNICIPALITIES[city]);\n      }\n      break;\n    case 'Oregon':\n      return OREGON_TAX.calculateTax(income).localTax;\n    case 'Pennsylvania':\n      if (PENNSYLVANIA_TAX.counties[city]) {\n        const countyData = PENNSYLVANIA_TAX.counties[city];\n        if (countyData.type === \"fixed\") {\n          return income * countyData.value;\n        } else if (countyData.type === \"range\") {\n          return income * ((countyData.max + countyData.min) / 2);\n        }\n      }\n      break;\n    case 'West Virginia':\n      if (WEST_VIRGINIA_TAX.cities[city]) {\n        return WEST_VIRGINIA_TAX.calculateTax(city);\n      }\n      break;\n  }\n  return 0;\n};\n\n// Calculate federal tax\nconst calculateFederalTax = income => {\n  return calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n};\n\n// Calculate state tax (simplified)\nconst calculateStateTax = (income, state) => {\n  if (!state || !STATE_TAX_RATES[state]) return 0;\n  return income * STATE_TAX_RATES[state];\n};\n\n// Calculate total tax burden\nconst calculateTotalTax = (income, state) => {\n  const federalTax = calculateFederalTax(income);\n  const ficaTaxes = calculateFICATax(income);\n  const stateTax = calculateStateTax(income, state);\n  return {\n    federal: federalTax,\n    fica: ficaTaxes.total,\n    ficaSocialSecurity: ficaTaxes.socialSecurity,\n    ficaMedicare: ficaTaxes.medicare,\n    state: stateTax,\n    local: 0,\n    // This will be calculated separately if local jurisdiction is provided\n    total: federalTax + ficaTaxes.total + stateTax,\n    effectiveRate: (federalTax + ficaTaxes.total + stateTax) / income\n  };\n};\n\n// Get affordability color class based on income percentage and debt situation\nconst getAffordabilityColorClass = (percentage, hasDebts) => {\n  if (hasDebts) {\n    // Using 36% rule with debts\n    if (percentage <= 36) return \"green\";\n    if (percentage <= 42) return \"yellow\";\n    return \"red\";\n  } else {\n    // Using 28% rule without debts\n    if (percentage <= 28) return \"green\";\n    if (percentage <= 32) return \"yellow\";\n    return \"red\";\n  }\n};\nconst HomeAffordabilityCalculator = () => {\n  _s();\n  // Income and tax state\n  const [incomeData, setIncomeData] = useState({\n    income: '',\n    payType: 'annual',\n    state: '',\n    city: '',\n    useCustomTakeHome: false,\n    monthlyTakeHome: ''\n  });\n\n  // Housing state - FIXED: Added interestRate to initial state\n  const [housingData, setHousingData] = useState({\n    homePrice: '',\n    downPaymentType: 'percent',\n    // 'percent' or 'amount'\n    downPaymentPercent: '20',\n    downPaymentAmount: '',\n    loanTermYears: '30',\n    interestRate: '6.5',\n    // FIXED: Added default interest rate\n    includePropertyTax: true,\n    propertyTaxRate: '1.1',\n    includeHomeInsurance: true,\n    homeInsurance: '1200'\n  });\n\n  // Additional financial details\n  const [financialData, setFinancialData] = useState({\n    monthlyDebts: ''\n  });\n\n  // Results and UI state\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('what-can-i-afford');\n  const [showDetailedResults, setShowDetailedResults] = useState(false);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [paymentsByTerm, setPaymentsByTerm] = useState(null);\n\n  // Add city selection for local tax calculations\n  const getJurisdictionsForState = state => {\n    if (!state || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n      return [];\n    }\n    switch (state) {\n      case 'Indiana':\n        return Object.keys(INDIANA_COUNTIES);\n      case 'Maryland':\n        return Object.keys(MARYLAND_COUNTIES);\n      case 'Michigan':\n        return [...Object.keys(MICHIGAN_CITIES.exceptions), 'Other'];\n      case 'Missouri':\n        return Object.keys(MISSOURI_CITIES);\n      case 'New Jersey':\n        return Object.keys(NEW_JERSEY_CITIES);\n      case 'New York':\n        return Object.keys(NEW_YORK_TAX.cities);\n      case 'Ohio':\n        return Object.keys(OHIO_MUNICIPALITIES);\n      case 'Pennsylvania':\n        return ['Philadelphia', ...Object.keys(PENNSYLVANIA_TAX.counties).slice(0, 10), 'Other'];\n      case 'West Virginia':\n        return Object.keys(WEST_VIRGINIA_TAX.cities), 'Other';\n      default:\n        return [];\n    }\n  };\n\n  // Get jurisdiction label based on state\n  const getJurisdictionLabel = state => {\n    if (!state || !STATE_TAX_DATA[state]) return 'Municipality/City';\n    const stateData = STATE_TAX_DATA[state];\n    switch (stateData.taxType) {\n      case 'county':\n        return 'County';\n      case 'city':\n        return 'City/Municipality';\n      case 'school_district':\n        return 'School District';\n      case 'both':\n        return 'City/County';\n      default:\n        return 'Municipality/City';\n    }\n  };\n\n  // Set interest rate based on loan term\n  useEffect(() => {\n    const term = parseInt(housingData.loanTermYears, 10);\n    const defaultRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n    setHousingData(prev => ({\n      ...prev,\n      interestRate: defaultRate.toString()\n    })); // FIXED: Convert to string\n  }, [housingData.loanTermYears]);\n\n  // Calculate down payment amount when percent changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'percent' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const percent = parseFloat(housingData.downPaymentPercent);\n      if (!isNaN(homePrice) && !isNaN(percent)) {\n        const amount = homePrice * (percent / 100);\n        setHousingData(prev => ({\n          ...prev,\n          downPaymentAmount: amount.toFixed(0)\n        }));\n      }\n    }\n  }, [housingData.downPaymentPercent, housingData.homePrice, housingData.downPaymentType]);\n\n  // Calculate down payment percent when amount changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'amount' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const amount = parseFloat(housingData.downPaymentAmount);\n      if (!isNaN(homePrice) && !isNaN(amount) && homePrice > 0) {\n        const percent = amount / homePrice * 100;\n        setHousingData(prev => ({\n          ...prev,\n          downPaymentPercent: percent.toFixed(1)\n        }));\n      }\n    }\n  }, [housingData.downPaymentAmount, housingData.homePrice, housingData.downPaymentType]);\n\n  // Handle changes to income data\n  const handleIncomeChange = (field, value) => {\n    setIncomeData(prev => {\n      // If changing state, reset city\n      if (field === 'state') {\n        return {\n          ...prev,\n          [field]: value,\n          city: ''\n        };\n      }\n      return {\n        ...prev,\n        [field]: value\n      };\n    });\n  };\n\n  // Handle changes to housing data\n  const handleHousingChange = (field, value) => {\n    setHousingData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to financial data\n  const handleFinancialChange = (field, value) => {\n    setFinancialData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Switch between percentage and amount for down payment\n  const handleDownPaymentTypeChange = type => {\n    setHousingData(prev => ({\n      ...prev,\n      downPaymentType: type\n    }));\n  };\n\n  // Validate the input form\n  const validateForm = () => {\n    const newErrors = {};\n    if (!incomeData.useCustomTakeHome) {\n      // Validate income inputs\n      if (!incomeData.income) {\n        newErrors.income = 'Income is required';\n      } else if (isNaN(parseFloat(incomeData.income)) || parseFloat(incomeData.income) <= 0) {\n        newErrors.income = 'Please enter a valid income amount';\n      }\n      if (!incomeData.state) {\n        newErrors.state = 'State selection is required for tax calculation';\n      }\n\n      // Validate city selection if state has local taxes\n      if (incomeData.state && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax && !incomeData.city) {\n        newErrors.city = `${getJurisdictionLabel(incomeData.state)} selection is required for accurate tax calculation`;\n      }\n    } else {\n      // Validate custom take-home pay\n      if (!incomeData.monthlyTakeHome) {\n        newErrors.monthlyTakeHome = 'Monthly take-home pay is required';\n      } else if (isNaN(parseFloat(incomeData.monthlyTakeHome)) || parseFloat(incomeData.monthlyTakeHome) <= 0) {\n        newErrors.monthlyTakeHome = 'Please enter a valid monthly take-home amount';\n      }\n    }\n\n    // If we're analyzing a specific home, validate home price\n    if (activeTab === 'analyze-mortgage' && !housingData.homePrice) {\n      newErrors.homePrice = 'Home price is required';\n    } else if (activeTab === 'analyze-mortgage' && (isNaN(parseFloat(housingData.homePrice)) || parseFloat(housingData.homePrice) <= 0)) {\n      newErrors.homePrice = 'Please enter a valid home price';\n    }\n\n    // Validate down payment\n    if (housingData.downPaymentType === 'percent') {\n      if (!housingData.downPaymentPercent || isNaN(parseFloat(housingData.downPaymentPercent)) || parseFloat(housingData.downPaymentPercent) < 0 || parseFloat(housingData.downPaymentPercent) > 100) {\n        newErrors.downPaymentPercent = 'Down payment must be between 0% and 100%';\n      }\n    } else {\n      if (!housingData.downPaymentAmount || isNaN(parseFloat(housingData.downPaymentAmount)) || parseFloat(housingData.downPaymentAmount) < 0) {\n        newErrors.downPaymentAmount = 'Please enter a valid down payment amount';\n      }\n    }\n\n    // FIXED: Validate interest rate\n    if (!housingData.interestRate || isNaN(parseFloat(housingData.interestRate)) || parseFloat(housingData.interestRate) < 0) {\n      newErrors.interestRate = 'Please enter a valid interest rate';\n    }\n\n    // Validate optional financial data\n    if (financialData.monthlyDebts && (isNaN(parseFloat(financialData.monthlyDebts)) || parseFloat(financialData.monthlyDebts) < 0)) {\n      newErrors.monthlyDebts = 'Please enter a valid monthly debt amount';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Calculate affordability (what can I afford)\n  const calculateAffordability = () => {\n    if (!validateForm()) return;\n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = {\n        total: 0,\n        federal: 0,\n        fica: 0,\n        state: 0,\n        local: 0,\n        effectiveRate: 0\n      };\n\n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate) || DEFAULT_INTEREST_RATES[30]; // FIXED: Added fallback\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n\n      // Determine down payment based on type\n      let downPaymentPercent, downPaymentAmount;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        // Will calculate actual amount after we know max home price\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        // Will use this fixed amount\n      }\n\n      // Calculate affordability ratios\n      // Front-end ratio: 28% of monthly gross income for housing (PITI)\n      const frontEndMaxPayment = monthlyGrossIncome * 0.28;\n      // Back-end ratio: 36% of monthly gross income for all debt payments\n      const backEndMaxPayment = monthlyGrossIncome * 0.36 - monthlyDebts;\n      // Use the more conservative of the two\n      const maxMonthlyPayment = Math.min(frontEndMaxPayment, backEndMaxPayment);\n\n      // Adjust for property tax and insurance\n      let additionalHousingCosts = 0;\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        // Will estimate with a placeholder value for now\n        additionalHousingCosts += 300000 * propertyTaxRate / 12; // Placeholder home value\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        additionalHousingCosts += annualInsurance / 12;\n      }\n\n      // Adjust max payment to account for property tax and insurance\n      const maxPIPayment = maxMonthlyPayment - additionalHousingCosts;\n      if (maxPIPayment <= 0) {\n        setErrors({\n          general: 'Your expenses and debts are too high relative to your income for a mortgage'\n        });\n        return;\n      }\n\n      // Calculate max home price based on the down payment situation\n      let maxHomePrice, maxLoanAmount;\n      if (housingData.downPaymentType === 'percent') {\n        // Percentage-based down payment\n        maxHomePrice = calculateMaxHomePrice(monthlyGrossIncome, interestRate, loanTermYears, 0,\n        // Temporarily use 0 for down payment\n        monthlyDebts);\n\n        // Now apply the down payment percentage\n        downPaymentAmount = maxHomePrice * (downPaymentPercent / 100);\n        maxLoanAmount = maxHomePrice - downPaymentAmount;\n      } else {\n        // Fixed amount down payment\n        // For fixed down payment, we need to calculate differently\n        const fixedDownPayment = parseFloat(housingData.downPaymentAmount);\n\n        // Calculate max loan amount first\n        const maxLoanPayment = maxPIPayment;\n        const monthlyInterestRate = interestRate / 100 / 12;\n        const numberOfPayments = loanTermYears * 12;\n        if (monthlyInterestRate === 0) {\n          maxLoanAmount = maxLoanPayment * numberOfPayments;\n        } else {\n          maxLoanAmount = maxLoanPayment * (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / monthlyInterestRate;\n        }\n\n        // Then calculate max home price by adding fixed down payment\n        maxHomePrice = maxLoanAmount + fixedDownPayment;\n        downPaymentAmount = fixedDownPayment;\n        downPaymentPercent = fixedDownPayment / maxHomePrice * 100;\n      }\n\n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(maxHomePrice, downPaymentAmount, interestRate, loanTermYears);\n\n      // Calculate more precise property tax and insurance now that we know max home price\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = maxHomePrice * propertyTaxRate / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n\n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        const termPayment = calculateMonthlyMortgage(maxHomePrice, downPaymentAmount, termInterestRate, term);\n        let totalTermPayment = termPayment;\n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n\n        // Calculate total interest paid over loan term\n        const totalInterest = termPayment * term * 12 - maxLoanAmount;\n\n        // Calculate percentage of gross income\n        const percentOfGrossIncome = totalTermPayment / monthlyGrossIncome * 100;\n\n        // Calculate percentage of take-home income\n        const percentOfTakeHomeIncome = totalTermPayment / monthlyTakeHome * 100;\n\n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n\n      // Calculate percentage of gross income\n      const percentOfGrossIncome = totalMonthlyPayment / monthlyGrossIncome * 100;\n\n      // Calculate percentage of take-home income\n      const percentOfTakeHomeIncome = totalMonthlyPayment / monthlyTakeHome * 100;\n\n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n\n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        maxHomePrice: maxHomePrice,\n        maxLoanAmount: maxLoanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n        affordabilityClass: affordabilityClass,\n        taxResults: taxResults\n      });\n\n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({\n        general: 'An error occurred during calculations. Please check your inputs.'\n      });\n    }\n  };\n\n  // Calculate affordability for a specific home price - FIXED: Added missing function\n  const analyzeMortgage = () => {\n    if (!validateForm()) return;\n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = {\n        total: 0,\n        federal: 0,\n        fica: 0,\n        state: 0,\n        local: 0,\n        effectiveRate: 0\n      };\n\n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n\n      // Parse inputs for the specified home\n      const homePrice = parseFloat(housingData.homePrice);\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate) || DEFAULT_INTEREST_RATES[30]; // FIXED: Added fallback\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n\n      // Calculate down payment\n      let downPaymentAmount, downPaymentPercent;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        downPaymentAmount = homePrice * (downPaymentPercent / 100);\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        downPaymentPercent = downPaymentAmount / homePrice * 100;\n      }\n\n      // Calculate loan amount\n      const loanAmount = homePrice - downPaymentAmount;\n\n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(homePrice, downPaymentAmount, interestRate, loanTermYears);\n\n      // Calculate property tax and insurance\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = homePrice * propertyTaxRate / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n\n      // Calculate percentage of gross income\n      const percentOfGrossIncome = totalMonthlyPayment / monthlyGrossIncome * 100;\n\n      // Calculate percentage of take-home income\n      const percentOfTakeHomeIncome = totalMonthlyPayment / monthlyTakeHome * 100;\n\n      // Determine affordability using standard rules\n      let isAffordable = false;\n      if (hasDebts) {\n        // If they have other debts, use back-end ratio (36% rule)\n        const totalMonthlyDebtPayments = totalMonthlyPayment + monthlyDebts;\n        const backEndRatio = totalMonthlyDebtPayments / monthlyGrossIncome * 100;\n        isAffordable = backEndRatio <= 36;\n      } else {\n        // Otherwise use front-end ratio (28% rule)\n        isAffordable = percentOfGrossIncome <= 28;\n      }\n\n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n\n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        const termPayment = calculateMonthlyMortgage(homePrice, downPaymentAmount, termInterestRate, term);\n        let totalTermPayment = termPayment;\n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n\n        // Calculate total interest paid over loan term\n        const totalInterest = termPayment * term * 12 - loanAmount;\n\n        // Calculate percentage of gross income\n        const percentOfGrossIncome = totalTermPayment / monthlyGrossIncome * 100;\n\n        // Calculate percentage of take-home income\n        const percentOfTakeHomeIncome = totalTermPayment / monthlyTakeHome * 100;\n\n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n\n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        homePrice: homePrice,\n        loanAmount: loanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n        affordabilityClass: affordabilityClass,\n        isAffordable: isAffordable,\n        taxResults: taxResults\n      });\n\n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({\n        general: 'An error occurred during calculations. Please check your inputs.'\n      });\n    }\n  };\n\n  // Handle calculation based on active tab\n  const handleCalculate = () => {\n    if (activeTab === 'what-can-i-afford') {\n      calculateAffordability();\n    } else {\n      analyzeMortgage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home Buyer's Financial Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Home Affordability Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"calculator-description\",\n        children: \"Use this calculator to understand how much home you can afford based on your income and financial situation. The calculator considers both your take-home pay and recommended mortgage affordability guidelines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'what-can-i-afford' ? 'active' : ''}`,\n          onClick: () => setActiveTab('what-can-i-afford'),\n          children: \"What Can I Afford?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'analyze-mortgage' ? 'active' : ''}`,\n          onClick: () => setActiveTab('analyze-mortgage'),\n          children: \"Analyze Mortgage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-body\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-inputs\",\n        style: {\n          flex: '1',\n          marginRight: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Income & Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Income Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: incomeData.income,\n                onChange: e => handleIncomeChange('income', e.target.value),\n                placeholder: \"Enter income\",\n                disabled: incomeData.useCustomTakeHome,\n                className: errors.income ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 17\n              }, this), errors.income && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.income\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Pay Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: incomeData.payType,\n                onChange: e => handleIncomeChange('payType', e.target.value),\n                disabled: incomeData.useCustomTakeHome,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"hourly\",\n                  children: \"Hourly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1081,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"biweekly\",\n                  children: \"Bi-weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"annual\",\n                  children: \"Annual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: incomeData.state,\n                onChange: e => handleIncomeChange('state', e.target.value),\n                disabled: incomeData.useCustomTakeHome,\n                className: errors.state ? 'error' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 19\n                }, this), Object.keys(STATE_TAX_RATES).map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: state,\n                  children: state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1100,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 17\n              }, this), errors.state && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 15\n            }, this), incomeData.state && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: getJurisdictionLabel(incomeData.state)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: incomeData.city,\n                onChange: e => handleIncomeChange('city', e.target.value),\n                disabled: incomeData.useCustomTakeHome,\n                className: errors.city ? 'error' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: [\"Select \", getJurisdictionLabel(incomeData.state)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1115,\n                  columnNumber: 21\n                }, this), getJurisdictionsForState(incomeData.state).map(jurisdiction => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: jurisdiction,\n                  children: jurisdiction\n                }, jurisdiction, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1117,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 19\n              }, this), errors.city && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: incomeData.useCustomTakeHome,\n                onChange: e => handleIncomeChange('useCustomTakeHome', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this), \"I know my monthly take-home pay\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }, this), incomeData.useCustomTakeHome && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Monthly Take-Home Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: incomeData.monthlyTakeHome,\n              onChange: e => handleIncomeChange('monthlyTakeHome', e.target.value),\n              placeholder: \"Enter monthly take-home pay\",\n              className: errors.monthlyTakeHome ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), errors.monthlyTakeHome && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors.monthlyTakeHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Home Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 13\n          }, this), activeTab === 'analyze-mortgage' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Home Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: housingData.homePrice,\n              onChange: e => handleHousingChange('homePrice', e.target.value),\n              placeholder: \"Enter home price\",\n              className: errors.homePrice ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 17\n            }, this), errors.homePrice && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors.homePrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Down Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"toggle-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: `toggle-button ${housingData.downPaymentType === 'percent' ? 'active' : ''}`,\n                    onClick: () => handleDownPaymentTypeChange('percent'),\n                    children: \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1174,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: `toggle-button ${housingData.downPaymentType === 'amount' ? 'active' : ''}`,\n                    onClick: () => handleDownPaymentTypeChange('amount'),\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1181,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1173,\n                  columnNumber: 19\n                }, this), housingData.downPaymentType === 'percent' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: housingData.downPaymentPercent,\n                  onChange: e => handleHousingChange('downPaymentPercent', e.target.value),\n                  placeholder: \"Enter percentage\",\n                  className: errors.downPaymentPercent ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1191,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: housingData.downPaymentAmount,\n                  onChange: e => handleHousingChange('downPaymentAmount', e.target.value),\n                  placeholder: \"Enter amount\",\n                  className: errors.downPaymentAmount ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1199,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 17\n              }, this), errors.downPaymentPercent && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.downPaymentPercent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 47\n              }, this), errors.downPaymentAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.downPaymentAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Loan Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: housingData.loanTermYears,\n                onChange: e => handleHousingChange('loanTermYears', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10 years\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"15\",\n                  children: \"15 years\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30 years\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Interest Rate (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: housingData.interestRate,\n                onChange: e => handleHousingChange('interestRate', e.target.value),\n                step: \"0.01\",\n                min: \"0\",\n                max: \"15\",\n                className: errors.interestRate ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 17\n              }, this), errors.interestRate && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: errors.interestRate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"toggle-advanced-btn\",\n              onClick: () => setShowAdvancedOptions(!showAdvancedOptions),\n              children: showAdvancedOptions ? 'Hide Advanced Options' : 'Show Advanced Options'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 15\n            }, this), showAdvancedOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"advanced-options\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-toggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: housingData.includePropertyTax,\n                    onChange: e => handleHousingChange('includePropertyTax', e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1254,\n                    columnNumber: 23\n                  }, this), \"Include Property Tax\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 19\n              }, this), housingData.includePropertyTax && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Property Tax Rate (%/year)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: housingData.propertyTaxRate,\n                  onChange: e => handleHousingChange('propertyTaxRate', e.target.value),\n                  step: \"0.01\",\n                  min: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-toggle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: housingData.includeHomeInsurance,\n                    onChange: e => handleHousingChange('includeHomeInsurance', e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1278,\n                    columnNumber: 23\n                  }, this), \"Include Home Insurance\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 19\n              }, this), housingData.includeHomeInsurance && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Annual Home Insurance ($)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: housingData.homeInsurance,\n                  onChange: e => handleHousingChange('homeInsurance', e.target.value),\n                  min: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1290,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Additional Financial Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Monthly Debt Payments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: financialData.monthlyDebts,\n              onChange: e => handleFinancialChange('monthlyDebts', e.target.value),\n              placeholder: \"Car loans, credit cards, etc.\",\n              className: errors.monthlyDebts ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 15\n            }, this), errors.monthlyDebts && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors.monthlyDebts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 11\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message general-error\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"calculate-btn\",\n          onClick: handleCalculate,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-results\",\n        style: {\n          flex: '1',\n          marginLeft: '20px'\n        },\n        children: results ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"affordability-visual\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Mortgage Impact on Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"affordability-meter\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Monthly Gross Income: \", formatCurrency(results.monthlyGrossIncome)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: results.affordabilityClass,\n                  children: [results.percentOfGrossIncome.toFixed(1), \"% of Gross Income\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1345,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Monthly Take-Home: \", formatCurrency(results.monthlyTakeHome)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: results.affordabilityClass,\n                  children: [results.percentOfTakeHomeIncome.toFixed(1), \"% of Take-Home Pay\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `meter-fill ${results.affordabilityClass}`,\n                  style: {\n                    width: `${Math.min(results.percentOfGrossIncome * 2, 100)}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1356,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-labels\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"0%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1362,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"28%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1363,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"32%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"50%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1365,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `affordability-message ${results.affordabilityClass}`,\n                children: results.affordabilityClass === \"green\" ? \"You are well within budget, you should be proud!\" : results.affordabilityClass === \"yellow\" ? \"This house is a little outside of your budget. It is manageable, but you'll need to be more conscious about spending.\" : \"This house is outside of your budget. Maybe another home will be more suitable, but if your heart is set on this one be sure to cut expenses elsewhere.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-summary\",\n            children: activeTab === 'what-can-i-afford' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Maximum Home Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1384,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"highlight\",\n                  children: formatCurrency(results.maxHomePrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1383,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Down Payment (\", results.downPaymentPercent.toFixed(1), \"%):\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.downPaymentAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1393,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loan Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1399,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.maxLoanAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1400,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1398,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1390,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `result-item total ${results.isAffordable ? \"affordable\" : \"unaffordable\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Affordability:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1409,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: results.isAffordable ? \"✓ Affordable\" : \"⚠️ May be too expensive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1410,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Home Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.homePrice)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1420,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1418,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loan Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1426,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.loanAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1427,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1425,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1417,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-breakdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Monthly Payment Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Principal & Interest:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1442,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.baseMonthlyPayment)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1443,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1441,\n                columnNumber: 19\n              }, this), results.monthlyPropertyTax > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Property Tax:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1450,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.monthlyPropertyTax)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1449,\n                columnNumber: 21\n              }, this), results.monthlyInsurance > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Home Insurance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.monthlyInsurance)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1460,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Total Monthly Payment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1467,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.totalMonthlyPayment)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1468,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1466,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 15\n          }, this), paymentsByTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"term-comparison\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Options by Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1478,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"term-options\",\n              children: Object.entries(paymentsByTerm).map(([term, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `term-option ${data.affordabilityClass}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"term-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [term, \" Year \", term === housingData.loanTermYears ? '(selected)' : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1484,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"term-payment\",\n                    children: [formatCurrency(data.totalPayment), \"/mo\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1485,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1483,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"term-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Rate:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1490,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [data.interestRate.toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1491,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1489,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"% of Gross Income:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1495,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [data.percentOfGrossIncome.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1496,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1494,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"% of Take-Home Pay:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1502,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [data.percentOfTakeHomeIncome.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1503,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1501,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Total Interest:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1509,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(data.totalInterest)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1510,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1508,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1488,\n                  columnNumber: 25\n                }, this)]\n              }, term, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1482,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"financial-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-details-btn\",\n              onClick: () => setShowDetailedResults(!showDetailedResults),\n              children: showDetailedResults ? 'Hide Detailed Analysis' : 'Show Detailed Analysis'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1521,\n              columnNumber: 17\n            }, this), showDetailedResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detailed-results\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tax-breakdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Tax Breakdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1532,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Federal Tax:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1534,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [formatCurrency(results.taxResults.federal), \"/year\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1535,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1533,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"FICA:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1538,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [formatCurrency(results.taxResults.fica), \"/year\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1539,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1537,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"State Tax:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1542,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [formatCurrency(results.taxResults.state), \"/year\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1543,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1541,\n                  columnNumber: 23\n                }, this), results.taxResults.local > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Local Tax:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1547,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [formatCurrency(results.taxResults.local), \"/year\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1548,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1546,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item total\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Total Tax:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1552,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [formatCurrency(results.taxResults.total), \"/year\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1553,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1551,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Effective Tax Rate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1556,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [(results.taxResults.effectiveRate * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1557,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1555,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1531,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your details and click \\\"Calculate\\\" to see results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calculator-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"How This Calculator Works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This calculator uses industry-standard affordability guidelines:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"28% Rule:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1572,\n                  columnNumber: 23\n                }, this), \" Your monthly mortgage payment should not exceed 28% of your gross monthly income.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"36% Rule:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1573,\n                  columnNumber: 23\n                }, this), \" Your total monthly debt payments (including mortgage) should not exceed 36% of your gross monthly income.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1573,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The calculator uses these rules to determine either how much home you can afford or whether a specific home price is affordable for you.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1568,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1028,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeAffordabilityCalculator, \"A7p+bJ5vg4F5OKGITCoqRnIZK70=\");\n_c = HomeAffordabilityCalculator;\nexport default HomeAffordabilityCalculator;\nvar _c;\n$RefreshReg$(_c, \"HomeAffordabilityCalculator\");","map":{"version":3,"names":["React","useState","useEffect","INDIANA_COUNTIES","MARYLAND_COUNTIES","MICHIGAN_CITIES","calculateMichiganLocalTax","MISSOURI_CITIES","NEW_JERSEY_CITIES","NEW_YORK_TAX","calculateNYTax","OHIO_MUNICIPALITIES","OREGON_TAX","PENNSYLVANIA_TAX","WEST_VIRGINIA_TAX","STATE_TAX_DATA","jsxDEV","_jsxDEV","Fragment","_Fragment","calculateMonthlyMortgage","homePrice","downPayment","interestRate","loanTermYears","loanAmount","monthlyInterestRate","numberOfPayments","monthlyPayment","Math","pow","calculateMaxHomePrice","monthlyGrossIncome","monthlyDebts","maxMonthlyPaymentPercent","maxMonthlyPayment","maxLoanAmount","maxHomePrice","formatCurrency","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","formatPercentage","toFixed","FEDERAL_TAX_BRACKETS_2024","min","max","rate","Infinity","calculateProgressiveTax","income","brackets","tax","i","length","currentBracket","bracketMin","bracketMax","taxableInThisBracket","calculateExampleTax","federalTax","console","log","totalTax","bracket","taxableAmount","taxInBracket","toLocaleString","FICA_RATES","socialSecurity","medicare","additionalMedicare","socialSecurityWageCap","STATE_TAX_RATES","DEFAULT_INTEREST_RATES","convertToAnnualIncome","payType","numericIncome","parseFloat","isNaN","calculateFICATax","socialSecurityTax","medicareTax","total","getTaxRateValue","taxData","type","calculateLocalTax","state","city","hasLocalTax","cities","taxResult","cityTax","calculateTax","localTax","counties","countyData","calculateFederalTax","calculateStateTax","calculateTotalTax","ficaTaxes","stateTax","federal","fica","ficaSocialSecurity","ficaMedicare","local","effectiveRate","getAffordabilityColorClass","percentage","hasDebts","HomeAffordabilityCalculator","_s","incomeData","setIncomeData","useCustomTakeHome","monthlyTakeHome","housingData","setHousingData","downPaymentType","downPaymentPercent","downPaymentAmount","includePropertyTax","propertyTaxRate","includeHomeInsurance","homeInsurance","financialData","setFinancialData","errors","setErrors","results","setResults","activeTab","setActiveTab","showDetailedResults","setShowDetailedResults","showAdvancedOptions","setShowAdvancedOptions","paymentsByTerm","setPaymentsByTerm","getJurisdictionsForState","Object","keys","exceptions","slice","getJurisdictionLabel","stateData","taxType","term","parseInt","defaultRate","prev","toString","percent","amount","handleIncomeChange","field","handleHousingChange","handleFinancialChange","handleDownPaymentTypeChange","validateForm","newErrors","calculateAffordability","annualIncome","taxResults","takeHomePay","frontEndMaxPayment","backEndMaxPayment","additionalHousingCosts","annualInsurance","maxPIPayment","general","fixedDownPayment","maxLoanPayment","baseMonthlyPayment","totalMonthlyPayment","monthlyPropertyTax","monthlyInsurance","termOptions","paymentOptions","forEach","termInterestRate","termPayment","totalTermPayment","totalInterest","percentOfGrossIncome","percentOfTakeHomeIncome","affordabilityClass","payment","totalPayment","error","analyzeMortgage","isAffordable","totalMonthlyDebtPayments","backEndRatio","handleCalculate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","display","flexDirection","flex","marginRight","onChange","e","target","placeholder","disabled","map","jurisdiction","checked","step","marginLeft","width","entries","data","_c","$RefreshReg$"],"sources":["/Users/elizabethrichardson/taxcalc/src/components/HomeAffordabilityCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TaxCalculator.css';\nimport { INDIANA_COUNTIES } from '../data/indianaTaxData';\nimport { MARYLAND_COUNTIES } from '../data/marylandTaxData';\nimport { MICHIGAN_CITIES, calculateMichiganLocalTax } from '../data/michiganTaxData';\nimport { MISSOURI_CITIES } from '../data/missouriTaxData';\nimport { NEW_JERSEY_CITIES } from '../data/newJerseyTaxData';\nimport { NEW_YORK_TAX, calculateNYTax } from '../data/newYorkTaxData';\nimport { OHIO_MUNICIPALITIES } from '../data/ohioTaxData';\nimport { OREGON_TAX } from '../data/oregon-tax';\nimport { PENNSYLVANIA_TAX } from '../data/pennsylvaniaTaxData';\nimport { WEST_VIRGINIA_TAX } from '../data/westVirginiaTaxData';\nimport { STATE_TAX_DATA } from '../data/tax-data';\n\n// Utility functions\nconst calculateMonthlyMortgage = (homePrice, downPayment, interestRate, loanTermYears) => {\n  // Calculate loan amount\n  const loanAmount = homePrice - downPayment;\n  \n  // Convert annual interest rate to monthly and decimal form\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Calculate number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    return loanAmount / numberOfPayments;\n  }\n  \n  // Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n  const monthlyPayment = loanAmount * \n    (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments)) / \n    (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n  \n  return monthlyPayment;\n};\n\n// Calculate maximum home price based on gross income\nconst calculateMaxHomePrice = (monthlyGrossIncome, interestRate, loanTermYears, downPayment, monthlyDebts = 0) => {\n  // Maximum payment based on whether there are debts included\n  // If debts included, use 36% rule (minus debts), otherwise use 28% rule\n  const maxMonthlyPaymentPercent = monthlyDebts > 0 ? 0.36 : 0.28;\n  const maxMonthlyPayment = (monthlyGrossIncome * maxMonthlyPaymentPercent) - monthlyDebts;\n  \n  if (maxMonthlyPayment <= 0) return 0;\n  \n  // Convert annual interest rate to monthly\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    const maxLoanAmount = maxMonthlyPayment * numberOfPayments;\n    return maxLoanAmount + downPayment;\n  }\n  \n  // Calculate maximum loan amount\n  // Using formula: P = pmt * (1 - (1 + r)^-n) / r\n  const maxLoanAmount = maxMonthlyPayment * \n    (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / \n    monthlyInterestRate;\n  \n  // Calculate max home price (loan amount + down payment)\n  const maxHomePrice = maxLoanAmount + downPayment;\n  \n  return maxHomePrice;\n};\n\n// Format currency for display\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Format percentage for display\nconst formatPercentage = (value) => {\n  return value.toFixed(1) + '%';\n};\n\n// Federal Tax Brackets 2024\n// Define the federal tax brackets correctly with \"limit\" being the upper bound of each bracket\nconst FEDERAL_TAX_BRACKETS_2024 = [\n  { min: 0, max: 11600, rate: 0.10 },\n  { min: 11600, max: 47150, rate: 0.12 },\n  { min: 47150, max: 100525, rate: 0.22 },\n  { min: 100525, max: 191950, rate: 0.24 },\n  { min: 191950, max: 243725, rate: 0.32 },\n  { min: 243725, max: 609350, rate: 0.35 },\n  { min: 609350, max: Infinity, rate: 0.37 }\n];\n\n// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax = (income, brackets) => {\n  let tax = 0;\n  \n  for (let i = 0; i < brackets.length; i++) {\n    const currentBracket = brackets[i];\n    \n    // Calculate income in this bracket\n    const bracketMin = currentBracket.min;\n    const bracketMax = currentBracket.max;\n    \n    if (income > bracketMin) {\n      // Calculate the portion of income that falls within this bracket\n      const taxableInThisBracket = Math.min(income, bracketMax) - bracketMin;\n      tax += taxableInThisBracket * currentBracket.rate;\n    }\n    \n    // If we've processed all income, we can stop\n    if (income <= bracketMax) break;\n  }\n  \n  return tax;\n};\n\n// Example calculation for $58,000 income\nfunction calculateExampleTax() {\n  const income = 58000;\n  const federalTax = calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n  \n  console.log(`Federal tax on $${income.toFixed(2)}:`);\n  \n  // Show calculation breakdown\n  let totalTax = 0;\n  for (let i = 0; i < FEDERAL_TAX_BRACKETS_2024.length; i++) {\n    const bracket = FEDERAL_TAX_BRACKETS_2024[i];\n    if (income > bracket.min) {\n      const taxableAmount = Math.min(income, bracket.max) - bracket.min;\n      const taxInBracket = taxableAmount * bracket.rate;\n      totalTax += taxInBracket;\n      \n      console.log(`${bracket.min.toLocaleString()} to ${Math.min(income, bracket.max).toLocaleString()}: ${taxableAmount.toLocaleString()} @ ${(bracket.rate * 100).toFixed(1)}% = $${taxInBracket.toFixed(2)}`);\n    }\n    \n    if (income <= bracket.max) break;\n  }\n  \n  console.log(`Total federal tax: $${totalTax.toFixed(2)}`);\n  console.log(`Effective tax rate: ${((totalTax / income) * 100).toFixed(2)}%`);\n  \n  return federalTax;\n}\n\ncalculateExampleTax();\n\n// FICA rates\nconst FICA_RATES = {\n  socialSecurity: 0.062,  // 6.2%\n  medicare: 0.0145,      // 1.45%\n  additionalMedicare: 0.009, // 0.9% additional Medicare tax for high earners\n  socialSecurityWageCap: 168600 // 2024 wage cap for Social Security tax\n};\n\n// State tax rates (simplified)\nconst STATE_TAX_RATES = {\n  \"Alabama\": 0.05,\n  \"Alaska\": 0.00,\n  \"Arizona\": 0.025,\n  \"Arkansas\": 0.039,\n  \"California\": 0.095,\n  \"Colorado\": 0.044,\n  \"Connecticut\": 0.0699,\n  \"Delaware\": 0.066,\n  \"Florida\": 0.00,\n  \"Georgia\": 0.0539,\n  \"Hawaii\": 0.11,\n  \"Idaho\": 0.059,\n  \"Illinois\": 0.049,\n  \"Indiana\": 0.03,\n  \"Iowa\": 0.038,\n  \"Kansas\": 0.055,\n  \"Kentucky\": 0.04,\n  \"Louisiana\": 0.03,\n  \"Maine\": 0.071,\n  \"Maryland\": 0.057,\n  \"Massachusetts\": 0.09,\n  \"Michigan\": 0.042,\n  \"Minnesota\": 0.098,\n  \"Mississippi\": 0.044,\n  \"Missouri\": 0.047,\n  \"Montana\": 0.059,\n  \"Nebraska\": 0.052,\n  \"Nevada\": 0.00,\n  \"New Hampshire\": 0.05,\n  \"New Jersey\": 0.057,\n  \"New Mexico\": 0.059,\n  \"New York\": 0.065,\n  \"North Carolina\": 0.0425,\n  \"North Dakota\": 0.025,\n  \"Ohio\": 0.035,\n  \"Oklahoma\": 0.0475,\n  \"Oregon\": 0.099,\n  \"Pennsylvania\": 0.0307,\n  \"Rhode Island\": 0.0599,\n  \"South Carolina\": 0.062,\n  \"South Dakota\": 0.00,\n  \"Tennessee\": 0.00,\n  \"Texas\": 0.00,\n  \"Utah\": 0.0455,\n  \"Vermont\": 0.0875,\n  \"Virginia\": 0.0575,\n  \"Washington\": 0.00,\n  \"West Virginia\": 0.0482,\n  \"Wisconsin\": 0.0765,\n  \"Wyoming\": 0.00\n};\n\n// Default interest rates by term\nconst DEFAULT_INTEREST_RATES = {\n  10: 5.84,\n  15: 5.96,\n  30: 6.5\n};\n\n// Convert various income types to annual\nconst convertToAnnualIncome = (income, payType) => {\n  const numericIncome = parseFloat(income);\n  \n  if (isNaN(numericIncome)) return 0;\n  \n  switch (payType) {\n    case 'hourly':\n      return numericIncome * 40 * 52; // 40 hours per week, 52 weeks per year\n    case 'weekly':\n      return numericIncome * 52;\n    case 'biweekly':\n      return numericIncome * 26;\n    case 'monthly':\n      return numericIncome * 12;\n    case 'annual':\n    default:\n      return numericIncome;\n  }\n};\n\n\n// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax = (income) => {\n  const { socialSecurity, medicare, additionalMedicare, socialSecurityWageCap } = FICA_RATES;\n  \n  // Social Security has a wage cap\n  const socialSecurityTax = Math.min(income, socialSecurityWageCap) * socialSecurity;\n  \n  // Regular Medicare tax\n  let medicareTax = income * medicare;\n  \n  // Additional Medicare tax for high earners (over $200,000)\n  if (income > 200000) {\n    medicareTax += (income - 200000) * additionalMedicare;\n  }\n  \n  return {\n    socialSecurity: socialSecurityTax,\n    medicare: medicareTax,\n    total: socialSecurityTax + medicareTax\n  };\n};\n\n// Helper function to safely get tax rate value from different tax structures\nconst getTaxRateValue = (taxData) => {\n  if (!taxData) return 0;\n  \n  if (taxData.type === \"percentage\" || taxData.type === \"flat\") {\n    return taxData.value;\n  } else if (taxData.type === \"range\") {\n    return (taxData.min + taxData.max) / 2; // Use average of range\n  } else if (taxData.type === \"fixed\") {\n    return taxData.value;\n  }\n  \n  return 0;\n};\n\n// Calculate local tax (city or county)\nconst calculateLocalTax = (income, state, city) => {\n  if (!state || !city || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n    return 0;\n  }\n  \n  switch (state) {\n    case 'Indiana':\n      if (INDIANA_COUNTIES[city]) {\n        return income * getTaxRateValue(INDIANA_COUNTIES[city]);\n      }\n      break;\n    case 'Maryland':\n      if (MARYLAND_COUNTIES[city]) {\n        return income * getTaxRateValue(MARYLAND_COUNTIES[city]);\n      }\n      break;\n    case 'Michigan':\n      return calculateMichiganLocalTax(income, city);\n    case 'Missouri':\n      if (MISSOURI_CITIES[city]) {\n        return income * getTaxRateValue(MISSOURI_CITIES[city]);\n      }\n      break;\n    case 'New Jersey':\n      if (NEW_JERSEY_CITIES[city]) {\n        return income * getTaxRateValue(NEW_JERSEY_CITIES[city]);\n      }\n      break;\n    case 'New York':\n      if (NEW_YORK_TAX.cities[city]) {\n        const taxResult = calculateNYTax(income, city);\n        return taxResult.cityTax;\n      }\n      break;\n    case 'Ohio':\n      if (OHIO_MUNICIPALITIES[city]) {\n        return income * getTaxRateValue(OHIO_MUNICIPALITIES[city]);\n      }\n      break;\n    case 'Oregon':\n      return OREGON_TAX.calculateTax(income).localTax;\n    case 'Pennsylvania':\n      if (PENNSYLVANIA_TAX.counties[city]) {\n        const countyData = PENNSYLVANIA_TAX.counties[city];\n        if (countyData.type === \"fixed\") {\n          return income * countyData.value;\n        } else if (countyData.type === \"range\") {\n          return income * ((countyData.max + countyData.min) / 2);\n        }\n      }\n      break;\n    case 'West Virginia':\n      if (WEST_VIRGINIA_TAX.cities[city]) {\n        return WEST_VIRGINIA_TAX.calculateTax(city);\n      }\n      break;\n  }\n  \n  return 0;\n};\n\n// Calculate federal tax\nconst calculateFederalTax = (income) => {\n  return calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n};\n\n// Calculate state tax (simplified)\nconst calculateStateTax = (income, state) => {\n  if (!state || !STATE_TAX_RATES[state]) return 0;\n  return income * STATE_TAX_RATES[state];\n};\n\n// Calculate total tax burden\nconst calculateTotalTax = (income, state) => {\n  const federalTax = calculateFederalTax(income);\n  const ficaTaxes = calculateFICATax(income);\n  const stateTax = calculateStateTax(income, state);\n  \n  return {\n    federal: federalTax,\n    fica: ficaTaxes.total,\n    ficaSocialSecurity: ficaTaxes.socialSecurity,\n    ficaMedicare: ficaTaxes.medicare,\n    state: stateTax,\n    local: 0, // This will be calculated separately if local jurisdiction is provided\n    total: federalTax + ficaTaxes.total + stateTax,\n    effectiveRate: (federalTax + ficaTaxes.total + stateTax) / income\n  };\n};\n\n// Get affordability color class based on income percentage and debt situation\nconst getAffordabilityColorClass = (percentage, hasDebts) => {\n  if (hasDebts) {\n    // Using 36% rule with debts\n    if (percentage <= 36) return \"green\";\n    if (percentage <= 42) return \"yellow\";\n    return \"red\";\n  } else {\n    // Using 28% rule without debts\n    if (percentage <= 28) return \"green\";\n    if (percentage <= 32) return \"yellow\";\n    return \"red\";\n  }\n};\n\nconst HomeAffordabilityCalculator = () => {\n  // Income and tax state\n  const [incomeData, setIncomeData] = useState({\n    income: '',\n    payType: 'annual',\n    state: '',\n    city: '',\n    useCustomTakeHome: false,\n    monthlyTakeHome: ''\n  });\n\n  // Housing state - FIXED: Added interestRate to initial state\n  const [housingData, setHousingData] = useState({\n    homePrice: '',\n    downPaymentType: 'percent', // 'percent' or 'amount'\n    downPaymentPercent: '20',\n    downPaymentAmount: '',\n    loanTermYears: '30',\n    interestRate: '6.5', // FIXED: Added default interest rate\n    includePropertyTax: true,\n    propertyTaxRate: '1.1',\n    includeHomeInsurance: true,\n    homeInsurance: '1200'\n  });\n\n  // Additional financial details\n  const [financialData, setFinancialData] = useState({\n    monthlyDebts: ''\n  });\n\n  // Results and UI state\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('what-can-i-afford');\n  const [showDetailedResults, setShowDetailedResults] = useState(false);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [paymentsByTerm, setPaymentsByTerm] = useState(null);\n\n  // Add city selection for local tax calculations\n  const getJurisdictionsForState = (state) => {\n    if (!state || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n      return [];\n    }\n    \n    switch (state) {\n      case 'Indiana':\n        return Object.keys(INDIANA_COUNTIES);\n      case 'Maryland':\n        return Object.keys(MARYLAND_COUNTIES);\n      case 'Michigan':\n        return [...Object.keys(MICHIGAN_CITIES.exceptions), 'Other'];\n      case 'Missouri':\n        return Object.keys(MISSOURI_CITIES);\n      case 'New Jersey':\n        return Object.keys(NEW_JERSEY_CITIES);\n      case 'New York':\n        return Object.keys(NEW_YORK_TAX.cities);\n      case 'Ohio':\n        return Object.keys(OHIO_MUNICIPALITIES);\n      case 'Pennsylvania':\n        return ['Philadelphia', ...Object.keys(PENNSYLVANIA_TAX.counties).slice(0, 10), 'Other'];\n      case 'West Virginia':\n        return Object.keys(WEST_VIRGINIA_TAX.cities), 'Other';\n      default:\n        return [];\n    }\n  };\n\n  // Get jurisdiction label based on state\n  const getJurisdictionLabel = (state) => {\n    if (!state || !STATE_TAX_DATA[state]) return 'Municipality/City';\n    \n    const stateData = STATE_TAX_DATA[state];\n    \n    switch (stateData.taxType) {\n      case 'county':\n        return 'County';\n      case 'city':\n        return 'City/Municipality';\n      case 'school_district':\n        return 'School District';\n      case 'both':\n        return 'City/County';\n      default:\n        return 'Municipality/City';\n    }\n  };\n\n  // Set interest rate based on loan term\n  useEffect(() => {\n    const term = parseInt(housingData.loanTermYears, 10);\n    const defaultRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n    setHousingData(prev => ({ ...prev, interestRate: defaultRate.toString() })); // FIXED: Convert to string\n  }, [housingData.loanTermYears]);\n\n  // Calculate down payment amount when percent changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'percent' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const percent = parseFloat(housingData.downPaymentPercent);\n      if (!isNaN(homePrice) && !isNaN(percent)) {\n        const amount = homePrice * (percent / 100);\n        setHousingData(prev => ({ \n          ...prev, \n          downPaymentAmount: amount.toFixed(0)\n        }));\n      }\n    }\n  }, [housingData.downPaymentPercent, housingData.homePrice, housingData.downPaymentType]);\n\n  // Calculate down payment percent when amount changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'amount' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const amount = parseFloat(housingData.downPaymentAmount);\n      if (!isNaN(homePrice) && !isNaN(amount) && homePrice > 0) {\n        const percent = (amount / homePrice) * 100;\n        setHousingData(prev => ({ \n          ...prev, \n          downPaymentPercent: percent.toFixed(1)\n        }));\n      }\n    }\n  }, [housingData.downPaymentAmount, housingData.homePrice, housingData.downPaymentType]);\n\n  // Handle changes to income data\n  const handleIncomeChange = (field, value) => {\n    setIncomeData(prev => {\n      // If changing state, reset city\n      if (field === 'state') {\n        return { ...prev, [field]: value, city: '' };\n      }\n      return { ...prev, [field]: value };\n    });\n  };\n\n  // Handle changes to housing data\n  const handleHousingChange = (field, value) => {\n    setHousingData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to financial data\n  const handleFinancialChange = (field, value) => {\n    setFinancialData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Switch between percentage and amount for down payment\n  const handleDownPaymentTypeChange = (type) => {\n    setHousingData(prev => ({\n      ...prev,\n      downPaymentType: type\n    }));\n  };\n\n  // Validate the input form\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!incomeData.useCustomTakeHome) {\n      // Validate income inputs\n      if (!incomeData.income) {\n        newErrors.income = 'Income is required';\n      } else if (isNaN(parseFloat(incomeData.income)) || parseFloat(incomeData.income) <= 0) {\n        newErrors.income = 'Please enter a valid income amount';\n      }\n\n      if (!incomeData.state) {\n        newErrors.state = 'State selection is required for tax calculation';\n      }\n      \n      // Validate city selection if state has local taxes\n      if (incomeData.state && STATE_TAX_DATA[incomeData.state] && \n          STATE_TAX_DATA[incomeData.state].hasLocalTax && !incomeData.city) {\n        newErrors.city = `${getJurisdictionLabel(incomeData.state)} selection is required for accurate tax calculation`;\n      }\n    } else {\n      // Validate custom take-home pay\n      if (!incomeData.monthlyTakeHome) {\n        newErrors.monthlyTakeHome = 'Monthly take-home pay is required';\n      } else if (isNaN(parseFloat(incomeData.monthlyTakeHome)) || parseFloat(incomeData.monthlyTakeHome) <= 0) {\n        newErrors.monthlyTakeHome = 'Please enter a valid monthly take-home amount';\n      }\n    }\n\n    // If we're analyzing a specific home, validate home price\n    if (activeTab === 'analyze-mortgage' && !housingData.homePrice) {\n      newErrors.homePrice = 'Home price is required';\n    } else if (activeTab === 'analyze-mortgage' && (isNaN(parseFloat(housingData.homePrice)) || parseFloat(housingData.homePrice) <= 0)) {\n      newErrors.homePrice = 'Please enter a valid home price';\n    }\n\n    // Validate down payment\n    if (housingData.downPaymentType === 'percent') {\n      if (!housingData.downPaymentPercent || isNaN(parseFloat(housingData.downPaymentPercent)) || \n          parseFloat(housingData.downPaymentPercent) < 0 || parseFloat(housingData.downPaymentPercent) > 100) {\n        newErrors.downPaymentPercent = 'Down payment must be between 0% and 100%';\n      }\n    } else {\n      if (!housingData.downPaymentAmount || isNaN(parseFloat(housingData.downPaymentAmount)) || parseFloat(housingData.downPaymentAmount) < 0) {\n        newErrors.downPaymentAmount = 'Please enter a valid down payment amount';\n      }\n    }\n\n    // FIXED: Validate interest rate\n    if (!housingData.interestRate || isNaN(parseFloat(housingData.interestRate)) || parseFloat(housingData.interestRate) < 0) {\n      newErrors.interestRate = 'Please enter a valid interest rate';\n    }\n\n    // Validate optional financial data\n    if (financialData.monthlyDebts && (isNaN(parseFloat(financialData.monthlyDebts)) || parseFloat(financialData.monthlyDebts) < 0)) {\n      newErrors.monthlyDebts = 'Please enter a valid monthly debt amount';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Calculate affordability (what can I afford)\n  const calculateAffordability = () => {\n    if (!validateForm()) return;\n\n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate) || DEFAULT_INTEREST_RATES[30]; // FIXED: Added fallback\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      \n      // Determine down payment based on type\n      let downPaymentPercent, downPaymentAmount;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        // Will calculate actual amount after we know max home price\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        // Will use this fixed amount\n      }\n      \n      // Calculate affordability ratios\n      // Front-end ratio: 28% of monthly gross income for housing (PITI)\n      const frontEndMaxPayment = monthlyGrossIncome * 0.28;\n      // Back-end ratio: 36% of monthly gross income for all debt payments\n      const backEndMaxPayment = (monthlyGrossIncome * 0.36) - monthlyDebts;\n      // Use the more conservative of the two\n      const maxMonthlyPayment = Math.min(frontEndMaxPayment, backEndMaxPayment);\n      \n      // Adjust for property tax and insurance\n      let additionalHousingCosts = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        // Will estimate with a placeholder value for now\n        additionalHousingCosts += (300000 * propertyTaxRate) / 12; // Placeholder home value\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        additionalHousingCosts += annualInsurance / 12;\n      }\n      \n      // Adjust max payment to account for property tax and insurance\n      const maxPIPayment = maxMonthlyPayment - additionalHousingCosts;\n      \n      if (maxPIPayment <= 0) {\n        setErrors({ \n          general: 'Your expenses and debts are too high relative to your income for a mortgage'\n        });\n        return;\n      }\n      \n      // Calculate max home price based on the down payment situation\n      let maxHomePrice, maxLoanAmount;\n      \n      if (housingData.downPaymentType === 'percent') {\n        // Percentage-based down payment\n        maxHomePrice = calculateMaxHomePrice(\n          monthlyGrossIncome,\n          interestRate,\n          loanTermYears,\n          0, // Temporarily use 0 for down payment\n          monthlyDebts\n        );\n        \n        // Now apply the down payment percentage\n        downPaymentAmount = maxHomePrice * (downPaymentPercent / 100);\n        maxLoanAmount = maxHomePrice - downPaymentAmount;\n      } else {\n        // Fixed amount down payment\n        // For fixed down payment, we need to calculate differently\n        const fixedDownPayment = parseFloat(housingData.downPaymentAmount);\n        \n        // Calculate max loan amount first\n        const maxLoanPayment = maxPIPayment;\n        const monthlyInterestRate = (interestRate / 100) / 12;\n        const numberOfPayments = loanTermYears * 12;\n        \n        if (monthlyInterestRate === 0) {\n          maxLoanAmount = maxLoanPayment * numberOfPayments;\n        } else {\n          maxLoanAmount = maxLoanPayment * \n            (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / \n            monthlyInterestRate;\n        }\n        \n        // Then calculate max home price by adding fixed down payment\n        maxHomePrice = maxLoanAmount + fixedDownPayment;\n        downPaymentAmount = fixedDownPayment;\n        downPaymentPercent = (fixedDownPayment / maxHomePrice) * 100;\n      }\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        maxHomePrice,\n        downPaymentAmount,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate more precise property tax and insurance now that we know max home price\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (maxHomePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        \n        const termPayment = calculateMonthlyMortgage(\n          maxHomePrice,\n          downPaymentAmount,\n          termInterestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        // Calculate total interest paid over loan term\n        const totalInterest = (termPayment * term * 12) - maxLoanAmount;\n        \n        // Calculate percentage of gross income\n        const percentOfGrossIncome = (totalTermPayment / monthlyGrossIncome) * 100;\n        \n        // Calculate percentage of take-home income\n        const percentOfTakeHomeIncome = (totalTermPayment / monthlyTakeHome) * 100;\n        \n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        \n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n      \n      // Calculate percentage of gross income\n      const percentOfGrossIncome = (totalMonthlyPayment / monthlyGrossIncome) * 100;\n      \n      // Calculate percentage of take-home income\n      const percentOfTakeHomeIncome = (totalMonthlyPayment / monthlyTakeHome) * 100;\n      \n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n      \n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        maxHomePrice: maxHomePrice,\n        maxLoanAmount: maxLoanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n        affordabilityClass: affordabilityClass,\n        taxResults: taxResults\n      });\n      \n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n      \n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: 'An error occurred during calculations. Please check your inputs.' });\n    }\n  };\n  \n  // Calculate affordability for a specific home price - FIXED: Added missing function\n  const analyzeMortgage = () => {\n    if (!validateForm()) return;\n    \n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n      \n      // Parse inputs for the specified home\n      const homePrice = parseFloat(housingData.homePrice);\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate) || DEFAULT_INTEREST_RATES[30]; // FIXED: Added fallback\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      \n      // Calculate down payment\n      let downPaymentAmount, downPaymentPercent;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        downPaymentAmount = homePrice * (downPaymentPercent / 100);\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        downPaymentPercent = (downPaymentAmount / homePrice) * 100;\n      }\n      \n      // Calculate loan amount\n      const loanAmount = homePrice - downPaymentAmount;\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        homePrice,\n        downPaymentAmount,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate property tax and insurance\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (homePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate percentage of gross income\n      const percentOfGrossIncome = (totalMonthlyPayment / monthlyGrossIncome) * 100;\n      \n      // Calculate percentage of take-home income\n      const percentOfTakeHomeIncome = (totalMonthlyPayment / monthlyTakeHome) * 100;\n      \n      // Determine affordability using standard rules\n      let isAffordable = false;\n      if (hasDebts) {\n        // If they have other debts, use back-end ratio (36% rule)\n        const totalMonthlyDebtPayments = totalMonthlyPayment + monthlyDebts;\n        const backEndRatio = (totalMonthlyDebtPayments / monthlyGrossIncome) * 100;\n        isAffordable = backEndRatio <= 36;\n      } else {\n        // Otherwise use front-end ratio (28% rule)\n        isAffordable = percentOfGrossIncome <= 28;\n      }\n      \n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n      \n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        \n        const termPayment = calculateMonthlyMortgage(\n          homePrice,\n          downPaymentAmount,\n          termInterestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        // Calculate total interest paid over loan term\n        const totalInterest = (termPayment * term * 12) - loanAmount;\n        \n        // Calculate percentage of gross income\n        const percentOfGrossIncome = (totalTermPayment / monthlyGrossIncome) * 100;\n        \n        // Calculate percentage of take-home income\n        const percentOfTakeHomeIncome = (totalTermPayment / monthlyTakeHome) * 100;\n        \n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        \n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n      \n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        homePrice: homePrice,\n        loanAmount: loanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n        affordabilityClass: affordabilityClass,\n        isAffordable: isAffordable,\n        taxResults: taxResults\n      });\n      \n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n      \n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: 'An error occurred during calculations. Please check your inputs.' });\n    }\n  };\n  \n  // Handle calculation based on active tab\n  const handleCalculate = () => {\n    if (activeTab === 'what-can-i-afford') {\n      calculateAffordability();\n    } else {\n      analyzeMortgage();\n    }\n  };\n  \n  return (\n    <div className=\"calculator-container\">\n      <div className=\"calculator-header\">\n        <h1>Home Buyer's Financial Calculator</h1>\n        <h2>Home Affordability Calculator</h2>\n        <p className=\"calculator-description\">\n          Use this calculator to understand how much home you can afford based on your income and financial situation. \n          The calculator considers both your take-home pay and recommended mortgage affordability guidelines.\n        </p>\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'what-can-i-afford' ? 'active' : ''}`}\n            onClick={() => setActiveTab('what-can-i-afford')}\n          >\n            What Can I Afford?\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'analyze-mortgage' ? 'active' : ''}`}\n            onClick={() => setActiveTab('analyze-mortgage')}\n          >\n            Analyze Mortgage\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"calculator-body\" style={{ display: 'flex', flexDirection: 'row' }}>\n        {/* Left Column - Inputs */}\n        <div className=\"calculator-inputs\" style={{ flex: '1', marginRight: '20px' }}>\n          {/* Income & Location Section */}\n          <div className=\"input-section\">\n            <h2>Income & Location</h2>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Income Amount</label>\n                <input\n                  type=\"number\"\n                  value={incomeData.income}\n                  onChange={(e) => handleIncomeChange('income', e.target.value)}\n                  placeholder=\"Enter income\"\n                  disabled={incomeData.useCustomTakeHome}\n                  className={errors.income ? 'error' : ''}\n                />\n                {errors.income && <div className=\"error-message\">{errors.income}</div>}\n              </div>\n              \n              <div className=\"input-group\">\n                <label>Pay Frequency</label>\n                <select\n                  value={incomeData.payType}\n                  onChange={(e) => handleIncomeChange('payType', e.target.value)}\n                  disabled={incomeData.useCustomTakeHome}\n                >\n                  <option value=\"hourly\">Hourly</option>\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"biweekly\">Bi-weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"annual\">Annual</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>State</label>\n                <select\n                  value={incomeData.state}\n                  onChange={(e) => handleIncomeChange('state', e.target.value)}\n                  disabled={incomeData.useCustomTakeHome}\n                  className={errors.state ? 'error' : ''}\n                >\n                  <option value=\"\">Select State</option>\n                  {Object.keys(STATE_TAX_RATES).map(state => (\n                    <option key={state} value={state}>{state}</option>\n                  ))}\n                </select>\n                {errors.state && <div className=\"error-message\">{errors.state}</div>}\n              </div>\n              \n              {incomeData.state && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax && (\n                <div className=\"input-group\">\n                  <label>{getJurisdictionLabel(incomeData.state)}</label>\n                  <select\n                    value={incomeData.city}\n                    onChange={(e) => handleIncomeChange('city', e.target.value)}\n                    disabled={incomeData.useCustomTakeHome}\n                    className={errors.city ? 'error' : ''}\n                  >\n                    <option value=\"\">Select {getJurisdictionLabel(incomeData.state)}</option>\n                    {getJurisdictionsForState(incomeData.state).map(jurisdiction => (\n                      <option key={jurisdiction} value={jurisdiction}>{jurisdiction}</option>\n                    ))}\n                  </select>\n                  {errors.city && <div className=\"error-message\">{errors.city}</div>}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"input-toggle\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={incomeData.useCustomTakeHome}\n                  onChange={(e) => handleIncomeChange('useCustomTakeHome', e.target.checked)}\n                />\n                I know my monthly take-home pay\n              </label>\n            </div>\n            \n            {incomeData.useCustomTakeHome && (\n              <div className=\"input-group\">\n                <label>Monthly Take-Home Pay</label>\n                <input\n                  type=\"number\"\n                  value={incomeData.monthlyTakeHome}\n                  onChange={(e) => handleIncomeChange('monthlyTakeHome', e.target.value)}\n                  placeholder=\"Enter monthly take-home pay\"\n                  className={errors.monthlyTakeHome ? 'error' : ''}\n                />\n                {errors.monthlyTakeHome && <div className=\"error-message\">{errors.monthlyTakeHome}</div>}\n              </div>\n            )}\n          </div>\n          \n          {/* Home Details Section */}\n          <div className=\"input-section\">\n            <h2>Home Details</h2>\n            \n            {activeTab === 'analyze-mortgage' && (\n              <div className=\"input-group\">\n                <label>Home Price</label>\n                <input\n                  type=\"number\"\n                  value={housingData.homePrice}\n                  onChange={(e) => handleHousingChange('homePrice', e.target.value)}\n                  placeholder=\"Enter home price\"\n                  className={errors.homePrice ? 'error' : ''}\n                />\n                {errors.homePrice && <div className=\"error-message\">{errors.homePrice}</div>}\n              </div>\n            )}\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Down Payment</label>\n                <div className=\"toggle-input-group\">\n                  <div className=\"toggle-buttons\">\n                    <button\n                      type=\"button\"\n                      className={`toggle-button ${housingData.downPaymentType === 'percent' ? 'active' : ''}`}\n                      onClick={() => handleDownPaymentTypeChange('percent')}\n                    >\n                      %\n                    </button>\n                    <button\n                      type=\"button\"\n                      className={`toggle-button ${housingData.downPaymentType === 'amount' ? 'active' : ''}`}\n                      onClick={() => handleDownPaymentTypeChange('amount')}\n                    >\n                      $\n                    </button>\n                  </div>\n                  \n                  {housingData.downPaymentType === 'percent' ? (\n                    <input\n                      type=\"number\"\n                      value={housingData.downPaymentPercent}\n                      onChange={(e) => handleHousingChange('downPaymentPercent', e.target.value)}\n                      placeholder=\"Enter percentage\"\n                      className={errors.downPaymentPercent ? 'error' : ''}\n                    />\n                  ) : (\n                    <input\n                      type=\"number\"\n                      value={housingData.downPaymentAmount}\n                      onChange={(e) => handleHousingChange('downPaymentAmount', e.target.value)}\n                      placeholder=\"Enter amount\"\n                      className={errors.downPaymentAmount ? 'error' : ''}\n                    />\n                  )}\n                </div>\n                {errors.downPaymentPercent && <div className=\"error-message\">{errors.downPaymentPercent}</div>}\n                {errors.downPaymentAmount && <div className=\"error-message\">{errors.downPaymentAmount}</div>}\n              </div>\n              \n              <div className=\"input-group\">\n                <label>Loan Term</label>\n                <select\n                  value={housingData.loanTermYears}\n                  onChange={(e) => handleHousingChange('loanTermYears', e.target.value)}\n                >\n                  <option value=\"10\">10 years</option>\n                  <option value=\"15\">15 years</option>\n                  <option value=\"30\">30 years</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Interest Rate (%)</label>\n                <input\n                  type=\"number\"\n                  value={housingData.interestRate}\n                  onChange={(e) => handleHousingChange('interestRate', e.target.value)}\n                  step=\"0.01\"\n                  min=\"0\"\n                  max=\"15\"\n                  className={errors.interestRate ? 'error' : ''}\n                />\n                {errors.interestRate && <div className=\"error-message\">{errors.interestRate}</div>}\n              </div>\n            </div>\n            \n            <div className=\"toggle-section\">\n              <button\n                type=\"button\"\n                className=\"toggle-advanced-btn\"\n                onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}\n              >\n                {showAdvancedOptions ? 'Hide Advanced Options' : 'Show Advanced Options'}\n              </button>\n              \n              {showAdvancedOptions && (\n                <div className=\"advanced-options\">\n                  <div className=\"input-toggle\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={housingData.includePropertyTax}\n                        onChange={(e) => handleHousingChange('includePropertyTax', e.target.checked)}\n                      />\n                      Include Property Tax\n                    </label>\n                  </div>\n                  \n                  {housingData.includePropertyTax && (\n                    <div className=\"input-group\">\n                      <label>Property Tax Rate (%/year)</label>\n                      <input\n                        type=\"number\"\n                        value={housingData.propertyTaxRate}\n                        onChange={(e) => handleHousingChange('propertyTaxRate', e.target.value)}\n                        step=\"0.01\"\n                        min=\"0\"\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"input-toggle\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={housingData.includeHomeInsurance}\n                        onChange={(e) => handleHousingChange('includeHomeInsurance', e.target.checked)}\n                      />\n                      Include Home Insurance\n                    </label>\n                  </div>\n                  \n                  {housingData.includeHomeInsurance && (\n                    <div className=\"input-group\">\n                      <label>Annual Home Insurance ($)</label>\n                      <input\n                        type=\"number\"\n                        value={housingData.homeInsurance}\n                        onChange={(e) => handleHousingChange('homeInsurance', e.target.value)}\n                        min=\"0\"\n                      />\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Additional Financial Details */}\n          <div className=\"input-section\">\n            <h2>Additional Financial Details</h2>\n            \n            <div className=\"input-group\">\n              <label>Monthly Debt Payments</label>\n              <input\n                type=\"number\"\n                value={financialData.monthlyDebts}\n                onChange={(e) => handleFinancialChange('monthlyDebts', e.target.value)}\n                placeholder=\"Car loans, credit cards, etc.\"\n                className={errors.monthlyDebts ? 'error' : ''}\n              />\n              {errors.monthlyDebts && <div className=\"error-message\">{errors.monthlyDebts}</div>}\n            </div>\n          </div>\n          \n          {/* Error message and calculate button */}\n          {errors.general && (\n            <div className=\"error-message general-error\">{errors.general}</div>\n          )}\n          \n          <button \n            className=\"calculate-btn\"\n            onClick={handleCalculate}\n          >\n            Calculate\n          </button>\n        </div>\n\n        {/* Right Column - Results */}\n        <div className=\"calculator-results\" style={{ flex: '1', marginLeft: '20px' }}>\n          {results ? (\n            <div className=\"results\">\n              <h2>Results Summary</h2>\n\n              {/* Visual representation of mortgage as % of income */}\n              <div className=\"affordability-visual\">\n                <h3>Mortgage Impact on Monthly Budget</h3>\n                <div className=\"affordability-meter\">\n                  <div className=\"meter-header\">\n                    <span>Monthly Gross Income: {formatCurrency(results.monthlyGrossIncome)}</span>\n                    <span className={results.affordabilityClass}>\n                      {results.percentOfGrossIncome.toFixed(1)}% of Gross Income\n                    </span>\n                  </div>\n                  <div className=\"meter-header\">\n                    <span>Monthly Take-Home: {formatCurrency(results.monthlyTakeHome)}</span>\n                    <span className={results.affordabilityClass}>\n                      {results.percentOfTakeHomeIncome.toFixed(1)}% of Take-Home Pay\n                    </span>\n                  </div>\n                  <div className=\"meter-bar\">\n                    <div \n                      className={`meter-fill ${results.affordabilityClass}`} \n                      style={{width: `${Math.min(results.percentOfGrossIncome * 2, 100)}%`}}\n                    ></div>\n                  </div>\n                  <div className=\"meter-labels\">\n                    <span>0%</span>\n                    <span>28%</span>\n                    <span>32%</span>\n                    <span>50%</span>\n                  </div>\n                  <div className={`affordability-message ${results.affordabilityClass}`}>\n                    {results.affordabilityClass === \"green\" ? (\n                      \"You are well within budget, you should be proud!\"\n                    ) : results.affordabilityClass === \"yellow\" ? (\n                      \"This house is a little outside of your budget. It is manageable, but you'll need to be more conscious about spending.\"\n                    ) : (\n                      \"This house is outside of your budget. Maybe another home will be more suitable, but if your heart is set on this one be sure to cut expenses elsewhere.\"\n                    )}\n                  </div> \n                </div>\n              </div>\n\n              {/* Affordability Summary */}\n              <div className=\"result-summary\">\n                {activeTab === 'what-can-i-afford' ? (\n                  <>\n                    <div className=\"result-item total\">\n                      <span>Maximum Home Price:</span>\n                      <span className=\"highlight\">\n                        {formatCurrency(results.maxHomePrice)}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Down Payment ({results.downPaymentPercent.toFixed(1)}%):</span>\n                        <span>\n                          {formatCurrency(results.downPaymentAmount)}\n                        </span>\n                      </div>\n\n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.maxLoanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className={`result-item total ${results.isAffordable ? \"affordable\" : \"unaffordable\"}`}>\n                      <span>Affordability:</span>\n                      <span>\n                        {results.isAffordable \n                          ? \"✓ Affordable\" \n                          : \"⚠️ May be too expensive\"}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Home Price:</span>\n                        <span>\n                          {formatCurrency(results.homePrice)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.loanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {/* Monthly Payment Breakdown */}\n              <div className=\"payment-breakdown\">\n                <h3>Monthly Payment Breakdown</h3>\n\n                <div className=\"payment-details\">\n                  <div className=\"result-item\">\n                    <span>Principal & Interest:</span>\n                    <span>\n                      {formatCurrency(results.baseMonthlyPayment)}\n                    </span>\n                  </div>\n\n                  {results.monthlyPropertyTax > 0 && (\n                    <div className=\"result-item\">\n                      <span>Property Tax:</span>\n                      <span>\n                        {formatCurrency(results.monthlyPropertyTax)}\n                      </span>\n                    </div>\n                  )}\n\n                  {results.monthlyInsurance > 0 && (\n                    <div className=\"result-item\">\n                      <span>Home Insurance:</span>\n                      <span>\n                        {formatCurrency(results.monthlyInsurance)}\n                      </span>\n                    </div>\n                  )}\n\n                  <div className=\"result-item total\">\n                    <span>Total Monthly Payment:</span>\n                    <span>\n                      {formatCurrency(results.totalMonthlyPayment)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Term comparison */}\n              {paymentsByTerm && (\n                <div className=\"term-comparison\">\n                  <h3>Payment Options by Term</h3>\n\n                  <div className=\"term-options\">\n                    {Object.entries(paymentsByTerm).map(([term, data]) => (\n                      <div key={term} className={`term-option ${data.affordabilityClass}`}>\n                        <div className=\"term-header\">\n                          <span>{term} Year {term === housingData.loanTermYears ? '(selected)' : ''}</span>\n                          <span className=\"term-payment\">{formatCurrency(data.totalPayment)}/mo</span>\n                        </div>\n                        \n                        <div className=\"term-details\">\n                          <div className=\"term-detail\">\n                            <span>Rate:</span>\n                            <span>{data.interestRate.toFixed(2)}%</span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>% of Gross Income:</span>\n                            <span>\n                              {data.percentOfGrossIncome.toFixed(1)}%\n                            </span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>% of Take-Home Pay:</span>\n                            <span>\n                              {data.percentOfTakeHomeIncome.toFixed(1)}%\n                            </span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>Total Interest:</span>\n                            <span>{formatCurrency(data.totalInterest)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Detailed Results Toggle Section */}\n              <div className=\"financial-details\">\n                <button \n                  className=\"toggle-details-btn\"\n                  onClick={() => setShowDetailedResults(!showDetailedResults)}\n                >\n                  {showDetailedResults ? 'Hide Detailed Analysis' : 'Show Detailed Analysis'}\n                </button>\n                \n                {showDetailedResults && (\n                  <div className=\"detailed-results\">\n                    {/* Tax breakdown */}\n                    <div className=\"tax-breakdown\">\n                      <h3>Tax Breakdown</h3>\n                      <div className=\"result-item\">\n                        <span>Federal Tax:</span>\n                        <span>{formatCurrency(results.taxResults.federal)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>FICA:</span>\n                        <span>{formatCurrency(results.taxResults.fica)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>State Tax:</span>\n                        <span>{formatCurrency(results.taxResults.state)}/year</span>\n                      </div>\n                      {results.taxResults.local > 0 && (\n                        <div className=\"result-item\">\n                          <span>Local Tax:</span>\n                          <span>{formatCurrency(results.taxResults.local)}/year</span>\n                        </div>\n                      )}\n                      <div className=\"result-item total\">\n                        <span>Total Tax:</span>\n                        <span>{formatCurrency(results.taxResults.total)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>Effective Tax Rate:</span>\n                        <span>{(results.taxResults.effectiveRate * 100).toFixed(1)}%</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"no-results\">\n              <p>Enter your details and click \"Calculate\" to see results</p>\n              \n              <div className=\"calculator-info\">\n                <h3>How This Calculator Works</h3>\n                <p>This calculator uses industry-standard affordability guidelines:</p>\n                <ul>\n                  <li><strong>28% Rule:</strong> Your monthly mortgage payment should not exceed 28% of your gross monthly income.</li>\n                  <li><strong>36% Rule:</strong> Your total monthly debt payments (including mortgage) should not exceed 36% of your gross monthly income.</li>\n                </ul>\n                <p>The calculator uses these rules to determine either how much home you can afford or whether a specific home price is affordable for you.</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeAffordabilityCalculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,eAAe,EAAEC,yBAAyB,QAAQ,yBAAyB;AACpF,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,YAAY,EAAEC,cAAc,QAAQ,wBAAwB;AACrE,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,wBAAwB,GAAGA,CAACC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa,KAAK;EACxF;EACA,MAAMC,UAAU,GAAGJ,SAAS,GAAGC,WAAW;;EAE1C;EACA,MAAMI,mBAAmB,GAAIH,YAAY,GAAG,GAAG,GAAI,EAAE;;EAErD;EACA,MAAMI,gBAAgB,GAAGH,aAAa,GAAG,EAAE;;EAE3C;EACA,IAAIE,mBAAmB,KAAK,CAAC,EAAE;IAC7B,OAAOD,UAAU,GAAGE,gBAAgB;EACtC;;EAEA;EACA,MAAMC,cAAc,GAAGH,UAAU,IAC9BC,mBAAmB,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,mBAAmB,EAAEC,gBAAgB,CAAC,CAAC,IAC1EE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,mBAAmB,EAAEC,gBAAgB,CAAC,GAAG,CAAC,CAAC;EAE3D,OAAOC,cAAc;AACvB,CAAC;;AAED;AACA,MAAMG,qBAAqB,GAAGA,CAACC,kBAAkB,EAAET,YAAY,EAAEC,aAAa,EAAEF,WAAW,EAAEW,YAAY,GAAG,CAAC,KAAK;EAChH;EACA;EACA,MAAMC,wBAAwB,GAAGD,YAAY,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI;EAC/D,MAAME,iBAAiB,GAAIH,kBAAkB,GAAGE,wBAAwB,GAAID,YAAY;EAExF,IAAIE,iBAAiB,IAAI,CAAC,EAAE,OAAO,CAAC;;EAEpC;EACA,MAAMT,mBAAmB,GAAIH,YAAY,GAAG,GAAG,GAAI,EAAE;;EAErD;EACA,MAAMI,gBAAgB,GAAGH,aAAa,GAAG,EAAE;;EAE3C;EACA,IAAIE,mBAAmB,KAAK,CAAC,EAAE;IAC7B,MAAMU,aAAa,GAAGD,iBAAiB,GAAGR,gBAAgB;IAC1D,OAAOS,aAAa,GAAGd,WAAW;EACpC;;EAEA;EACA;EACA,MAAMc,aAAa,GAAGD,iBAAiB,IACpC,CAAC,GAAGN,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,mBAAmB,EAAE,CAACC,gBAAgB,CAAC,CAAC,GAC1DD,mBAAmB;;EAErB;EACA,MAAMW,YAAY,GAAGD,aAAa,GAAGd,WAAW;EAEhD,OAAOe,YAAY;AACrB,CAAC;;AAED;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;AAClB,CAAC;;AAED;AACA,MAAMO,gBAAgB,GAAIP,KAAK,IAAK;EAClC,OAAOA,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;AAC/B,CAAC;;AAED;AACA;AACA,MAAMC,yBAAyB,GAAG,CAChC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAK,CAAC,EAClC;EAAEF,GAAG,EAAE,KAAK;EAAEC,GAAG,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAK,CAAC,EACtC;EAAEF,GAAG,EAAE,KAAK;EAAEC,GAAG,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAK,CAAC,EACvC;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAEE,QAAQ;EAAED,IAAI,EAAE;AAAK,CAAC,CAC3C;;AAED;AACA,MAAME,uBAAuB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;EACpD,IAAIC,GAAG,GAAG,CAAC;EAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,MAAME,cAAc,GAAGJ,QAAQ,CAACE,CAAC,CAAC;;IAElC;IACA,MAAMG,UAAU,GAAGD,cAAc,CAACV,GAAG;IACrC,MAAMY,UAAU,GAAGF,cAAc,CAACT,GAAG;IAErC,IAAII,MAAM,GAAGM,UAAU,EAAE;MACvB;MACA,MAAME,oBAAoB,GAAGjC,IAAI,CAACoB,GAAG,CAACK,MAAM,EAAEO,UAAU,CAAC,GAAGD,UAAU;MACtEJ,GAAG,IAAIM,oBAAoB,GAAGH,cAAc,CAACR,IAAI;IACnD;;IAEA;IACA,IAAIG,MAAM,IAAIO,UAAU,EAAE;EAC5B;EAEA,OAAOL,GAAG;AACZ,CAAC;;AAED;AACA,SAASO,mBAAmBA,CAAA,EAAG;EAC7B,MAAMT,MAAM,GAAG,KAAK;EACpB,MAAMU,UAAU,GAAGX,uBAAuB,CAACC,MAAM,EAAEN,yBAAyB,CAAC;EAE7EiB,OAAO,CAACC,GAAG,CAAC,mBAAmBZ,MAAM,CAACP,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;;EAEpD;EACA,IAAIoB,QAAQ,GAAG,CAAC;EAChB,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,yBAAyB,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;IACzD,MAAMW,OAAO,GAAGpB,yBAAyB,CAACS,CAAC,CAAC;IAC5C,IAAIH,MAAM,GAAGc,OAAO,CAACnB,GAAG,EAAE;MACxB,MAAMoB,aAAa,GAAGxC,IAAI,CAACoB,GAAG,CAACK,MAAM,EAAEc,OAAO,CAAClB,GAAG,CAAC,GAAGkB,OAAO,CAACnB,GAAG;MACjE,MAAMqB,YAAY,GAAGD,aAAa,GAAGD,OAAO,CAACjB,IAAI;MACjDgB,QAAQ,IAAIG,YAAY;MAExBL,OAAO,CAACC,GAAG,CAAC,GAAGE,OAAO,CAACnB,GAAG,CAACsB,cAAc,CAAC,CAAC,OAAO1C,IAAI,CAACoB,GAAG,CAACK,MAAM,EAAEc,OAAO,CAAClB,GAAG,CAAC,CAACqB,cAAc,CAAC,CAAC,KAAKF,aAAa,CAACE,cAAc,CAAC,CAAC,MAAM,CAACH,OAAO,CAACjB,IAAI,GAAG,GAAG,EAAEJ,OAAO,CAAC,CAAC,CAAC,QAAQuB,YAAY,CAACvB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5M;IAEA,IAAIO,MAAM,IAAIc,OAAO,CAAClB,GAAG,EAAE;EAC7B;EAEAe,OAAO,CAACC,GAAG,CAAC,uBAAuBC,QAAQ,CAACpB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EACzDkB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEC,QAAQ,GAAGb,MAAM,GAAI,GAAG,EAAEP,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EAE7E,OAAOiB,UAAU;AACnB;AAEAD,mBAAmB,CAAC,CAAC;;AAErB;AACA,MAAMS,UAAU,GAAG;EACjBC,cAAc,EAAE,KAAK;EAAG;EACxBC,QAAQ,EAAE,MAAM;EAAO;EACvBC,kBAAkB,EAAE,KAAK;EAAE;EAC3BC,qBAAqB,EAAE,MAAM,CAAC;AAChC,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG;EACtB,SAAS,EAAE,IAAI;EACf,QAAQ,EAAE,IAAI;EACd,SAAS,EAAE,KAAK;EAChB,UAAU,EAAE,KAAK;EACjB,YAAY,EAAE,KAAK;EACnB,UAAU,EAAE,KAAK;EACjB,aAAa,EAAE,MAAM;EACrB,UAAU,EAAE,KAAK;EACjB,SAAS,EAAE,IAAI;EACf,SAAS,EAAE,MAAM;EACjB,QAAQ,EAAE,IAAI;EACd,OAAO,EAAE,KAAK;EACd,UAAU,EAAE,KAAK;EACjB,SAAS,EAAE,IAAI;EACf,MAAM,EAAE,KAAK;EACb,QAAQ,EAAE,KAAK;EACf,UAAU,EAAE,IAAI;EAChB,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,KAAK;EACd,UAAU,EAAE,KAAK;EACjB,eAAe,EAAE,IAAI;EACrB,UAAU,EAAE,KAAK;EACjB,WAAW,EAAE,KAAK;EAClB,aAAa,EAAE,KAAK;EACpB,UAAU,EAAE,KAAK;EACjB,SAAS,EAAE,KAAK;EAChB,UAAU,EAAE,KAAK;EACjB,QAAQ,EAAE,IAAI;EACd,eAAe,EAAE,IAAI;EACrB,YAAY,EAAE,KAAK;EACnB,YAAY,EAAE,KAAK;EACnB,UAAU,EAAE,KAAK;EACjB,gBAAgB,EAAE,MAAM;EACxB,cAAc,EAAE,KAAK;EACrB,MAAM,EAAE,KAAK;EACb,UAAU,EAAE,MAAM;EAClB,QAAQ,EAAE,KAAK;EACf,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,gBAAgB,EAAE,KAAK;EACvB,cAAc,EAAE,IAAI;EACpB,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,IAAI;EACb,MAAM,EAAE,MAAM;EACd,SAAS,EAAE,MAAM;EACjB,UAAU,EAAE,MAAM;EAClB,YAAY,EAAE,IAAI;EAClB,eAAe,EAAE,MAAM;EACvB,WAAW,EAAE,MAAM;EACnB,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMC,sBAAsB,GAAG;EAC7B,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE;AACN,CAAC;;AAED;AACA,MAAMC,qBAAqB,GAAGA,CAACzB,MAAM,EAAE0B,OAAO,KAAK;EACjD,MAAMC,aAAa,GAAGC,UAAU,CAAC5B,MAAM,CAAC;EAExC,IAAI6B,KAAK,CAACF,aAAa,CAAC,EAAE,OAAO,CAAC;EAElC,QAAQD,OAAO;IACb,KAAK,QAAQ;MACX,OAAOC,aAAa,GAAG,EAAE,GAAG,EAAE;IAAE;IAClC,KAAK,QAAQ;MACX,OAAOA,aAAa,GAAG,EAAE;IAC3B,KAAK,UAAU;MACb,OAAOA,aAAa,GAAG,EAAE;IAC3B,KAAK,SAAS;MACZ,OAAOA,aAAa,GAAG,EAAE;IAC3B,KAAK,QAAQ;IACb;MACE,OAAOA,aAAa;EACxB;AACF,CAAC;;AAGD;AACA,MAAMG,gBAAgB,GAAI9B,MAAM,IAAK;EACnC,MAAM;IAAEmB,cAAc;IAAEC,QAAQ;IAAEC,kBAAkB;IAAEC;EAAsB,CAAC,GAAGJ,UAAU;;EAE1F;EACA,MAAMa,iBAAiB,GAAGxD,IAAI,CAACoB,GAAG,CAACK,MAAM,EAAEsB,qBAAqB,CAAC,GAAGH,cAAc;;EAElF;EACA,IAAIa,WAAW,GAAGhC,MAAM,GAAGoB,QAAQ;;EAEnC;EACA,IAAIpB,MAAM,GAAG,MAAM,EAAE;IACnBgC,WAAW,IAAI,CAAChC,MAAM,GAAG,MAAM,IAAIqB,kBAAkB;EACvD;EAEA,OAAO;IACLF,cAAc,EAAEY,iBAAiB;IACjCX,QAAQ,EAAEY,WAAW;IACrBC,KAAK,EAAEF,iBAAiB,GAAGC;EAC7B,CAAC;AACH,CAAC;;AAED;AACA,MAAME,eAAe,GAAIC,OAAO,IAAK;EACnC,IAAI,CAACA,OAAO,EAAE,OAAO,CAAC;EAEtB,IAAIA,OAAO,CAACC,IAAI,KAAK,YAAY,IAAID,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;IAC5D,OAAOD,OAAO,CAAClD,KAAK;EACtB,CAAC,MAAM,IAAIkD,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;IACnC,OAAO,CAACD,OAAO,CAACxC,GAAG,GAAGwC,OAAO,CAACvC,GAAG,IAAI,CAAC,CAAC,CAAC;EAC1C,CAAC,MAAM,IAAIuC,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;IACnC,OAAOD,OAAO,CAAClD,KAAK;EACtB;EAEA,OAAO,CAAC;AACV,CAAC;;AAED;AACA,MAAMoD,iBAAiB,GAAGA,CAACrC,MAAM,EAAEsC,KAAK,EAAEC,IAAI,KAAK;EACjD,IAAI,CAACD,KAAK,IAAI,CAACC,IAAI,IAAI,CAAC9E,cAAc,CAAC6E,KAAK,CAAC,IAAI,CAAC7E,cAAc,CAAC6E,KAAK,CAAC,CAACE,WAAW,EAAE;IACnF,OAAO,CAAC;EACV;EAEA,QAAQF,KAAK;IACX,KAAK,SAAS;MACZ,IAAIzF,gBAAgB,CAAC0F,IAAI,CAAC,EAAE;QAC1B,OAAOvC,MAAM,GAAGkC,eAAe,CAACrF,gBAAgB,CAAC0F,IAAI,CAAC,CAAC;MACzD;MACA;IACF,KAAK,UAAU;MACb,IAAIzF,iBAAiB,CAACyF,IAAI,CAAC,EAAE;QAC3B,OAAOvC,MAAM,GAAGkC,eAAe,CAACpF,iBAAiB,CAACyF,IAAI,CAAC,CAAC;MAC1D;MACA;IACF,KAAK,UAAU;MACb,OAAOvF,yBAAyB,CAACgD,MAAM,EAAEuC,IAAI,CAAC;IAChD,KAAK,UAAU;MACb,IAAItF,eAAe,CAACsF,IAAI,CAAC,EAAE;QACzB,OAAOvC,MAAM,GAAGkC,eAAe,CAACjF,eAAe,CAACsF,IAAI,CAAC,CAAC;MACxD;MACA;IACF,KAAK,YAAY;MACf,IAAIrF,iBAAiB,CAACqF,IAAI,CAAC,EAAE;QAC3B,OAAOvC,MAAM,GAAGkC,eAAe,CAAChF,iBAAiB,CAACqF,IAAI,CAAC,CAAC;MAC1D;MACA;IACF,KAAK,UAAU;MACb,IAAIpF,YAAY,CAACsF,MAAM,CAACF,IAAI,CAAC,EAAE;QAC7B,MAAMG,SAAS,GAAGtF,cAAc,CAAC4C,MAAM,EAAEuC,IAAI,CAAC;QAC9C,OAAOG,SAAS,CAACC,OAAO;MAC1B;MACA;IACF,KAAK,MAAM;MACT,IAAItF,mBAAmB,CAACkF,IAAI,CAAC,EAAE;QAC7B,OAAOvC,MAAM,GAAGkC,eAAe,CAAC7E,mBAAmB,CAACkF,IAAI,CAAC,CAAC;MAC5D;MACA;IACF,KAAK,QAAQ;MACX,OAAOjF,UAAU,CAACsF,YAAY,CAAC5C,MAAM,CAAC,CAAC6C,QAAQ;IACjD,KAAK,cAAc;MACjB,IAAItF,gBAAgB,CAACuF,QAAQ,CAACP,IAAI,CAAC,EAAE;QACnC,MAAMQ,UAAU,GAAGxF,gBAAgB,CAACuF,QAAQ,CAACP,IAAI,CAAC;QAClD,IAAIQ,UAAU,CAACX,IAAI,KAAK,OAAO,EAAE;UAC/B,OAAOpC,MAAM,GAAG+C,UAAU,CAAC9D,KAAK;QAClC,CAAC,MAAM,IAAI8D,UAAU,CAACX,IAAI,KAAK,OAAO,EAAE;UACtC,OAAOpC,MAAM,IAAI,CAAC+C,UAAU,CAACnD,GAAG,GAAGmD,UAAU,CAACpD,GAAG,IAAI,CAAC,CAAC;QACzD;MACF;MACA;IACF,KAAK,eAAe;MAClB,IAAInC,iBAAiB,CAACiF,MAAM,CAACF,IAAI,CAAC,EAAE;QAClC,OAAO/E,iBAAiB,CAACoF,YAAY,CAACL,IAAI,CAAC;MAC7C;MACA;EACJ;EAEA,OAAO,CAAC;AACV,CAAC;;AAED;AACA,MAAMS,mBAAmB,GAAIhD,MAAM,IAAK;EACtC,OAAOD,uBAAuB,CAACC,MAAM,EAAEN,yBAAyB,CAAC;AACnE,CAAC;;AAED;AACA,MAAMuD,iBAAiB,GAAGA,CAACjD,MAAM,EAAEsC,KAAK,KAAK;EAC3C,IAAI,CAACA,KAAK,IAAI,CAACf,eAAe,CAACe,KAAK,CAAC,EAAE,OAAO,CAAC;EAC/C,OAAOtC,MAAM,GAAGuB,eAAe,CAACe,KAAK,CAAC;AACxC,CAAC;;AAED;AACA,MAAMY,iBAAiB,GAAGA,CAAClD,MAAM,EAAEsC,KAAK,KAAK;EAC3C,MAAM5B,UAAU,GAAGsC,mBAAmB,CAAChD,MAAM,CAAC;EAC9C,MAAMmD,SAAS,GAAGrB,gBAAgB,CAAC9B,MAAM,CAAC;EAC1C,MAAMoD,QAAQ,GAAGH,iBAAiB,CAACjD,MAAM,EAAEsC,KAAK,CAAC;EAEjD,OAAO;IACLe,OAAO,EAAE3C,UAAU;IACnB4C,IAAI,EAAEH,SAAS,CAAClB,KAAK;IACrBsB,kBAAkB,EAAEJ,SAAS,CAAChC,cAAc;IAC5CqC,YAAY,EAAEL,SAAS,CAAC/B,QAAQ;IAChCkB,KAAK,EAAEc,QAAQ;IACfK,KAAK,EAAE,CAAC;IAAE;IACVxB,KAAK,EAAEvB,UAAU,GAAGyC,SAAS,CAAClB,KAAK,GAAGmB,QAAQ;IAC9CM,aAAa,EAAE,CAAChD,UAAU,GAAGyC,SAAS,CAAClB,KAAK,GAAGmB,QAAQ,IAAIpD;EAC7D,CAAC;AACH,CAAC;;AAED;AACA,MAAM2D,0BAA0B,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EAC3D,IAAIA,QAAQ,EAAE;IACZ;IACA,IAAID,UAAU,IAAI,EAAE,EAAE,OAAO,OAAO;IACpC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,QAAQ;IACrC,OAAO,KAAK;EACd,CAAC,MAAM;IACL;IACA,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,OAAO;IACpC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,QAAQ;IACrC,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAME,2BAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtH,QAAQ,CAAC;IAC3CqD,MAAM,EAAE,EAAE;IACV0B,OAAO,EAAE,QAAQ;IACjBY,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACR2B,iBAAiB,EAAE,KAAK;IACxBC,eAAe,EAAE;EACnB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1H,QAAQ,CAAC;IAC7CoB,SAAS,EAAE,EAAE;IACbuG,eAAe,EAAE,SAAS;IAAE;IAC5BC,kBAAkB,EAAE,IAAI;IACxBC,iBAAiB,EAAE,EAAE;IACrBtG,aAAa,EAAE,IAAI;IACnBD,YAAY,EAAE,KAAK;IAAE;IACrBwG,kBAAkB,EAAE,IAAI;IACxBC,eAAe,EAAE,KAAK;IACtBC,oBAAoB,EAAE,IAAI;IAC1BC,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnI,QAAQ,CAAC;IACjDgC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACoG,MAAM,EAAEC,SAAS,CAAC,GAAGrI,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACsI,OAAO,EAAEC,UAAU,CAAC,GAAGvI,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwI,SAAS,EAAEC,YAAY,CAAC,GAAGzI,QAAQ,CAAC,mBAAmB,CAAC;EAC/D,MAAM,CAAC0I,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3I,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC4I,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7I,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC8I,cAAc,EAAEC,iBAAiB,CAAC,GAAG/I,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMgJ,wBAAwB,GAAIrD,KAAK,IAAK;IAC1C,IAAI,CAACA,KAAK,IAAI,CAAC7E,cAAc,CAAC6E,KAAK,CAAC,IAAI,CAAC7E,cAAc,CAAC6E,KAAK,CAAC,CAACE,WAAW,EAAE;MAC1E,OAAO,EAAE;IACX;IAEA,QAAQF,KAAK;MACX,KAAK,SAAS;QACZ,OAAOsD,MAAM,CAACC,IAAI,CAAChJ,gBAAgB,CAAC;MACtC,KAAK,UAAU;QACb,OAAO+I,MAAM,CAACC,IAAI,CAAC/I,iBAAiB,CAAC;MACvC,KAAK,UAAU;QACb,OAAO,CAAC,GAAG8I,MAAM,CAACC,IAAI,CAAC9I,eAAe,CAAC+I,UAAU,CAAC,EAAE,OAAO,CAAC;MAC9D,KAAK,UAAU;QACb,OAAOF,MAAM,CAACC,IAAI,CAAC5I,eAAe,CAAC;MACrC,KAAK,YAAY;QACf,OAAO2I,MAAM,CAACC,IAAI,CAAC3I,iBAAiB,CAAC;MACvC,KAAK,UAAU;QACb,OAAO0I,MAAM,CAACC,IAAI,CAAC1I,YAAY,CAACsF,MAAM,CAAC;MACzC,KAAK,MAAM;QACT,OAAOmD,MAAM,CAACC,IAAI,CAACxI,mBAAmB,CAAC;MACzC,KAAK,cAAc;QACjB,OAAO,CAAC,cAAc,EAAE,GAAGuI,MAAM,CAACC,IAAI,CAACtI,gBAAgB,CAACuF,QAAQ,CAAC,CAACiD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1F,KAAK,eAAe;QAClB,OAAOH,MAAM,CAACC,IAAI,CAACrI,iBAAiB,CAACiF,MAAM,CAAC,EAAE,OAAO;MACvD;QACE,OAAO,EAAE;IACb;EACF,CAAC;;EAED;EACA,MAAMuD,oBAAoB,GAAI1D,KAAK,IAAK;IACtC,IAAI,CAACA,KAAK,IAAI,CAAC7E,cAAc,CAAC6E,KAAK,CAAC,EAAE,OAAO,mBAAmB;IAEhE,MAAM2D,SAAS,GAAGxI,cAAc,CAAC6E,KAAK,CAAC;IAEvC,QAAQ2D,SAAS,CAACC,OAAO;MACvB,KAAK,QAAQ;QACX,OAAO,QAAQ;MACjB,KAAK,MAAM;QACT,OAAO,mBAAmB;MAC5B,KAAK,iBAAiB;QACpB,OAAO,iBAAiB;MAC1B,KAAK,MAAM;QACT,OAAO,aAAa;MACtB;QACE,OAAO,mBAAmB;IAC9B;EACF,CAAC;;EAED;EACAtJ,SAAS,CAAC,MAAM;IACd,MAAMuJ,IAAI,GAAGC,QAAQ,CAAChC,WAAW,CAAClG,aAAa,EAAE,EAAE,CAAC;IACpD,MAAMmI,WAAW,GAAG7E,sBAAsB,CAAC2E,IAAI,CAAC,IAAI3E,sBAAsB,CAAC,EAAE,CAAC;IAC9E6C,cAAc,CAACiC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAErI,YAAY,EAAEoI,WAAW,CAACE,QAAQ,CAAC;IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/E,CAAC,EAAE,CAACnC,WAAW,CAAClG,aAAa,CAAC,CAAC;;EAE/B;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIwH,WAAW,CAACE,eAAe,KAAK,SAAS,IAAIF,WAAW,CAACrG,SAAS,EAAE;MACtE,MAAMA,SAAS,GAAG6D,UAAU,CAACwC,WAAW,CAACrG,SAAS,CAAC;MACnD,MAAMyI,OAAO,GAAG5E,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC;MAC1D,IAAI,CAAC1C,KAAK,CAAC9D,SAAS,CAAC,IAAI,CAAC8D,KAAK,CAAC2E,OAAO,CAAC,EAAE;QACxC,MAAMC,MAAM,GAAG1I,SAAS,IAAIyI,OAAO,GAAG,GAAG,CAAC;QAC1CnC,cAAc,CAACiC,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP9B,iBAAiB,EAAEiC,MAAM,CAAChH,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;MACL;IACF;EACF,CAAC,EAAE,CAAC2E,WAAW,CAACG,kBAAkB,EAAEH,WAAW,CAACrG,SAAS,EAAEqG,WAAW,CAACE,eAAe,CAAC,CAAC;;EAExF;EACA1H,SAAS,CAAC,MAAM;IACd,IAAIwH,WAAW,CAACE,eAAe,KAAK,QAAQ,IAAIF,WAAW,CAACrG,SAAS,EAAE;MACrE,MAAMA,SAAS,GAAG6D,UAAU,CAACwC,WAAW,CAACrG,SAAS,CAAC;MACnD,MAAM0I,MAAM,GAAG7E,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC;MACxD,IAAI,CAAC3C,KAAK,CAAC9D,SAAS,CAAC,IAAI,CAAC8D,KAAK,CAAC4E,MAAM,CAAC,IAAI1I,SAAS,GAAG,CAAC,EAAE;QACxD,MAAMyI,OAAO,GAAIC,MAAM,GAAG1I,SAAS,GAAI,GAAG;QAC1CsG,cAAc,CAACiC,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP/B,kBAAkB,EAAEiC,OAAO,CAAC/G,OAAO,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;MACL;IACF;EACF,CAAC,EAAE,CAAC2E,WAAW,CAACI,iBAAiB,EAAEJ,WAAW,CAACrG,SAAS,EAAEqG,WAAW,CAACE,eAAe,CAAC,CAAC;;EAEvF;EACA,MAAMoC,kBAAkB,GAAGA,CAACC,KAAK,EAAE1H,KAAK,KAAK;IAC3CgF,aAAa,CAACqC,IAAI,IAAI;MACpB;MACA,IAAIK,KAAK,KAAK,OAAO,EAAE;QACrB,OAAO;UAAE,GAAGL,IAAI;UAAE,CAACK,KAAK,GAAG1H,KAAK;UAAEsD,IAAI,EAAE;QAAG,CAAC;MAC9C;MACA,OAAO;QAAE,GAAG+D,IAAI;QAAE,CAACK,KAAK,GAAG1H;MAAM,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM2H,mBAAmB,GAAGA,CAACD,KAAK,EAAE1H,KAAK,KAAK;IAC5CoF,cAAc,CAACiC,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACK,KAAK,GAAG1H;IACX,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAM4H,qBAAqB,GAAGA,CAACF,KAAK,EAAE1H,KAAK,KAAK;IAC9C6F,gBAAgB,CAACwB,IAAI,KAAK;MACxB,GAAGA,IAAI;MACP,CAACK,KAAK,GAAG1H;IACX,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAM6H,2BAA2B,GAAI1E,IAAI,IAAK;IAC5CiC,cAAc,CAACiC,IAAI,KAAK;MACtB,GAAGA,IAAI;MACPhC,eAAe,EAAElC;IACnB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAM2E,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAAChD,UAAU,CAACE,iBAAiB,EAAE;MACjC;MACA,IAAI,CAACF,UAAU,CAAChE,MAAM,EAAE;QACtBgH,SAAS,CAAChH,MAAM,GAAG,oBAAoB;MACzC,CAAC,MAAM,IAAI6B,KAAK,CAACD,UAAU,CAACoC,UAAU,CAAChE,MAAM,CAAC,CAAC,IAAI4B,UAAU,CAACoC,UAAU,CAAChE,MAAM,CAAC,IAAI,CAAC,EAAE;QACrFgH,SAAS,CAAChH,MAAM,GAAG,oCAAoC;MACzD;MAEA,IAAI,CAACgE,UAAU,CAAC1B,KAAK,EAAE;QACrB0E,SAAS,CAAC1E,KAAK,GAAG,iDAAiD;MACrE;;MAEA;MACA,IAAI0B,UAAU,CAAC1B,KAAK,IAAI7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,IACpD7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,CAACE,WAAW,IAAI,CAACwB,UAAU,CAACzB,IAAI,EAAE;QACpEyE,SAAS,CAACzE,IAAI,GAAG,GAAGyD,oBAAoB,CAAChC,UAAU,CAAC1B,KAAK,CAAC,qDAAqD;MACjH;IACF,CAAC,MAAM;MACL;MACA,IAAI,CAAC0B,UAAU,CAACG,eAAe,EAAE;QAC/B6C,SAAS,CAAC7C,eAAe,GAAG,mCAAmC;MACjE,CAAC,MAAM,IAAItC,KAAK,CAACD,UAAU,CAACoC,UAAU,CAACG,eAAe,CAAC,CAAC,IAAIvC,UAAU,CAACoC,UAAU,CAACG,eAAe,CAAC,IAAI,CAAC,EAAE;QACvG6C,SAAS,CAAC7C,eAAe,GAAG,+CAA+C;MAC7E;IACF;;IAEA;IACA,IAAIgB,SAAS,KAAK,kBAAkB,IAAI,CAACf,WAAW,CAACrG,SAAS,EAAE;MAC9DiJ,SAAS,CAACjJ,SAAS,GAAG,wBAAwB;IAChD,CAAC,MAAM,IAAIoH,SAAS,KAAK,kBAAkB,KAAKtD,KAAK,CAACD,UAAU,CAACwC,WAAW,CAACrG,SAAS,CAAC,CAAC,IAAI6D,UAAU,CAACwC,WAAW,CAACrG,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;MACnIiJ,SAAS,CAACjJ,SAAS,GAAG,iCAAiC;IACzD;;IAEA;IACA,IAAIqG,WAAW,CAACE,eAAe,KAAK,SAAS,EAAE;MAC7C,IAAI,CAACF,WAAW,CAACG,kBAAkB,IAAI1C,KAAK,CAACD,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC,CAAC,IACpF3C,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC,GAAG,CAAC,IAAI3C,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC,GAAG,GAAG,EAAE;QACtGyC,SAAS,CAACzC,kBAAkB,GAAG,0CAA0C;MAC3E;IACF,CAAC,MAAM;MACL,IAAI,CAACH,WAAW,CAACI,iBAAiB,IAAI3C,KAAK,CAACD,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC,CAAC,IAAI5C,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC,GAAG,CAAC,EAAE;QACvIwC,SAAS,CAACxC,iBAAiB,GAAG,0CAA0C;MAC1E;IACF;;IAEA;IACA,IAAI,CAACJ,WAAW,CAACnG,YAAY,IAAI4D,KAAK,CAACD,UAAU,CAACwC,WAAW,CAACnG,YAAY,CAAC,CAAC,IAAI2D,UAAU,CAACwC,WAAW,CAACnG,YAAY,CAAC,GAAG,CAAC,EAAE;MACxH+I,SAAS,CAAC/I,YAAY,GAAG,oCAAoC;IAC/D;;IAEA;IACA,IAAI4G,aAAa,CAAClG,YAAY,KAAKkD,KAAK,CAACD,UAAU,CAACiD,aAAa,CAAClG,YAAY,CAAC,CAAC,IAAIiD,UAAU,CAACiD,aAAa,CAAClG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/HqI,SAAS,CAACrI,YAAY,GAAG,0CAA0C;IACrE;IAEAqG,SAAS,CAACgC,SAAS,CAAC;IACpB,OAAOpB,MAAM,CAACC,IAAI,CAACmB,SAAS,CAAC,CAAC5G,MAAM,KAAK,CAAC;EAC5C,CAAC;;EAED;EACA,MAAM6G,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAI,CAACF,YAAY,CAAC,CAAC,EAAE;IAErB,IAAI;MACF,IAAIG,YAAY,GAAG,CAAC;MACpB,IAAIxI,kBAAkB,GAAG,CAAC;MAC1B,IAAIyF,eAAe,GAAG,CAAC;MACvB,IAAIgD,UAAU,GAAG;QAAElF,KAAK,EAAE,CAAC;QAAEoB,OAAO,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAE,CAAC;QAAEmB,KAAK,EAAE,CAAC;QAAEC,aAAa,EAAE;MAAE,CAAC;;MAExF;MACA,IAAI,CAACM,UAAU,CAACE,iBAAiB,EAAE;QACjC;QACAgD,YAAY,GAAGzF,qBAAqB,CAACuC,UAAU,CAAChE,MAAM,EAAEgE,UAAU,CAACtC,OAAO,CAAC;QAC3E;QACA,IAAIsC,UAAU,CAACzB,IAAI,IAAI9E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,IAAI7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,CAACE,WAAW,EAAE;UACvG;UACA,MAAMK,QAAQ,GAAGR,iBAAiB,CAAC6E,YAAY,EAAElD,UAAU,CAAC1B,KAAK,EAAE0B,UAAU,CAACzB,IAAI,CAAC;UACnF4E,UAAU,GAAGjE,iBAAiB,CAACgE,YAAY,EAAElD,UAAU,CAAC1B,KAAK,CAAC;UAC9D6E,UAAU,CAAC1D,KAAK,GAAGZ,QAAQ;UAC3BsE,UAAU,CAAClF,KAAK,IAAIY,QAAQ;QAC9B,CAAC,MAAM;UACLsE,UAAU,GAAGjE,iBAAiB,CAACgE,YAAY,EAAElD,UAAU,CAAC1B,KAAK,CAAC;QAChE;QACA5D,kBAAkB,GAAGwI,YAAY,GAAG,EAAE;QACtC,MAAME,WAAW,GAAGF,YAAY,GAAGC,UAAU,CAAClF,KAAK;QACnDkC,eAAe,GAAGiD,WAAW,GAAG,EAAE;MACpC,CAAC,MAAM;QACL;QACAjD,eAAe,GAAGvC,UAAU,CAACoC,UAAU,CAACG,eAAe,CAAC;QACxD;QACAzF,kBAAkB,GAAGyF,eAAe,GAAG,GAAG;QAC1C+C,YAAY,GAAGxI,kBAAkB,GAAG,EAAE;MACxC;;MAEA;MACA,MAAMC,YAAY,GAAGiD,UAAU,CAACiD,aAAa,CAAClG,YAAY,CAAC,IAAI,CAAC;MAChE,MAAMkF,QAAQ,GAAGlF,YAAY,GAAG,CAAC;MACjC,MAAMV,YAAY,GAAG2D,UAAU,CAACwC,WAAW,CAACnG,YAAY,CAAC,IAAIuD,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;MACzF,MAAMtD,aAAa,GAAGkI,QAAQ,CAAChC,WAAW,CAAClG,aAAa,EAAE,EAAE,CAAC;;MAE7D;MACA,IAAIqG,kBAAkB,EAAEC,iBAAiB;MACzC,IAAIJ,WAAW,CAACE,eAAe,KAAK,SAAS,EAAE;QAC7CC,kBAAkB,GAAG3C,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC;QAC/D;MACF,CAAC,MAAM;QACLC,iBAAiB,GAAG5C,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC;QAC7D;MACF;;MAEA;MACA;MACA,MAAM6C,kBAAkB,GAAG3I,kBAAkB,GAAG,IAAI;MACpD;MACA,MAAM4I,iBAAiB,GAAI5I,kBAAkB,GAAG,IAAI,GAAIC,YAAY;MACpE;MACA,MAAME,iBAAiB,GAAGN,IAAI,CAACoB,GAAG,CAAC0H,kBAAkB,EAAEC,iBAAiB,CAAC;;MAEzE;MACA,IAAIC,sBAAsB,GAAG,CAAC;MAE9B,IAAInD,WAAW,CAACK,kBAAkB,EAAE;QAClC,MAAMC,eAAe,GAAG9C,UAAU,CAACwC,WAAW,CAACM,eAAe,CAAC,GAAG,GAAG;QACrE;QACA6C,sBAAsB,IAAK,MAAM,GAAG7C,eAAe,GAAI,EAAE,CAAC,CAAC;MAC7D;MAEA,IAAIN,WAAW,CAACO,oBAAoB,EAAE;QACpC,MAAM6C,eAAe,GAAG5F,UAAU,CAACwC,WAAW,CAACQ,aAAa,CAAC,IAAI,IAAI;QACrE2C,sBAAsB,IAAIC,eAAe,GAAG,EAAE;MAChD;;MAEA;MACA,MAAMC,YAAY,GAAG5I,iBAAiB,GAAG0I,sBAAsB;MAE/D,IAAIE,YAAY,IAAI,CAAC,EAAE;QACrBzC,SAAS,CAAC;UACR0C,OAAO,EAAE;QACX,CAAC,CAAC;QACF;MACF;;MAEA;MACA,IAAI3I,YAAY,EAAED,aAAa;MAE/B,IAAIsF,WAAW,CAACE,eAAe,KAAK,SAAS,EAAE;QAC7C;QACAvF,YAAY,GAAGN,qBAAqB,CAClCC,kBAAkB,EAClBT,YAAY,EACZC,aAAa,EACb,CAAC;QAAE;QACHS,YACF,CAAC;;QAED;QACA6F,iBAAiB,GAAGzF,YAAY,IAAIwF,kBAAkB,GAAG,GAAG,CAAC;QAC7DzF,aAAa,GAAGC,YAAY,GAAGyF,iBAAiB;MAClD,CAAC,MAAM;QACL;QACA;QACA,MAAMmD,gBAAgB,GAAG/F,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC;;QAElE;QACA,MAAMoD,cAAc,GAAGH,YAAY;QACnC,MAAMrJ,mBAAmB,GAAIH,YAAY,GAAG,GAAG,GAAI,EAAE;QACrD,MAAMI,gBAAgB,GAAGH,aAAa,GAAG,EAAE;QAE3C,IAAIE,mBAAmB,KAAK,CAAC,EAAE;UAC7BU,aAAa,GAAG8I,cAAc,GAAGvJ,gBAAgB;QACnD,CAAC,MAAM;UACLS,aAAa,GAAG8I,cAAc,IAC3B,CAAC,GAAGrJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,mBAAmB,EAAE,CAACC,gBAAgB,CAAC,CAAC,GAC1DD,mBAAmB;QACvB;;QAEA;QACAW,YAAY,GAAGD,aAAa,GAAG6I,gBAAgB;QAC/CnD,iBAAiB,GAAGmD,gBAAgB;QACpCpD,kBAAkB,GAAIoD,gBAAgB,GAAG5I,YAAY,GAAI,GAAG;MAC9D;;MAEA;MACA,MAAM8I,kBAAkB,GAAG/J,wBAAwB,CACjDiB,YAAY,EACZyF,iBAAiB,EACjBvG,YAAY,EACZC,aACF,CAAC;;MAED;MACA,IAAI4J,mBAAmB,GAAGD,kBAAkB;MAC5C,IAAIE,kBAAkB,GAAG,CAAC;MAC1B,IAAIC,gBAAgB,GAAG,CAAC;MAExB,IAAI5D,WAAW,CAACK,kBAAkB,EAAE;QAClC,MAAMC,eAAe,GAAG9C,UAAU,CAACwC,WAAW,CAACM,eAAe,CAAC,GAAG,GAAG;QACrEqD,kBAAkB,GAAIhJ,YAAY,GAAG2F,eAAe,GAAI,EAAE;QAC1DoD,mBAAmB,IAAIC,kBAAkB;MAC3C;MAEA,IAAI3D,WAAW,CAACO,oBAAoB,EAAE;QACpC,MAAM6C,eAAe,GAAG5F,UAAU,CAACwC,WAAW,CAACQ,aAAa,CAAC,IAAI,IAAI;QACrEoD,gBAAgB,GAAGR,eAAe,GAAG,EAAE;QACvCM,mBAAmB,IAAIE,gBAAgB;MACzC;;MAEA;MACA,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAChC,MAAMC,cAAc,GAAG,CAAC,CAAC;MAEzBD,WAAW,CAACE,OAAO,CAAChC,IAAI,IAAI;QAC1B,MAAMiC,gBAAgB,GAAG5G,sBAAsB,CAAC2E,IAAI,CAAC,IAAI3E,sBAAsB,CAAC,EAAE,CAAC;QAEnF,MAAM6G,WAAW,GAAGvK,wBAAwB,CAC1CiB,YAAY,EACZyF,iBAAiB,EACjB4D,gBAAgB,EAChBjC,IACF,CAAC;QAED,IAAImC,gBAAgB,GAAGD,WAAW;QAElC,IAAIjE,WAAW,CAACK,kBAAkB,EAAE;UAClC6D,gBAAgB,IAAIP,kBAAkB;QACxC;QAEA,IAAI3D,WAAW,CAACO,oBAAoB,EAAE;UACpC2D,gBAAgB,IAAIN,gBAAgB;QACtC;;QAEA;QACA,MAAMO,aAAa,GAAIF,WAAW,GAAGlC,IAAI,GAAG,EAAE,GAAIrH,aAAa;;QAE/D;QACA,MAAM0J,oBAAoB,GAAIF,gBAAgB,GAAG5J,kBAAkB,GAAI,GAAG;;QAE1E;QACA,MAAM+J,uBAAuB,GAAIH,gBAAgB,GAAGnE,eAAe,GAAI,GAAG;;QAE1E;QACA,MAAMuE,kBAAkB,GAAG/E,0BAA0B,CAAC6E,oBAAoB,EAAE3E,QAAQ,CAAC;QAErFqE,cAAc,CAAC/B,IAAI,CAAC,GAAG;UACrBlI,YAAY,EAAEmK,gBAAgB;UAC9BO,OAAO,EAAEN,WAAW;UACpBO,YAAY,EAAEN,gBAAgB;UAC9BC,aAAa,EAAEA,aAAa;UAC5BC,oBAAoB,EAAEA,oBAAoB;UAC1CC,uBAAuB,EAAEA,uBAAuB;UAChDC,kBAAkB,EAAEA;QACtB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,MAAMF,oBAAoB,GAAIV,mBAAmB,GAAGpJ,kBAAkB,GAAI,GAAG;;MAE7E;MACA,MAAM+J,uBAAuB,GAAIX,mBAAmB,GAAG3D,eAAe,GAAI,GAAG;;MAE7E;MACA,MAAMuE,kBAAkB,GAAG/E,0BAA0B,CAAC6E,oBAAoB,EAAE3E,QAAQ,CAAC;;MAErF;MACAqB,UAAU,CAAC;QACTgC,YAAY,EAAEA,YAAY;QAC1BxI,kBAAkB,EAAEA,kBAAkB;QACtCyF,eAAe,EAAEA,eAAe;QAChCpF,YAAY,EAAEA,YAAY;QAC1BD,aAAa,EAAEA,aAAa;QAC5B0F,iBAAiB,EAAEA,iBAAiB;QACpCD,kBAAkB,EAAEA,kBAAkB;QACtCsD,kBAAkB,EAAEA,kBAAkB;QACtCE,kBAAkB,EAAEA,kBAAkB;QACtCC,gBAAgB,EAAEA,gBAAgB;QAClCF,mBAAmB,EAAEA,mBAAmB;QACxCU,oBAAoB,EAAEA,oBAAoB;QAC1CC,uBAAuB,EAAEA,uBAAuB;QAChDC,kBAAkB,EAAEA,kBAAkB;QACtCvB,UAAU,EAAEA;MACd,CAAC,CAAC;;MAEF;MACAzB,iBAAiB,CAACwC,cAAc,CAAC;IAEnC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdlI,OAAO,CAACkI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C7D,SAAS,CAAC;QAAE0C,OAAO,EAAE;MAAmE,CAAC,CAAC;IAC5F;EACF,CAAC;;EAED;EACA,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC/B,YAAY,CAAC,CAAC,EAAE;IAErB,IAAI;MACF,IAAIG,YAAY,GAAG,CAAC;MACpB,IAAIxI,kBAAkB,GAAG,CAAC;MAC1B,IAAIyF,eAAe,GAAG,CAAC;MACvB,IAAIgD,UAAU,GAAG;QAAElF,KAAK,EAAE,CAAC;QAAEoB,OAAO,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAE,CAAC;QAAEmB,KAAK,EAAE,CAAC;QAAEC,aAAa,EAAE;MAAE,CAAC;;MAExF;MACA,IAAI,CAACM,UAAU,CAACE,iBAAiB,EAAE;QACjC;QACAgD,YAAY,GAAGzF,qBAAqB,CAACuC,UAAU,CAAChE,MAAM,EAAEgE,UAAU,CAACtC,OAAO,CAAC;QAC3E;QACA,IAAIsC,UAAU,CAACzB,IAAI,IAAI9E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,IAAI7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,CAACE,WAAW,EAAE;UACvG;UACA,MAAMK,QAAQ,GAAGR,iBAAiB,CAAC6E,YAAY,EAAElD,UAAU,CAAC1B,KAAK,EAAE0B,UAAU,CAACzB,IAAI,CAAC;UACnF4E,UAAU,GAAGjE,iBAAiB,CAACgE,YAAY,EAAElD,UAAU,CAAC1B,KAAK,CAAC;UAC9D6E,UAAU,CAAC1D,KAAK,GAAGZ,QAAQ;UAC3BsE,UAAU,CAAClF,KAAK,IAAIY,QAAQ;QAC9B,CAAC,MAAM;UACLsE,UAAU,GAAGjE,iBAAiB,CAACgE,YAAY,EAAElD,UAAU,CAAC1B,KAAK,CAAC;QAChE;QACA5D,kBAAkB,GAAGwI,YAAY,GAAG,EAAE;QACtC,MAAME,WAAW,GAAGF,YAAY,GAAGC,UAAU,CAAClF,KAAK;QACnDkC,eAAe,GAAGiD,WAAW,GAAG,EAAE;MACpC,CAAC,MAAM;QACL;QACAjD,eAAe,GAAGvC,UAAU,CAACoC,UAAU,CAACG,eAAe,CAAC;QACxD;QACAzF,kBAAkB,GAAGyF,eAAe,GAAG,GAAG;QAC1C+C,YAAY,GAAGxI,kBAAkB,GAAG,EAAE;MACxC;;MAEA;MACA,MAAMX,SAAS,GAAG6D,UAAU,CAACwC,WAAW,CAACrG,SAAS,CAAC;MACnD,MAAMY,YAAY,GAAGiD,UAAU,CAACiD,aAAa,CAAClG,YAAY,CAAC,IAAI,CAAC;MAChE,MAAMkF,QAAQ,GAAGlF,YAAY,GAAG,CAAC;MACjC,MAAMV,YAAY,GAAG2D,UAAU,CAACwC,WAAW,CAACnG,YAAY,CAAC,IAAIuD,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;MACzF,MAAMtD,aAAa,GAAGkI,QAAQ,CAAChC,WAAW,CAAClG,aAAa,EAAE,EAAE,CAAC;;MAE7D;MACA,IAAIsG,iBAAiB,EAAED,kBAAkB;MACzC,IAAIH,WAAW,CAACE,eAAe,KAAK,SAAS,EAAE;QAC7CC,kBAAkB,GAAG3C,UAAU,CAACwC,WAAW,CAACG,kBAAkB,CAAC;QAC/DC,iBAAiB,GAAGzG,SAAS,IAAIwG,kBAAkB,GAAG,GAAG,CAAC;MAC5D,CAAC,MAAM;QACLC,iBAAiB,GAAG5C,UAAU,CAACwC,WAAW,CAACI,iBAAiB,CAAC;QAC7DD,kBAAkB,GAAIC,iBAAiB,GAAGzG,SAAS,GAAI,GAAG;MAC5D;;MAEA;MACA,MAAMI,UAAU,GAAGJ,SAAS,GAAGyG,iBAAiB;;MAEhD;MACA,MAAMqD,kBAAkB,GAAG/J,wBAAwB,CACjDC,SAAS,EACTyG,iBAAiB,EACjBvG,YAAY,EACZC,aACF,CAAC;;MAED;MACA,IAAI4J,mBAAmB,GAAGD,kBAAkB;MAC5C,IAAIE,kBAAkB,GAAG,CAAC;MAC1B,IAAIC,gBAAgB,GAAG,CAAC;MAExB,IAAI5D,WAAW,CAACK,kBAAkB,EAAE;QAClC,MAAMC,eAAe,GAAG9C,UAAU,CAACwC,WAAW,CAACM,eAAe,CAAC,GAAG,GAAG;QACrEqD,kBAAkB,GAAIhK,SAAS,GAAG2G,eAAe,GAAI,EAAE;QACvDoD,mBAAmB,IAAIC,kBAAkB;MAC3C;MAEA,IAAI3D,WAAW,CAACO,oBAAoB,EAAE;QACpC,MAAM6C,eAAe,GAAG5F,UAAU,CAACwC,WAAW,CAACQ,aAAa,CAAC,IAAI,IAAI;QACrEoD,gBAAgB,GAAGR,eAAe,GAAG,EAAE;QACvCM,mBAAmB,IAAIE,gBAAgB;MACzC;;MAEA;MACA,MAAMQ,oBAAoB,GAAIV,mBAAmB,GAAGpJ,kBAAkB,GAAI,GAAG;;MAE7E;MACA,MAAM+J,uBAAuB,GAAIX,mBAAmB,GAAG3D,eAAe,GAAI,GAAG;;MAE7E;MACA,IAAI4E,YAAY,GAAG,KAAK;MACxB,IAAIlF,QAAQ,EAAE;QACZ;QACA,MAAMmF,wBAAwB,GAAGlB,mBAAmB,GAAGnJ,YAAY;QACnE,MAAMsK,YAAY,GAAID,wBAAwB,GAAGtK,kBAAkB,GAAI,GAAG;QAC1EqK,YAAY,GAAGE,YAAY,IAAI,EAAE;MACnC,CAAC,MAAM;QACL;QACAF,YAAY,GAAGP,oBAAoB,IAAI,EAAE;MAC3C;;MAEA;MACA,MAAME,kBAAkB,GAAG/E,0BAA0B,CAAC6E,oBAAoB,EAAE3E,QAAQ,CAAC;;MAErF;MACA,MAAMoE,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAChC,MAAMC,cAAc,GAAG,CAAC,CAAC;MAEzBD,WAAW,CAACE,OAAO,CAAChC,IAAI,IAAI;QAC1B,MAAMiC,gBAAgB,GAAG5G,sBAAsB,CAAC2E,IAAI,CAAC,IAAI3E,sBAAsB,CAAC,EAAE,CAAC;QAEnF,MAAM6G,WAAW,GAAGvK,wBAAwB,CAC1CC,SAAS,EACTyG,iBAAiB,EACjB4D,gBAAgB,EAChBjC,IACF,CAAC;QAED,IAAImC,gBAAgB,GAAGD,WAAW;QAElC,IAAIjE,WAAW,CAACK,kBAAkB,EAAE;UAClC6D,gBAAgB,IAAIP,kBAAkB;QACxC;QAEA,IAAI3D,WAAW,CAACO,oBAAoB,EAAE;UACpC2D,gBAAgB,IAAIN,gBAAgB;QACtC;;QAEA;QACA,MAAMO,aAAa,GAAIF,WAAW,GAAGlC,IAAI,GAAG,EAAE,GAAIhI,UAAU;;QAE5D;QACA,MAAMqK,oBAAoB,GAAIF,gBAAgB,GAAG5J,kBAAkB,GAAI,GAAG;;QAE1E;QACA,MAAM+J,uBAAuB,GAAIH,gBAAgB,GAAGnE,eAAe,GAAI,GAAG;;QAE1E;QACA,MAAMuE,kBAAkB,GAAG/E,0BAA0B,CAAC6E,oBAAoB,EAAE3E,QAAQ,CAAC;QAErFqE,cAAc,CAAC/B,IAAI,CAAC,GAAG;UACrBlI,YAAY,EAAEmK,gBAAgB;UAC9BO,OAAO,EAAEN,WAAW;UACpBO,YAAY,EAAEN,gBAAgB;UAC9BC,aAAa,EAAEA,aAAa;UAC5BC,oBAAoB,EAAEA,oBAAoB;UAC1CC,uBAAuB,EAAEA,uBAAuB;UAChDC,kBAAkB,EAAEA;QACtB,CAAC;MACH,CAAC,CAAC;;MAEF;MACAxD,UAAU,CAAC;QACTgC,YAAY,EAAEA,YAAY;QAC1BxI,kBAAkB,EAAEA,kBAAkB;QACtCyF,eAAe,EAAEA,eAAe;QAChCpG,SAAS,EAAEA,SAAS;QACpBI,UAAU,EAAEA,UAAU;QACtBqG,iBAAiB,EAAEA,iBAAiB;QACpCD,kBAAkB,EAAEA,kBAAkB;QACtCsD,kBAAkB,EAAEA,kBAAkB;QACtCE,kBAAkB,EAAEA,kBAAkB;QACtCC,gBAAgB,EAAEA,gBAAgB;QAClCF,mBAAmB,EAAEA,mBAAmB;QACxCU,oBAAoB,EAAEA,oBAAoB;QAC1CC,uBAAuB,EAAEA,uBAAuB;QAChDC,kBAAkB,EAAEA,kBAAkB;QACtCK,YAAY,EAAEA,YAAY;QAC1B5B,UAAU,EAAEA;MACd,CAAC,CAAC;;MAEF;MACAzB,iBAAiB,CAACwC,cAAc,CAAC;IAEnC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdlI,OAAO,CAACkI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C7D,SAAS,CAAC;QAAE0C,OAAO,EAAE;MAAmE,CAAC,CAAC;IAC5F;EACF,CAAC;;EAED;EACA,MAAMwB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI/D,SAAS,KAAK,mBAAmB,EAAE;MACrC8B,sBAAsB,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL6B,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEnL,OAAA;IAAKwL,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCzL,OAAA;MAAKwL,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCzL,OAAA;QAAAyL,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C7L,OAAA;QAAAyL,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC7L,OAAA;QAAGwL,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAGtC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ7L,OAAA;QAAKwL,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BzL,OAAA;UACEwL,SAAS,EAAE,cAAchE,SAAS,KAAK,mBAAmB,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC7EsE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,mBAAmB,CAAE;UAAAgE,QAAA,EAClD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7L,OAAA;UACEwL,SAAS,EAAE,cAAchE,SAAS,KAAK,kBAAkB,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5EsE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,kBAAkB,CAAE;UAAAgE,QAAA,EACjD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN7L,OAAA;MAAKwL,SAAS,EAAC,iBAAiB;MAAC/J,KAAK,EAAE;QAAEsK,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAM,CAAE;MAAAP,QAAA,gBAEhFzL,OAAA;QAAKwL,SAAS,EAAC,mBAAmB;QAAC/J,KAAK,EAAE;UAAEwK,IAAI,EAAE,GAAG;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAT,QAAA,gBAE3EzL,OAAA;UAAKwL,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzL,OAAA;YAAAyL,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE1B7L,OAAA;YAAKwL,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzL,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5B7L,OAAA;gBACEyE,IAAI,EAAC,QAAQ;gBACbnD,KAAK,EAAE+E,UAAU,CAAChE,MAAO;gBACzB8J,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,QAAQ,EAAEqD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBAC9DgL,WAAW,EAAC,cAAc;gBAC1BC,QAAQ,EAAElG,UAAU,CAACE,iBAAkB;gBACvCiF,SAAS,EAAEpE,MAAM,CAAC/E,MAAM,GAAG,OAAO,GAAG;cAAG;gBAAAqJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC,CAAC,EACDzE,MAAM,CAAC/E,MAAM,iBAAIrC,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAAC/E;cAAM;gBAAAqJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,eAEN7L,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5B7L,OAAA;gBACEsB,KAAK,EAAE+E,UAAU,CAACtC,OAAQ;gBAC1BoI,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,SAAS,EAAEqD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBAC/DiL,QAAQ,EAAElG,UAAU,CAACE,iBAAkB;gBAAAkF,QAAA,gBAEvCzL,OAAA;kBAAQsB,KAAK,EAAC,QAAQ;kBAAAmK,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC7L,OAAA;kBAAQsB,KAAK,EAAC,QAAQ;kBAAAmK,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC7L,OAAA;kBAAQsB,KAAK,EAAC,UAAU;kBAAAmK,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3C7L,OAAA;kBAAQsB,KAAK,EAAC,SAAS;kBAAAmK,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxC7L,OAAA;kBAAQsB,KAAK,EAAC,QAAQ;kBAAAmK,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7L,OAAA;YAAKwL,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzL,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpB7L,OAAA;gBACEsB,KAAK,EAAE+E,UAAU,CAAC1B,KAAM;gBACxBwH,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,OAAO,EAAEqD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBAC7DiL,QAAQ,EAAElG,UAAU,CAACE,iBAAkB;gBACvCiF,SAAS,EAAEpE,MAAM,CAACzC,KAAK,GAAG,OAAO,GAAG,EAAG;gBAAA8G,QAAA,gBAEvCzL,OAAA;kBAAQsB,KAAK,EAAC,EAAE;kBAAAmK,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACrC5D,MAAM,CAACC,IAAI,CAACtE,eAAe,CAAC,CAAC4I,GAAG,CAAC7H,KAAK,iBACrC3E,OAAA;kBAAoBsB,KAAK,EAAEqD,KAAM;kBAAA8G,QAAA,EAAE9G;gBAAK,GAA3BA,KAAK;kBAAA+G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA+B,CAClD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,EACRzE,MAAM,CAACzC,KAAK,iBAAI3E,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAACzC;cAAK;gBAAA+G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC,EAELxF,UAAU,CAAC1B,KAAK,IAAI7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,IAAI7E,cAAc,CAACuG,UAAU,CAAC1B,KAAK,CAAC,CAACE,WAAW,iBACnG7E,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAQpD,oBAAoB,CAAChC,UAAU,CAAC1B,KAAK;cAAC;gBAAA+G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvD7L,OAAA;gBACEsB,KAAK,EAAE+E,UAAU,CAACzB,IAAK;gBACvBuH,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,MAAM,EAAEqD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBAC5DiL,QAAQ,EAAElG,UAAU,CAACE,iBAAkB;gBACvCiF,SAAS,EAAEpE,MAAM,CAACxC,IAAI,GAAG,OAAO,GAAG,EAAG;gBAAA6G,QAAA,gBAEtCzL,OAAA;kBAAQsB,KAAK,EAAC,EAAE;kBAAAmK,QAAA,GAAC,SAAO,EAACpD,oBAAoB,CAAChC,UAAU,CAAC1B,KAAK,CAAC;gBAAA;kBAAA+G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,EACxE7D,wBAAwB,CAAC3B,UAAU,CAAC1B,KAAK,CAAC,CAAC6H,GAAG,CAACC,YAAY,iBAC1DzM,OAAA;kBAA2BsB,KAAK,EAAEmL,YAAa;kBAAAhB,QAAA,EAAEgB;gBAAY,GAAhDA,YAAY;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA6C,CACvE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,EACRzE,MAAM,CAACxC,IAAI,iBAAI5E,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAACxC;cAAI;gBAAA8G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN7L,OAAA;YAAKwL,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BzL,OAAA;cAAAyL,QAAA,gBACEzL,OAAA;gBACEyE,IAAI,EAAC,UAAU;gBACfiI,OAAO,EAAErG,UAAU,CAACE,iBAAkB;gBACtC4F,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,mBAAmB,EAAEqD,CAAC,CAACC,MAAM,CAACK,OAAO;cAAE;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5E,CAAC,mCAEJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAELxF,UAAU,CAACE,iBAAiB,iBAC3BvG,OAAA;YAAKwL,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzL,OAAA;cAAAyL,QAAA,EAAO;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpC7L,OAAA;cACEyE,IAAI,EAAC,QAAQ;cACbnD,KAAK,EAAE+E,UAAU,CAACG,eAAgB;cAClC2F,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAAC,iBAAiB,EAAEqD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;cACvEgL,WAAW,EAAC,6BAA6B;cACzCd,SAAS,EAAEpE,MAAM,CAACZ,eAAe,GAAG,OAAO,GAAG;YAAG;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,EACDzE,MAAM,CAACZ,eAAe,iBAAIxG,OAAA;cAAKwL,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAErE,MAAM,CAACZ;YAAe;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGN7L,OAAA;UAAKwL,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzL,OAAA;YAAAyL,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAEpBrE,SAAS,KAAK,kBAAkB,iBAC/BxH,OAAA;YAAKwL,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzL,OAAA;cAAAyL,QAAA,EAAO;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzB7L,OAAA;cACEyE,IAAI,EAAC,QAAQ;cACbnD,KAAK,EAAEmF,WAAW,CAACrG,SAAU;cAC7B+L,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,WAAW,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;cAClEgL,WAAW,EAAC,kBAAkB;cAC9Bd,SAAS,EAAEpE,MAAM,CAAChH,SAAS,GAAG,OAAO,GAAG;YAAG;cAAAsL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,EACDzE,MAAM,CAAChH,SAAS,iBAAIJ,OAAA;cAAKwL,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAErE,MAAM,CAAChH;YAAS;cAAAsL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CACN,eAED7L,OAAA;YAAKwL,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzL,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3B7L,OAAA;gBAAKwL,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjCzL,OAAA;kBAAKwL,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BzL,OAAA;oBACEyE,IAAI,EAAC,QAAQ;oBACb+G,SAAS,EAAE,iBAAiB/E,WAAW,CAACE,eAAe,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;oBACxFmF,OAAO,EAAEA,CAAA,KAAM3C,2BAA2B,CAAC,SAAS,CAAE;oBAAAsC,QAAA,EACvD;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACT7L,OAAA;oBACEyE,IAAI,EAAC,QAAQ;oBACb+G,SAAS,EAAE,iBAAiB/E,WAAW,CAACE,eAAe,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;oBACvFmF,OAAO,EAAEA,CAAA,KAAM3C,2BAA2B,CAAC,QAAQ,CAAE;oBAAAsC,QAAA,EACtD;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,EAELpF,WAAW,CAACE,eAAe,KAAK,SAAS,gBACxC3G,OAAA;kBACEyE,IAAI,EAAC,QAAQ;kBACbnD,KAAK,EAAEmF,WAAW,CAACG,kBAAmB;kBACtCuF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,oBAAoB,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;kBAC3EgL,WAAW,EAAC,kBAAkB;kBAC9Bd,SAAS,EAAEpE,MAAM,CAACR,kBAAkB,GAAG,OAAO,GAAG;gBAAG;kBAAA8E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD,CAAC,gBAEF7L,OAAA;kBACEyE,IAAI,EAAC,QAAQ;kBACbnD,KAAK,EAAEmF,WAAW,CAACI,iBAAkB;kBACrCsF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,mBAAmB,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;kBAC1EgL,WAAW,EAAC,cAAc;kBAC1Bd,SAAS,EAAEpE,MAAM,CAACP,iBAAiB,GAAG,OAAO,GAAG;gBAAG;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CACF;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,EACLzE,MAAM,CAACR,kBAAkB,iBAAI5G,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAACR;cAAkB;gBAAA8E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAC7FzE,MAAM,CAACP,iBAAiB,iBAAI7G,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAACP;cAAiB;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF,CAAC,eAEN7L,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxB7L,OAAA;gBACEsB,KAAK,EAAEmF,WAAW,CAAClG,aAAc;gBACjC4L,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,eAAe,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBAAAmK,QAAA,gBAEtEzL,OAAA;kBAAQsB,KAAK,EAAC,IAAI;kBAAAmK,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpC7L,OAAA;kBAAQsB,KAAK,EAAC,IAAI;kBAAAmK,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpC7L,OAAA;kBAAQsB,KAAK,EAAC,IAAI;kBAAAmK,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7L,OAAA;YAAKwL,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBzL,OAAA;cAAKwL,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzL,OAAA;gBAAAyL,QAAA,EAAO;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChC7L,OAAA;gBACEyE,IAAI,EAAC,QAAQ;gBACbnD,KAAK,EAAEmF,WAAW,CAACnG,YAAa;gBAChC6L,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,cAAc,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;gBACrEqL,IAAI,EAAC,MAAM;gBACX3K,GAAG,EAAC,GAAG;gBACPC,GAAG,EAAC,IAAI;gBACRuJ,SAAS,EAAEpE,MAAM,CAAC9G,YAAY,GAAG,OAAO,GAAG;cAAG;gBAAAoL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,EACDzE,MAAM,CAAC9G,YAAY,iBAAIN,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErE,MAAM,CAAC9G;cAAY;gBAAAoL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7L,OAAA;YAAKwL,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BzL,OAAA;cACEyE,IAAI,EAAC,QAAQ;cACb+G,SAAS,EAAC,qBAAqB;cAC/BM,OAAO,EAAEA,CAAA,KAAMjE,sBAAsB,CAAC,CAACD,mBAAmB,CAAE;cAAA6D,QAAA,EAE3D7D,mBAAmB,GAAG,uBAAuB,GAAG;YAAuB;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,EAERjE,mBAAmB,iBAClB5H,OAAA;cAAKwL,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BzL,OAAA;gBAAKwL,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3BzL,OAAA;kBAAAyL,QAAA,gBACEzL,OAAA;oBACEyE,IAAI,EAAC,UAAU;oBACfiI,OAAO,EAAEjG,WAAW,CAACK,kBAAmB;oBACxCqF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,oBAAoB,EAAEmD,CAAC,CAACC,MAAM,CAACK,OAAO;kBAAE;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9E,CAAC,wBAEJ;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,EAELpF,WAAW,CAACK,kBAAkB,iBAC7B9G,OAAA;gBAAKwL,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzL,OAAA;kBAAAyL,QAAA,EAAO;gBAA0B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzC7L,OAAA;kBACEyE,IAAI,EAAC,QAAQ;kBACbnD,KAAK,EAAEmF,WAAW,CAACM,eAAgB;kBACnCoF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,iBAAiB,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;kBACxEqL,IAAI,EAAC,MAAM;kBACX3K,GAAG,EAAC;gBAAG;kBAAA0J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,eAED7L,OAAA;gBAAKwL,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3BzL,OAAA;kBAAAyL,QAAA,gBACEzL,OAAA;oBACEyE,IAAI,EAAC,UAAU;oBACfiI,OAAO,EAAEjG,WAAW,CAACO,oBAAqB;oBAC1CmF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,sBAAsB,EAAEmD,CAAC,CAACC,MAAM,CAACK,OAAO;kBAAE;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChF,CAAC,0BAEJ;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,EAELpF,WAAW,CAACO,oBAAoB,iBAC/BhH,OAAA;gBAAKwL,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzL,OAAA;kBAAAyL,QAAA,EAAO;gBAAyB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACxC7L,OAAA;kBACEyE,IAAI,EAAC,QAAQ;kBACbnD,KAAK,EAAEmF,WAAW,CAACQ,aAAc;kBACjCkF,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAAC,eAAe,EAAEmD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;kBACtEU,GAAG,EAAC;gBAAG;kBAAA0J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN7L,OAAA;UAAKwL,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzL,OAAA;YAAAyL,QAAA,EAAI;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAErC7L,OAAA;YAAKwL,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzL,OAAA;cAAAyL,QAAA,EAAO;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpC7L,OAAA;cACEyE,IAAI,EAAC,QAAQ;cACbnD,KAAK,EAAE4F,aAAa,CAAClG,YAAa;cAClCmL,QAAQ,EAAGC,CAAC,IAAKlD,qBAAqB,CAAC,cAAc,EAAEkD,CAAC,CAACC,MAAM,CAAC/K,KAAK,CAAE;cACvEgL,WAAW,EAAC,+BAA+B;cAC3Cd,SAAS,EAAEpE,MAAM,CAACpG,YAAY,GAAG,OAAO,GAAG;YAAG;cAAA0K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,EACDzE,MAAM,CAACpG,YAAY,iBAAIhB,OAAA;cAAKwL,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAErE,MAAM,CAACpG;YAAY;cAAA0K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLzE,MAAM,CAAC2C,OAAO,iBACb/J,OAAA;UAAKwL,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAAErE,MAAM,CAAC2C;QAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACnE,eAED7L,OAAA;UACEwL,SAAS,EAAC,eAAe;UACzBM,OAAO,EAAEP,eAAgB;UAAAE,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN7L,OAAA;QAAKwL,SAAS,EAAC,oBAAoB;QAAC/J,KAAK,EAAE;UAAEwK,IAAI,EAAE,GAAG;UAAEW,UAAU,EAAE;QAAO,CAAE;QAAAnB,QAAA,EAC1EnE,OAAO,gBACNtH,OAAA;UAAKwL,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBzL,OAAA;YAAAyL,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGxB7L,OAAA;YAAKwL,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCzL,OAAA;cAAAyL,QAAA,EAAI;YAAiC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1C7L,OAAA;cAAKwL,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClCzL,OAAA;gBAAKwL,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3BzL,OAAA;kBAAAyL,QAAA,GAAM,wBAAsB,EAACpK,cAAc,CAACiG,OAAO,CAACvG,kBAAkB,CAAC;gBAAA;kBAAA2K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/E7L,OAAA;kBAAMwL,SAAS,EAAElE,OAAO,CAACyD,kBAAmB;kBAAAU,QAAA,GACzCnE,OAAO,CAACuD,oBAAoB,CAAC/I,OAAO,CAAC,CAAC,CAAC,EAAC,mBAC3C;gBAAA;kBAAA4J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN7L,OAAA;gBAAKwL,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3BzL,OAAA;kBAAAyL,QAAA,GAAM,qBAAmB,EAACpK,cAAc,CAACiG,OAAO,CAACd,eAAe,CAAC;gBAAA;kBAAAkF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzE7L,OAAA;kBAAMwL,SAAS,EAAElE,OAAO,CAACyD,kBAAmB;kBAAAU,QAAA,GACzCnE,OAAO,CAACwD,uBAAuB,CAAChJ,OAAO,CAAC,CAAC,CAAC,EAAC,oBAC9C;gBAAA;kBAAA4J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN7L,OAAA;gBAAKwL,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACxBzL,OAAA;kBACEwL,SAAS,EAAE,cAAclE,OAAO,CAACyD,kBAAkB,EAAG;kBACtDtJ,KAAK,EAAE;oBAACoL,KAAK,EAAE,GAAGjM,IAAI,CAACoB,GAAG,CAACsF,OAAO,CAACuD,oBAAoB,GAAG,CAAC,EAAE,GAAG,CAAC;kBAAG;gBAAE;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN7L,OAAA;gBAAKwL,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3BzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACf7L,OAAA;kBAAAyL,QAAA,EAAM;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChB7L,OAAA;kBAAAyL,QAAA,EAAM;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChB7L,OAAA;kBAAAyL,QAAA,EAAM;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb,CAAC,eACN7L,OAAA;gBAAKwL,SAAS,EAAE,yBAAyBlE,OAAO,CAACyD,kBAAkB,EAAG;gBAAAU,QAAA,EACnEnE,OAAO,CAACyD,kBAAkB,KAAK,OAAO,GACrC,kDAAkD,GAChDzD,OAAO,CAACyD,kBAAkB,KAAK,QAAQ,GACzC,uHAAuH,GAEvH;cACD;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGN7L,OAAA;YAAKwL,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BjE,SAAS,KAAK,mBAAmB,gBAChCxH,OAAA,CAAAE,SAAA;cAAAuL,QAAA,gBACEzL,OAAA;gBAAKwL,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChCzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChC7L,OAAA;kBAAMwL,SAAS,EAAC,WAAW;kBAAAC,QAAA,EACxBpK,cAAc,CAACiG,OAAO,CAAClG,YAAY;gBAAC;kBAAAsK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eAEN7L,OAAA;gBAAKwL,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBzL,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,GAAM,gBAAc,EAACnE,OAAO,CAACV,kBAAkB,CAAC9E,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;kBAAA;oBAAA4J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACrE7L,OAAA;oBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAACT,iBAAiB;kBAAC;oBAAA6E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eAEN7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACzB7L,OAAA;oBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAACnG,aAAa;kBAAC;oBAAAuK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,eACN,CAAC,gBAEH7L,OAAA,CAAAE,SAAA;cAAAuL,QAAA,gBACEzL,OAAA;gBAAKwL,SAAS,EAAE,qBAAqBlE,OAAO,CAAC8D,YAAY,GAAG,YAAY,GAAG,cAAc,EAAG;gBAAAK,QAAA,gBAC1FzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3B7L,OAAA;kBAAAyL,QAAA,EACGnE,OAAO,CAAC8D,YAAY,GACjB,cAAc,GACd;gBAAyB;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eAEN7L,OAAA;gBAAKwL,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBzL,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAW;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACxB7L,OAAA;oBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAClH,SAAS;kBAAC;oBAAAsL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eAEN7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACzB7L,OAAA;oBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAC9G,UAAU;kBAAC;oBAAAkL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,eACN;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAGN7L,OAAA;YAAKwL,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChCzL,OAAA;cAAAyL,QAAA,EAAI;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAElC7L,OAAA;cAAKwL,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9BzL,OAAA;gBAAKwL,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAqB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClC7L,OAAA;kBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAC4C,kBAAkB;gBAAC;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,EAELvE,OAAO,CAAC8C,kBAAkB,GAAG,CAAC,iBAC7BpK,OAAA;gBAAKwL,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1B7L,OAAA;kBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAC8C,kBAAkB;gBAAC;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN,EAEAvE,OAAO,CAAC+C,gBAAgB,GAAG,CAAC,iBAC3BrK,OAAA;gBAAKwL,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC5B7L,OAAA;kBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAC+C,gBAAgB;gBAAC;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN,eAED7L,OAAA;gBAAKwL,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChCzL,OAAA;kBAAAyL,QAAA,EAAM;gBAAsB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACnC7L,OAAA;kBAAAyL,QAAA,EACGpK,cAAc,CAACiG,OAAO,CAAC6C,mBAAmB;gBAAC;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGL/D,cAAc,iBACb9H,OAAA;YAAKwL,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzL,OAAA;cAAAyL,QAAA,EAAI;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEhC7L,OAAA;cAAKwL,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC1BxD,MAAM,CAAC6E,OAAO,CAAChF,cAAc,CAAC,CAAC0E,GAAG,CAAC,CAAC,CAAChE,IAAI,EAAEuE,IAAI,CAAC,kBAC/C/M,OAAA;gBAAgBwL,SAAS,EAAE,eAAeuB,IAAI,CAAChC,kBAAkB,EAAG;gBAAAU,QAAA,gBAClEzL,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,GAAOjD,IAAI,EAAC,QAAM,EAACA,IAAI,KAAK/B,WAAW,CAAClG,aAAa,GAAG,YAAY,GAAG,EAAE;kBAAA;oBAAAmL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACjF7L,OAAA;oBAAMwL,SAAS,EAAC,cAAc;oBAAAC,QAAA,GAAEpK,cAAc,CAAC0L,IAAI,CAAC9B,YAAY,CAAC,EAAC,KAAG;kBAAA;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzE,CAAC,eAEN7L,OAAA;kBAAKwL,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3BzL,OAAA;oBAAKwL,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BzL,OAAA;sBAAAyL,QAAA,EAAM;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAClB7L,OAAA;sBAAAyL,QAAA,GAAOsB,IAAI,CAACzM,YAAY,CAACwB,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;oBAAA;sBAAA4J,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC,CAAC,eAEN7L,OAAA;oBAAKwL,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BzL,OAAA;sBAAAyL,QAAA,EAAM;oBAAkB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC/B7L,OAAA;sBAAAyL,QAAA,GACGsB,IAAI,CAAClC,oBAAoB,CAAC/I,OAAO,CAAC,CAAC,CAAC,EAAC,GACxC;oBAAA;sBAAA4J,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eAEN7L,OAAA;oBAAKwL,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BzL,OAAA;sBAAAyL,QAAA,EAAM;oBAAmB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAChC7L,OAAA;sBAAAyL,QAAA,GACGsB,IAAI,CAACjC,uBAAuB,CAAChJ,OAAO,CAAC,CAAC,CAAC,EAAC,GAC3C;oBAAA;sBAAA4J,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eAEN7L,OAAA;oBAAKwL,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BzL,OAAA;sBAAAyL,QAAA,EAAM;oBAAe;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC5B7L,OAAA;sBAAAyL,QAAA,EAAOpK,cAAc,CAAC0L,IAAI,CAACnC,aAAa;oBAAC;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA,GA9BErD,IAAI;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA+BT,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAGD7L,OAAA;YAAKwL,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChCzL,OAAA;cACEwL,SAAS,EAAC,oBAAoB;cAC9BM,OAAO,EAAEA,CAAA,KAAMnE,sBAAsB,CAAC,CAACD,mBAAmB,CAAE;cAAA+D,QAAA,EAE3D/D,mBAAmB,GAAG,wBAAwB,GAAG;YAAwB;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,EAERnE,mBAAmB,iBAClB1H,OAAA;cAAKwL,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAE/BzL,OAAA;gBAAKwL,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5BzL,OAAA;kBAAAyL,QAAA,EAAI;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtB7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACzB7L,OAAA;oBAAAyL,QAAA,GAAOpK,cAAc,CAACiG,OAAO,CAACkC,UAAU,CAAC9D,OAAO,CAAC,EAAC,OAAK;kBAAA;oBAAAgG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC,eACN7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAClB7L,OAAA;oBAAAyL,QAAA,GAAOpK,cAAc,CAACiG,OAAO,CAACkC,UAAU,CAAC7D,IAAI,CAAC,EAAC,OAAK;kBAAA;oBAAA+F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD,CAAC,eACN7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACvB7L,OAAA;oBAAAyL,QAAA,GAAOpK,cAAc,CAACiG,OAAO,CAACkC,UAAU,CAAC7E,KAAK,CAAC,EAAC,OAAK;kBAAA;oBAAA+G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,EACLvE,OAAO,CAACkC,UAAU,CAAC1D,KAAK,GAAG,CAAC,iBAC3B9F,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACvB7L,OAAA;oBAAAyL,QAAA,GAAOpK,cAAc,CAACiG,OAAO,CAACkC,UAAU,CAAC1D,KAAK,CAAC,EAAC,OAAK;kBAAA;oBAAA4F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CACN,eACD7L,OAAA;kBAAKwL,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChCzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACvB7L,OAAA;oBAAAyL,QAAA,GAAOpK,cAAc,CAACiG,OAAO,CAACkC,UAAU,CAAClF,KAAK,CAAC,EAAC,OAAK;kBAAA;oBAAAoH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,eACN7L,OAAA;kBAAKwL,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BzL,OAAA;oBAAAyL,QAAA,EAAM;kBAAmB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChC7L,OAAA;oBAAAyL,QAAA,GAAO,CAACnE,OAAO,CAACkC,UAAU,CAACzD,aAAa,GAAG,GAAG,EAAEjE,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAA4J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAEN7L,OAAA;UAAKwL,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBzL,OAAA;YAAAyL,QAAA,EAAG;UAAuD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAE9D7L,OAAA;YAAKwL,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzL,OAAA;cAAAyL,QAAA,EAAI;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClC7L,OAAA;cAAAyL,QAAA,EAAG;YAAgE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvE7L,OAAA;cAAAyL,QAAA,gBACEzL,OAAA;gBAAAyL,QAAA,gBAAIzL,OAAA;kBAAAyL,QAAA,EAAQ;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,sFAAkF;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrH7L,OAAA;gBAAAyL,QAAA,gBAAIzL,OAAA;kBAAAyL,QAAA,EAAQ;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,8GAA0G;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3I,CAAC,eACL7L,OAAA;cAAAyL,QAAA,EAAG;YAAwI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5I,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzF,EAAA,CA7qCID,2BAA2B;AAAA6G,EAAA,GAA3B7G,2BAA2B;AA+qCjC,eAAeA,2BAA2B;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}