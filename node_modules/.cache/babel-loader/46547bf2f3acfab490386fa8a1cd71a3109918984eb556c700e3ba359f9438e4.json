{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethrichardson/taxcalc/src/components/HomeAffordabilityCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TaxCalculator.css';\n\n// Utility functions brought in from the imported files\n// From mortgageCalculators.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calculateMonthlyMortgage = (homePrice, downPaymentPercent, interestRate, loanTermYears) => {\n  // Calculate loan amount\n  const downPayment = homePrice * (downPaymentPercent / 100);\n  const loanAmount = homePrice - downPayment;\n\n  // Convert annual interest rate to monthly and decimal form\n  const monthlyInterestRate = interestRate / 100 / 12;\n\n  // Calculate number of payments\n  const numberOfPayments = loanTermYears * 12;\n\n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    return loanAmount / numberOfPayments;\n  }\n\n  // Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n  const monthlyPayment = loanAmount * (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments)) / (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n  return monthlyPayment;\n};\n\n// Calculate maximum home price based on take-home pay\nconst calculateMaxHomePrice = (monthlyTakeHome, interestRate, loanTermYears, downPaymentPercent, monthlyDebts = 0) => {\n  // Maximum payment should be 28% of monthly take-home pay minus existing debts\n  const maxMonthlyPayment = monthlyTakeHome * 0.28 - monthlyDebts;\n  if (maxMonthlyPayment <= 0) return 0;\n\n  // Convert annual interest rate to monthly\n  const monthlyInterestRate = interestRate / 100 / 12;\n\n  // Number of payments\n  const numberOfPayments = loanTermYears * 12;\n\n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    const maxLoanAmount = maxMonthlyPayment * numberOfPayments;\n    return maxLoanAmount / (1 - downPaymentPercent / 100);\n  }\n\n  // Calculate maximum loan amount\n  // Using formula: P = pmt * (1 - (1 + r)^-n) / r\n  const maxLoanAmount = maxMonthlyPayment * (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / monthlyInterestRate;\n\n  // Calculate max home price (loan amount + down payment)\n  const maxHomePrice = maxLoanAmount / (1 - downPaymentPercent / 100);\n  return maxHomePrice;\n};\n\n// Format currency for display\nconst formatCurrency = value => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// From taxCalculators.js\n// Federal Tax Brackets 2024\nconst FEDERAL_TAX_BRACKETS = [{\n  limit: 11600,\n  rate: 0.10\n}, {\n  limit: 47150,\n  rate: 0.12\n}, {\n  limit: 100525,\n  rate: 0.22\n}, {\n  limit: 191950,\n  rate: 0.24\n}, {\n  limit: 243725,\n  rate: 0.32\n}, {\n  limit: 609350,\n  rate: 0.35\n}, {\n  limit: Infinity,\n  rate: 0.37\n}];\n\n// FICA rates\nconst FICA_RATES = {\n  socialSecurity: 0.062,\n  // 6.2%\n  medicare: 0.0145,\n  // 1.45%\n  additionalMedicare: 0.009,\n  // 0.9% additional Medicare tax for high earners\n  socialSecurityWageCap: 168600 // 2024 wage cap for Social Security tax\n};\n\n// State tax rates (simplified)\nconst STATE_TAX_RATES = {\n  \"Alabama\": 0.05,\n  \"Alaska\": 0.00,\n  \"Arizona\": 0.025,\n  \"Arkansas\": 0.039,\n  \"California\": 0.095,\n  \"Colorado\": 0.044,\n  \"Connecticut\": 0.0699,\n  \"Delaware\": 0.066,\n  \"Florida\": 0.00,\n  \"Georgia\": 0.0539,\n  \"Hawaii\": 0.11,\n  \"Idaho\": 0.059,\n  \"Illinois\": 0.049,\n  \"Indiana\": 0.03,\n  \"Iowa\": 0.038,\n  \"Kansas\": 0.055,\n  \"Kentucky\": 0.04,\n  \"Louisiana\": 0.03,\n  \"Maine\": 0.071,\n  \"Maryland\": 0.057,\n  \"Massachusetts\": 0.09,\n  \"Michigan\": 0.042,\n  \"Minnesota\": 0.098,\n  \"Mississippi\": 0.044,\n  \"Missouri\": 0.047,\n  \"Montana\": 0.059,\n  \"Nebraska\": 0.052,\n  \"Nevada\": 0.00,\n  \"New Hampshire\": 0.05,\n  \"New Jersey\": 0.057,\n  \"New Mexico\": 0.059,\n  \"New York\": 0.065,\n  \"North Carolina\": 0.0425,\n  \"North Dakota\": 0.025,\n  \"Ohio\": 0.035,\n  \"Oklahoma\": 0.0475,\n  \"Oregon\": 0.099,\n  \"Pennsylvania\": 0.0307,\n  \"Rhode Island\": 0.0599,\n  \"South Carolina\": 0.062,\n  \"South Dakota\": 0.00,\n  \"Tennessee\": 0.00,\n  \"Texas\": 0.00,\n  \"Utah\": 0.0455,\n  \"Vermont\": 0.0875,\n  \"Virginia\": 0.0575,\n  \"Washington\": 0.00,\n  \"West Virginia\": 0.0482,\n  \"Wisconsin\": 0.0765,\n  \"Wyoming\": 0.00\n};\n\n// Convert various income types to annual\nconst convertToAnnualIncome = (income, payType) => {\n  const numericIncome = parseFloat(income);\n  if (isNaN(numericIncome)) return 0;\n  switch (payType) {\n    case 'hourly':\n      return numericIncome * 40 * 52;\n    // 40 hours per week, 52 weeks per year\n    case 'weekly':\n      return numericIncome * 52;\n    case 'biweekly':\n      return numericIncome * 26;\n    case 'monthly':\n      return numericIncome * 12;\n    case 'annual':\n    default:\n      return numericIncome;\n  }\n};\n\n// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax = (income, brackets) => {\n  let tax = 0;\n  let remainingIncome = income;\n  let previousLimit = 0;\n  for (let i = 0; i < brackets.length; i++) {\n    const currentBracket = brackets[i];\n\n    // Calculate income in this bracket\n    const bracketIncome = Math.min(remainingIncome, currentBracket.limit - previousLimit);\n    if (bracketIncome <= 0) break;\n    tax += bracketIncome * currentBracket.rate;\n    remainingIncome -= bracketIncome;\n    previousLimit = currentBracket.limit;\n    if (remainingIncome <= 0) break;\n  }\n  return tax;\n};\n\n// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax = income => {\n  const {\n    socialSecurity,\n    medicare,\n    additionalMedicare,\n    socialSecurityWageCap\n  } = FICA_RATES;\n\n  // Social Security has a wage cap\n  const socialSecurityTax = Math.min(income, socialSecurityWageCap) * socialSecurity;\n\n  // Regular Medicare tax\n  let medicareTax = income * medicare;\n\n  // Additional Medicare tax for high earners (over $200,000)\n  if (income > 200000) {\n    medicareTax += (income - 200000) * additionalMedicare;\n  }\n  return socialSecurityTax + medicareTax;\n};\n\n// Calculate federal tax\nconst calculateFederalTax = income => {\n  return calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS);\n};\n\n// Calculate state tax (simplified)\nconst calculateStateTax = (income, state) => {\n  if (!state || !STATE_TAX_RATES[state]) return 0;\n  return income * STATE_TAX_RATES[state];\n};\n\n// Calculate total tax burden\nconst calculateTotalTax = (income, state) => {\n  const federalTax = calculateFederalTax(income);\n  const ficaTax = calculateFICATax(income);\n  const stateTax = calculateStateTax(income, state);\n  return {\n    federal: federalTax,\n    fica: ficaTax,\n    state: stateTax,\n    local: 0,\n    // Simplified version without local tax\n    total: federalTax + ficaTax + stateTax,\n    effectiveRate: (federalTax + ficaTax + stateTax) / income\n  };\n};\nconst HomeAffordabilityCalculator = () => {\n  _s();\n  // Income and tax state\n  const [incomeData, setIncomeData] = useState({\n    income: '',\n    payType: 'annual',\n    state: '',\n    useCustomTakeHome: false,\n    monthlyTakeHome: ''\n  });\n\n  // Housing state\n  const [housingData, setHousingData] = useState({\n    homePrice: '',\n    downPaymentPercent: '20',\n    interestRate: '6.5',\n    loanTermYears: '30',\n    includePropertyTax: true,\n    propertyTaxRate: '1.1',\n    includeHomeInsurance: true,\n    homeInsurance: '1200'\n  });\n\n  // Additional financial details\n  const [financialData, setFinancialData] = useState({\n    monthlyDebts: '',\n    monthlyExpenses: ''\n  });\n\n  // Results and UI state\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('what-can-i-afford');\n  const [showDetailedResults, setShowDetailedResults] = useState(false);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [paymentsByTerm, setPaymentsByTerm] = useState(null);\n\n  // Handle changes to income data\n  const handleIncomeChange = (field, value) => {\n    setIncomeData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to housing data\n  const handleHousingChange = (field, value) => {\n    setHousingData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to financial data\n  const handleFinancialChange = (field, value) => {\n    setFinancialData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Validate the input form\n  const validateForm = () => {\n    const newErrors = {};\n    if (!incomeData.useCustomTakeHome) {\n      // Validate income inputs\n      if (!incomeData.income) {\n        newErrors.income = 'Annual income is required';\n      } else if (isNaN(parseFloat(incomeData.income)) || parseFloat(incomeData.income) <= 0) {\n        newErrors.income = 'Please enter a valid income amount';\n      }\n      if (!incomeData.state) {\n        newErrors.state = 'State selection is required for tax calculation';\n      }\n    } else {\n      // Validate custom take-home pay\n      if (!incomeData.monthlyTakeHome) {\n        newErrors.monthlyTakeHome = 'Monthly take-home pay is required';\n      } else if (isNaN(parseFloat(incomeData.monthlyTakeHome)) || parseFloat(incomeData.monthlyTakeHome) <= 0) {\n        newErrors.monthlyTakeHome = 'Please enter a valid monthly take-home amount';\n      }\n    }\n\n    // If we're analyzing a specific home, validate home price\n    if (activeTab === 'analyze-mortgage' && !housingData.homePrice) {\n      newErrors.homePrice = 'Home price is required';\n    } else if (activeTab === 'analyze-mortgage' && (isNaN(parseFloat(housingData.homePrice)) || parseFloat(housingData.homePrice) <= 0)) {\n      newErrors.homePrice = 'Please enter a valid home price';\n    }\n\n    // Validate mortgage-related inputs\n    if (!housingData.downPaymentPercent || isNaN(parseFloat(housingData.downPaymentPercent)) || parseFloat(housingData.downPaymentPercent) < 0 || parseFloat(housingData.downPaymentPercent) > 100) {\n      newErrors.downPaymentPercent = 'Down payment must be between 0% and 100%';\n    }\n    if (!housingData.interestRate || isNaN(parseFloat(housingData.interestRate)) || parseFloat(housingData.interestRate) < 0 || parseFloat(housingData.interestRate) > 30) {\n      newErrors.interestRate = 'Interest rate must be between 0% and 30%';\n    }\n\n    // Validate optional financial data\n    if (financialData.monthlyDebts && (isNaN(parseFloat(financialData.monthlyDebts)) || parseFloat(financialData.monthlyDebts) < 0)) {\n      newErrors.monthlyDebts = 'Please enter a valid monthly debt amount';\n    }\n    if (financialData.monthlyExpenses && (isNaN(parseFloat(financialData.monthlyExpenses)) || parseFloat(financialData.monthlyExpenses) < 0)) {\n      newErrors.monthlyExpenses = 'Please enter a valid monthly expenses amount';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Calculate affordability (what can I afford)\n  const calculateAffordability = () => {\n    if (!validateForm()) return;\n    try {\n      let annualIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = {\n        total: 0,\n        federal: 0,\n        fica: 0,\n        state: 0,\n        local: 0,\n        effectiveRate: 0\n      };\n\n      // Calculate take-home pay\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        annualIncome = monthlyTakeHome * 12; // Approximate\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const monthlyExpenses = parseFloat(financialData.monthlyExpenses) || 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      const downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n\n      // Calculate monthly property tax and insurance if included\n      let additionalHousingCosts = 0;\n\n      // Calculate affordability ratios\n      // Front-end ratio: 28% of monthly take-home for housing (PITI)\n      const frontEndMaxPayment = monthlyTakeHome * 0.28;\n      // Back-end ratio: 36% of monthly take-home for all debt payments\n      const backEndMaxPayment = monthlyTakeHome * 0.36 - monthlyDebts;\n      // Use the more conservative of the two\n      const maxMonthlyPayment = Math.min(frontEndMaxPayment, backEndMaxPayment);\n\n      // Adjust for property tax and insurance (will be calculated more precisely later)\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100; // Convert from percent to decimal\n        // Will estimate with a placeholder value for now\n        additionalHousingCosts += 300000 * propertyTaxRate / 12; // Placeholder home value for estimation\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        additionalHousingCosts += annualInsurance / 12;\n      }\n\n      // Adjust max payment to account for property tax and insurance\n      const maxPIPayment = maxMonthlyPayment - additionalHousingCosts;\n      if (maxPIPayment <= 0) {\n        setErrors({\n          general: 'Your expenses and debts are too high relative to your income for a mortgage'\n        });\n        return;\n      }\n\n      // Calculate max home price\n      const maxHomePrice = calculateMaxHomePrice(monthlyTakeHome, interestRate, loanTermYears, downPaymentPercent, monthlyDebts + monthlyExpenses);\n      const maxLoanAmount = maxHomePrice * (1 - downPaymentPercent / 100);\n      const downPaymentAmount = maxHomePrice * (downPaymentPercent / 100);\n\n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(maxHomePrice, downPaymentPercent, interestRate, loanTermYears);\n\n      // Calculate payment with taxes and insurance more precisely now that we know max home price\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = maxHomePrice * propertyTaxRate / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n\n      // Calculate payment options for different terms\n      const termOptions = [15, 20, 30];\n      const paymentOptions = {};\n      termOptions.forEach(term => {\n        const termPayment = calculateMonthlyMortgage(maxHomePrice, downPaymentPercent, interestRate, term);\n        let totalTermPayment = termPayment;\n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        const totalInterest = termPayment * (term * 12) - maxLoanAmount;\n        paymentOptions[term] = {\n          principalAndInterest: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfTakeHome: totalTermPayment / monthlyTakeHome * 100,\n          isAffordable: totalTermPayment / monthlyTakeHome <= 0.28\n        };\n      });\n      setPaymentsByTerm(paymentOptions);\n\n      // Create results object\n      const affordabilityResults = {\n        // Income details\n        annualIncome,\n        monthlyTakeHome,\n        // Tax details (if calculated)\n        federalTax: taxResults.federal,\n        ficaTax: taxResults.fica,\n        stateTax: taxResults.state,\n        localTax: taxResults.local,\n        totalTax: taxResults.total,\n        effectiveTaxRate: taxResults.effectiveRate * 100,\n        // Financial details\n        monthlyDebts,\n        monthlyExpenses,\n        totalMonthlyObligations: monthlyDebts + monthlyExpenses,\n        // Affordability details\n        frontEndMaxPayment,\n        backEndMaxPayment,\n        maxMonthlyPIPayment: maxPIPayment,\n        maxMonthlyAllPayment: maxMonthlyPayment,\n        // Mortgage details\n        maxHomePrice,\n        maxLoanAmount,\n        downPaymentAmount,\n        downPaymentPercent,\n        baseMonthlyPayment,\n        monthlyPropertyTax,\n        monthlyInsurance,\n        totalMonthlyPayment,\n        // Percentages\n        percentOfTakeHomePay: totalMonthlyPayment / monthlyTakeHome * 100,\n        isAffordable: totalMonthlyPayment / monthlyTakeHome <= 0.28\n      };\n      setResults(affordabilityResults);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({\n        general: \"An error occurred during calculation. Please check your inputs.\"\n      });\n    }\n  };\n\n  // Analyze a specific home price\n  const analyzeSpecificHome = () => {\n    if (!validateForm()) return;\n    try {\n      let annualIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = {\n        total: 0,\n        federal: 0,\n        fica: 0,\n        state: 0,\n        local: 0,\n        effectiveRate: 0\n      };\n\n      // Calculate take-home pay\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        annualIncome = monthlyTakeHome * 12; // Approximate\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const monthlyExpenses = parseFloat(financialData.monthlyExpenses) || 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      const downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n      const homePrice = parseFloat(housingData.homePrice);\n\n      // Calculate loan amount and down payment\n      const downPaymentAmount = homePrice * (downPaymentPercent / 100);\n      const loanAmount = homePrice - downPaymentAmount;\n\n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(homePrice, downPaymentPercent, interestRate, loanTermYears);\n\n      // Calculate total monthly payment with taxes and insurance\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = homePrice * propertyTaxRate / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n\n      // Calculate payment options for different terms\n      const termOptions = [15, 20, 30];\n      const paymentOptions = {};\n      termOptions.forEach(term => {\n        const termPayment = calculateMonthlyMortgage(homePrice, downPaymentPercent, interestRate, term);\n        let totalTermPayment = termPayment;\n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        const totalInterest = termPayment * (term * 12) - loanAmount;\n        paymentOptions[term] = {\n          principalAndInterest: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfTakeHome: totalTermPayment / monthlyTakeHome * 100,\n          isAffordable: totalTermPayment / monthlyTakeHome <= 0.28\n        };\n      });\n      setPaymentsByTerm(paymentOptions);\n\n      // Create results object\n      const affordabilityResults = {\n        // Income details\n        annualIncome,\n        monthlyTakeHome,\n        // Tax details (if calculated)\n        federalTax: taxResults.federal,\n        ficaTax: taxResults.fica,\n        stateTax: taxResults.state,\n        localTax: taxResults.local,\n        totalTax: taxResults.total,\n        effectiveTaxRate: taxResults.effectiveRate * 100,\n        // Financial details\n        monthlyDebts,\n        monthlyExpenses,\n        totalMonthlyObligations: monthlyDebts + monthlyExpenses,\n        // Mortgage details\n        homePrice,\n        loanAmount,\n        downPaymentAmount,\n        downPaymentPercent,\n        baseMonthlyPayment,\n        monthlyPropertyTax,\n        monthlyInsurance,\n        totalMonthlyPayment,\n        // Affordability metrics\n        percentOfTakeHomePay: totalMonthlyPayment / monthlyTakeHome * 100,\n        isAffordable: totalMonthlyPayment / monthlyTakeHome <= 0.28\n      };\n      setResults(affordabilityResults);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({\n        general: \"An error occurred during calculation. Please check your inputs.\"\n      });\n    }\n  };\n  const handleCalculate = () => {\n    if (activeTab === 'what-can-i-afford') {\n      calculateAffordability();\n    } else {\n      analyzeSpecificHome();\n    }\n  };\n\n  // Get the affordability color class based on percentage\n  const getAffordabilityColorClass = percentage => {\n    if (percentage <= 25) return \"green\";\n    if (percentage <= 28) return \"green\";\n    if (percentage <= 32) return \"yellow\";\n    if (percentage <= 36) return \"yellow\";\n    return \"red\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tax-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Affordability Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find your ideal home price based on your take-home pay and financial situation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'what-can-i-afford' ? 'active' : ''}`,\n        onClick: () => setActiveTab('what-can-i-afford'),\n        children: \"What Can I Afford?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'analyze-mortgage' ? 'active' : ''}`,\n        onClick: () => setActiveTab('analyze-mortgage'),\n        children: \"Analyze a Home Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.general\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Income Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"useCustomTakeHome\",\n              checked: incomeData.useCustomTakeHome,\n              onChange: e => handleIncomeChange('useCustomTakeHome', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"useCustomTakeHome\",\n              children: \"I know my monthly take-home pay (after taxes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), !incomeData.useCustomTakeHome ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"income\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"income\",\n                  value: incomeData.income,\n                  onChange: e => handleIncomeChange('income', e.target.value),\n                  type: \"text\",\n                  placeholder: \"e.g. 75000\",\n                  className: errors.income ? \"error-input\" : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: incomeData.payType,\n                  onChange: e => handleIncomeChange('payType', e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"hourly\",\n                    children: \"Hourly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"weekly\",\n                    children: \"Weekly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"biweekly\",\n                    children: \"Bi-Weekly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"annual\",\n                    children: \"Annual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 19\n              }, this), errors.income && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errors.income\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"state\",\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"state\",\n                value: incomeData.state,\n                onChange: e => handleIncomeChange('state', e.target.value),\n                className: errors.state ? \"error-input\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select state\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this), Object.keys(STATE_TAX_RATES).sort().map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: state,\n                  children: state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this), errors.state && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"monthlyTakeHome\",\n              children: \"Monthly Take-Home Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"monthlyTakeHome\",\n              value: incomeData.monthlyTakeHome,\n              onChange: e => handleIncomeChange('monthlyTakeHome', e.target.value),\n              type: \"text\",\n              placeholder: \"e.g. 4500\",\n              className: errors.monthlyTakeHome ? \"error-input\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this), errors.monthlyTakeHome && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.monthlyTakeHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Enter your monthly income after taxes and deductions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Financial Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"monthlyDebts\",\n              children: \"Monthly Debt Payments ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"monthlyDebts\",\n              value: financialData.monthlyDebts,\n              onChange: e => handleFinancialChange('monthlyDebts', e.target.value),\n              type: \"text\",\n              placeholder: \"e.g. 500\",\n              className: errors.monthlyDebts ? \"error-input\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 15\n            }, this), errors.monthlyDebts && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.monthlyDebts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Car loans, student loans, credit cards, etc.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Mortgage Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAdvancedOptions(!showAdvancedOptions),\n              className: \"toggle-button\",\n              children: showAdvancedOptions ? \"Hide Advanced\" : \"Show Advanced\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), activeTab === 'analyze-mortgage' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"homePrice\",\n              children: \"Home Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"homePrice\",\n              value: housingData.homePrice,\n              onChange: e => handleHousingChange('homePrice', e.target.value),\n              type: \"text\",\n              placeholder: \"e.g. 350000\",\n              className: errors.homePrice ? \"error-input\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this), errors.homePrice && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.homePrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"downPaymentPercent\",\n                children: \"Down Payment (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"downPaymentPercent\",\n                value: housingData.downPaymentPercent,\n                onChange: e => handleHousingChange('downPaymentPercent', e.target.value),\n                type: \"text\",\n                placeholder: \"e.g. 20\",\n                className: errors.downPaymentPercent ? \"error-input\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 17\n              }, this), errors.downPaymentPercent && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errors.downPaymentPercent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"interestRate\",\n                children: \"Interest Rate (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"interestRate\",\n                value: housingData.interestRate,\n                onChange: e => handleHousingChange('interestRate', e.target.value),\n                type: \"text\",\n                placeholder: \"e.g. 6.5\",\n                className: errors.interestRate ? \"error-input\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 17\n              }, this), errors.interestRate && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errors.interestRate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"loanTermYears\",\n              children: \"Loan Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"loanTermYears\",\n              value: housingData.loanTermYears,\n              onChange: e => handleHousingChange('loanTermYears', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"15 years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20 years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30 years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 13\n          }, this), showAdvancedOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advanced-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"includePropertyTax\",\n                checked: housingData.includePropertyTax,\n                onChange: e => handleHousingChange('includePropertyTax', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"includePropertyTax\",\n                children: \"Include property tax\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 17\n            }, this), housingData.includePropertyTax && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"propertyTaxRate\",\n                children: \"Property Tax Rate (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"propertyTaxRate\",\n                value: housingData.propertyTaxRate,\n                onChange: e => handleHousingChange('propertyTaxRate', e.target.value),\n                type: \"text\",\n                placeholder: \"e.g. 1.1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"The average property tax rate in the US is 1.1%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"includeHomeInsurance\",\n                checked: housingData.includeHomeInsurance,\n                onChange: e => handleHousingChange('includeHomeInsurance', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"includeHomeInsurance\",\n                children: \"Include home insurance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this), housingData.includeHomeInsurance && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"homeInsurance\",\n                children: \"Annual Insurance ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"homeInsurance\",\n                value: housingData.homeInsurance,\n                onChange: e => handleHousingChange('homeInsurance', e.target.value),\n                type: \"text\",\n                placeholder: \"e.g. 1200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"The average annual home insurance cost is $1,200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCalculate,\n          className: \"calculate-btn\",\n          children: activeTab === 'what-can-i-afford' ? 'Calculate What I Can Afford' : 'Analyze This Home'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-results\",\n        children: [results ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"affordability-visual\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Mortgage Impact on Monthly Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"affordability-meter\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Monthly Take-Home: \", formatCurrency(results.monthlyTakeHome)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: getAffordabilityColorClass(results.percentOfTakeHomePay),\n                  children: [results.percentOfTakeHomePay.toFixed(1), \"% of Income\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `meter-fill ${getAffordabilityColorClass(results.percentOfTakeHomePay)}`,\n                  style: {\n                    width: `${Math.min(results.percentOfTakeHomePay * 2, 100)}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter-labels\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"0%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"green\",\n                  children: \"25%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"yellow\",\n                  children: \"35%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"50%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-summary\",\n            children: activeTab === 'what-can-i-afford' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Maximum Home Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"highlight\",\n                  children: formatCurrency(results.maxHomePrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Down Payment (\", results.downPaymentPercent, \"%):\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.downPaymentAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 990,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loan Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.maxLoanAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `result-item total ${results.isAffordable ? \"affordable\" : \"unaffordable\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Affordability:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: results.isAffordable ? \"✓ Affordable\" : \"⚠️ May be too expensive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Home Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1016,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.homePrice)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1017,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1015,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loan Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatCurrency(results.loanAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-breakdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Monthly Payment Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Principal & Interest:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.baseMonthlyPayment)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this), results.monthlyPropertyTax > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Property Tax:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.monthlyPropertyTax)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 21\n              }, this), results.monthlyInsurance > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Home Insurance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1056,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.monthlyInsurance)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1057,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Total Monthly Payment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(results.totalMonthlyPayment)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1065,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 15\n          }, this), paymentsByTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"term-comparison\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Options by Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"term-options\",\n              children: Object.entries(paymentsByTerm).map(([term, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"term-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"term-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [term, \" Year Mortgage:\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"term-payment\",\n                    children: [formatCurrency(data.totalPayment), \"/mo\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"term-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Total Interest:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1087,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(data.totalInterest)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1088,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1086,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"term-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"% of Take-Home:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1092,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: getAffordabilityColorClass(data.percentOfTakeHome),\n                      children: [data.percentOfTakeHome.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1093,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1091,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1085,\n                  columnNumber: 25\n                }, this)]\n              }, term, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"financial-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowDetailedResults(!showDetailedResults),\n              className: \"toggle-details\",\n              children: showDetailedResults ? \"Hide Financial Details\" : \"Show Financial Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 17\n            }, this), showDetailedResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detailed-results\",\n              children: [!incomeData.useCustomTakeHome && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tax-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Tax Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tax-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Annual Income:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1121,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.annualIncome)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1122,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1120,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Federal Tax:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1128,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.federalTax)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1129,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1127,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"FICA Tax:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1135,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.ficaTax)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1136,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1134,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"State Tax:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1142,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.stateTax)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item total\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Total Tax:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1149,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.totalTax)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1150,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Effective Tax Rate:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1156,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [results.effectiveTaxRate.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1157,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"budget-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Monthly Budget\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1167,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"budget-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item total take-home\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Take-Home Pay:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1170,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.monthlyTakeHome)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1171,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Mortgage Payment:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1177,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.totalMonthlyPayment)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1178,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1176,\n                    columnNumber: 25\n                  }, this), results.monthlyDebts > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Other Debt Payments:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.monthlyDebts)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1186,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item total\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Income Remaining:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1193,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatCurrency(results.monthlyTakeHome - results.totalMonthlyPayment - results.monthlyDebts)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1194,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1192,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1168,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Complete the form and calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fill in your income and basic mortgage details to see what home price you can afford or analyze a specific home price.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guidelines\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Affordability Guidelines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"28% Rule:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 17\n              }, this), \" Your monthly housing payment should not exceed 28% of your monthly take-home pay for comfortable affordability.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"36% Rule:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1222,\n                columnNumber: 17\n              }, this), \" Your total monthly debt payments (including housing) should ideally stay below 36% of your monthly take-home pay.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"PITI:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 17\n              }, this), \" Remember that your total housing costs include Principal, Interest, Taxes, and Insurance.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 686,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeAffordabilityCalculator, \"iv88mlxzB25dM94mMP5py4I54hs=\");\n_c = HomeAffordabilityCalculator;\nexport default HomeAffordabilityCalculator;\nvar _c;\n$RefreshReg$(_c, \"HomeAffordabilityCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","calculateMonthlyMortgage","homePrice","downPaymentPercent","interestRate","loanTermYears","downPayment","loanAmount","monthlyInterestRate","numberOfPayments","monthlyPayment","Math","pow","calculateMaxHomePrice","monthlyTakeHome","monthlyDebts","maxMonthlyPayment","maxLoanAmount","maxHomePrice","formatCurrency","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","FEDERAL_TAX_BRACKETS","limit","rate","Infinity","FICA_RATES","socialSecurity","medicare","additionalMedicare","socialSecurityWageCap","STATE_TAX_RATES","convertToAnnualIncome","income","payType","numericIncome","parseFloat","isNaN","calculateProgressiveTax","brackets","tax","remainingIncome","previousLimit","i","length","currentBracket","bracketIncome","min","calculateFICATax","socialSecurityTax","medicareTax","calculateFederalTax","calculateStateTax","state","calculateTotalTax","federalTax","ficaTax","stateTax","federal","fica","local","total","effectiveRate","HomeAffordabilityCalculator","_s","incomeData","setIncomeData","useCustomTakeHome","housingData","setHousingData","includePropertyTax","propertyTaxRate","includeHomeInsurance","homeInsurance","financialData","setFinancialData","monthlyExpenses","errors","setErrors","results","setResults","activeTab","setActiveTab","showDetailedResults","setShowDetailedResults","showAdvancedOptions","setShowAdvancedOptions","paymentsByTerm","setPaymentsByTerm","handleIncomeChange","field","prev","handleHousingChange","handleFinancialChange","validateForm","newErrors","Object","keys","calculateAffordability","annualIncome","taxResults","takeHomePay","parseInt","additionalHousingCosts","frontEndMaxPayment","backEndMaxPayment","annualInsurance","maxPIPayment","general","downPaymentAmount","baseMonthlyPayment","totalMonthlyPayment","monthlyPropertyTax","monthlyInsurance","termOptions","paymentOptions","forEach","term","termPayment","totalTermPayment","totalInterest","principalAndInterest","totalPayment","percentOfTakeHome","isAffordable","affordabilityResults","localTax","totalTax","effectiveTaxRate","totalMonthlyObligations","maxMonthlyPIPayment","maxMonthlyAllPayment","percentOfTakeHomePay","error","console","analyzeSpecificHome","handleCalculate","getAffordabilityColorClass","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","checked","onChange","e","target","htmlFor","placeholder","sort","map","toFixed","width","entries","data","_c","$RefreshReg$"],"sources":["/Users/elizabethrichardson/taxcalc/src/components/HomeAffordabilityCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TaxCalculator.css';\n\n// Utility functions brought in from the imported files\n// From mortgageCalculators.js\nconst calculateMonthlyMortgage = (homePrice, downPaymentPercent, interestRate, loanTermYears) => {\n  // Calculate loan amount\n  const downPayment = homePrice * (downPaymentPercent / 100);\n  const loanAmount = homePrice - downPayment;\n  \n  // Convert annual interest rate to monthly and decimal form\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Calculate number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    return loanAmount / numberOfPayments;\n  }\n  \n  // Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n  const monthlyPayment = loanAmount * \n    (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments)) / \n    (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n  \n  return monthlyPayment;\n};\n\n// Calculate maximum home price based on take-home pay\nconst calculateMaxHomePrice = (monthlyTakeHome, interestRate, loanTermYears, downPaymentPercent, monthlyDebts = 0) => {\n  // Maximum payment should be 28% of monthly take-home pay minus existing debts\n  const maxMonthlyPayment = (monthlyTakeHome * 0.28) - monthlyDebts;\n  \n  if (maxMonthlyPayment <= 0) return 0;\n  \n  // Convert annual interest rate to monthly\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    const maxLoanAmount = maxMonthlyPayment * numberOfPayments;\n    return maxLoanAmount / (1 - (downPaymentPercent / 100));\n  }\n  \n  // Calculate maximum loan amount\n  // Using formula: P = pmt * (1 - (1 + r)^-n) / r\n  const maxLoanAmount = maxMonthlyPayment * \n    (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / \n    monthlyInterestRate;\n  \n  // Calculate max home price (loan amount + down payment)\n  const maxHomePrice = maxLoanAmount / (1 - (downPaymentPercent / 100));\n  \n  return maxHomePrice;\n};\n\n// Format currency for display\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// From taxCalculators.js\n// Federal Tax Brackets 2024\nconst FEDERAL_TAX_BRACKETS = [\n  { limit: 11600, rate: 0.10 },\n  { limit: 47150, rate: 0.12 },\n  { limit: 100525, rate: 0.22 },\n  { limit: 191950, rate: 0.24 },\n  { limit: 243725, rate: 0.32 },\n  { limit: 609350, rate: 0.35 },\n  { limit: Infinity, rate: 0.37 }\n];\n\n// FICA rates\nconst FICA_RATES = {\n  socialSecurity: 0.062,  // 6.2%\n  medicare: 0.0145,      // 1.45%\n  additionalMedicare: 0.009, // 0.9% additional Medicare tax for high earners\n  socialSecurityWageCap: 168600 // 2024 wage cap for Social Security tax\n};\n\n// State tax rates (simplified)\nconst STATE_TAX_RATES = {\n  \"Alabama\": 0.05,\n  \"Alaska\": 0.00,\n  \"Arizona\": 0.025,\n  \"Arkansas\": 0.039,\n  \"California\": 0.095,\n  \"Colorado\": 0.044,\n  \"Connecticut\": 0.0699,\n  \"Delaware\": 0.066,\n  \"Florida\": 0.00,\n  \"Georgia\": 0.0539,\n  \"Hawaii\": 0.11,\n  \"Idaho\": 0.059,\n  \"Illinois\": 0.049,\n  \"Indiana\": 0.03,\n  \"Iowa\": 0.038,\n  \"Kansas\": 0.055,\n  \"Kentucky\": 0.04,\n  \"Louisiana\": 0.03,\n  \"Maine\": 0.071,\n  \"Maryland\": 0.057,\n  \"Massachusetts\": 0.09,\n  \"Michigan\": 0.042,\n  \"Minnesota\": 0.098,\n  \"Mississippi\": 0.044,\n  \"Missouri\": 0.047,\n  \"Montana\": 0.059,\n  \"Nebraska\": 0.052,\n  \"Nevada\": 0.00,\n  \"New Hampshire\": 0.05,\n  \"New Jersey\": 0.057,\n  \"New Mexico\": 0.059,\n  \"New York\": 0.065,\n  \"North Carolina\": 0.0425,\n  \"North Dakota\": 0.025,\n  \"Ohio\": 0.035,\n  \"Oklahoma\": 0.0475,\n  \"Oregon\": 0.099,\n  \"Pennsylvania\": 0.0307,\n  \"Rhode Island\": 0.0599,\n  \"South Carolina\": 0.062,\n  \"South Dakota\": 0.00,\n  \"Tennessee\": 0.00,\n  \"Texas\": 0.00,\n  \"Utah\": 0.0455,\n  \"Vermont\": 0.0875,\n  \"Virginia\": 0.0575,\n  \"Washington\": 0.00,\n  \"West Virginia\": 0.0482,\n  \"Wisconsin\": 0.0765,\n  \"Wyoming\": 0.00\n};\n\n// Convert various income types to annual\nconst convertToAnnualIncome = (income, payType) => {\n  const numericIncome = parseFloat(income);\n  \n  if (isNaN(numericIncome)) return 0;\n  \n  switch (payType) {\n    case 'hourly':\n      return numericIncome * 40 * 52; // 40 hours per week, 52 weeks per year\n    case 'weekly':\n      return numericIncome * 52;\n    case 'biweekly':\n      return numericIncome * 26;\n    case 'monthly':\n      return numericIncome * 12;\n    case 'annual':\n    default:\n      return numericIncome;\n  }\n};\n\n// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax = (income, brackets) => {\n  let tax = 0;\n  let remainingIncome = income;\n  let previousLimit = 0;\n  \n  for (let i = 0; i < brackets.length; i++) {\n    const currentBracket = brackets[i];\n    \n    // Calculate income in this bracket\n    const bracketIncome = Math.min(\n      remainingIncome,\n      currentBracket.limit - previousLimit\n    );\n    \n    if (bracketIncome <= 0) break;\n    \n    tax += bracketIncome * currentBracket.rate;\n    remainingIncome -= bracketIncome;\n    previousLimit = currentBracket.limit;\n    \n    if (remainingIncome <= 0) break;\n  }\n  \n  return tax;\n};\n\n// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax = (income) => {\n  const { socialSecurity, medicare, additionalMedicare, socialSecurityWageCap } = FICA_RATES;\n  \n  // Social Security has a wage cap\n  const socialSecurityTax = Math.min(income, socialSecurityWageCap) * socialSecurity;\n  \n  // Regular Medicare tax\n  let medicareTax = income * medicare;\n  \n  // Additional Medicare tax for high earners (over $200,000)\n  if (income > 200000) {\n    medicareTax += (income - 200000) * additionalMedicare;\n  }\n  \n  return socialSecurityTax + medicareTax;\n};\n\n// Calculate federal tax\nconst calculateFederalTax = (income) => {\n  return calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS);\n};\n\n// Calculate state tax (simplified)\nconst calculateStateTax = (income, state) => {\n  if (!state || !STATE_TAX_RATES[state]) return 0;\n  return income * STATE_TAX_RATES[state];\n};\n\n// Calculate total tax burden\nconst calculateTotalTax = (income, state) => {\n  const federalTax = calculateFederalTax(income);\n  const ficaTax = calculateFICATax(income);\n  const stateTax = calculateStateTax(income, state);\n  \n  return {\n    federal: federalTax,\n    fica: ficaTax,\n    state: stateTax,\n    local: 0, // Simplified version without local tax\n    total: federalTax + ficaTax + stateTax,\n    effectiveRate: (federalTax + ficaTax + stateTax) / income\n  };\n};\n\nconst HomeAffordabilityCalculator = () => {\n  // Income and tax state\n  const [incomeData, setIncomeData] = useState({\n    income: '',\n    payType: 'annual',\n    state: '',\n    useCustomTakeHome: false,\n    monthlyTakeHome: ''\n  });\n\n  // Housing state\n  const [housingData, setHousingData] = useState({\n    homePrice: '',\n    downPaymentPercent: '20',\n    interestRate: '6.5',\n    loanTermYears: '30',\n    includePropertyTax: true,\n    propertyTaxRate: '1.1',\n    includeHomeInsurance: true,\n    homeInsurance: '1200'\n  });\n\n  // Additional financial details\n  const [financialData, setFinancialData] = useState({\n    monthlyDebts: '',\n    monthlyExpenses: ''\n  });\n\n  // Results and UI state\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('what-can-i-afford');\n  const [showDetailedResults, setShowDetailedResults] = useState(false);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [paymentsByTerm, setPaymentsByTerm] = useState(null);\n\n  // Handle changes to income data\n  const handleIncomeChange = (field, value) => {\n    setIncomeData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to housing data\n  const handleHousingChange = (field, value) => {\n    setHousingData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to financial data\n  const handleFinancialChange = (field, value) => {\n    setFinancialData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Validate the input form\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!incomeData.useCustomTakeHome) {\n      // Validate income inputs\n      if (!incomeData.income) {\n        newErrors.income = 'Annual income is required';\n      } else if (isNaN(parseFloat(incomeData.income)) || parseFloat(incomeData.income) <= 0) {\n        newErrors.income = 'Please enter a valid income amount';\n      }\n\n      if (!incomeData.state) {\n        newErrors.state = 'State selection is required for tax calculation';\n      }\n    } else {\n      // Validate custom take-home pay\n      if (!incomeData.monthlyTakeHome) {\n        newErrors.monthlyTakeHome = 'Monthly take-home pay is required';\n      } else if (isNaN(parseFloat(incomeData.monthlyTakeHome)) || parseFloat(incomeData.monthlyTakeHome) <= 0) {\n        newErrors.monthlyTakeHome = 'Please enter a valid monthly take-home amount';\n      }\n    }\n\n    // If we're analyzing a specific home, validate home price\n    if (activeTab === 'analyze-mortgage' && !housingData.homePrice) {\n      newErrors.homePrice = 'Home price is required';\n    } else if (activeTab === 'analyze-mortgage' && (isNaN(parseFloat(housingData.homePrice)) || parseFloat(housingData.homePrice) <= 0)) {\n      newErrors.homePrice = 'Please enter a valid home price';\n    }\n\n    // Validate mortgage-related inputs\n    if (!housingData.downPaymentPercent || isNaN(parseFloat(housingData.downPaymentPercent)) || \n        parseFloat(housingData.downPaymentPercent) < 0 || parseFloat(housingData.downPaymentPercent) > 100) {\n      newErrors.downPaymentPercent = 'Down payment must be between 0% and 100%';\n    }\n    \n    if (!housingData.interestRate || isNaN(parseFloat(housingData.interestRate)) || \n        parseFloat(housingData.interestRate) < 0 || parseFloat(housingData.interestRate) > 30) {\n      newErrors.interestRate = 'Interest rate must be between 0% and 30%';\n    }\n\n    // Validate optional financial data\n    if (financialData.monthlyDebts && (isNaN(parseFloat(financialData.monthlyDebts)) || parseFloat(financialData.monthlyDebts) < 0)) {\n      newErrors.monthlyDebts = 'Please enter a valid monthly debt amount';\n    }\n\n    if (financialData.monthlyExpenses && (isNaN(parseFloat(financialData.monthlyExpenses)) || parseFloat(financialData.monthlyExpenses) < 0)) {\n      newErrors.monthlyExpenses = 'Please enter a valid monthly expenses amount';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Calculate affordability (what can I afford)\n  const calculateAffordability = () => {\n    if (!validateForm()) return;\n\n    try {\n      let annualIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate take-home pay\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        annualIncome = monthlyTakeHome * 12; // Approximate\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const monthlyExpenses = parseFloat(financialData.monthlyExpenses) || 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      const downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n      \n      // Calculate monthly property tax and insurance if included\n      let additionalHousingCosts = 0;\n      \n      // Calculate affordability ratios\n      // Front-end ratio: 28% of monthly take-home for housing (PITI)\n      const frontEndMaxPayment = monthlyTakeHome * 0.28;\n      // Back-end ratio: 36% of monthly take-home for all debt payments\n      const backEndMaxPayment = (monthlyTakeHome * 0.36) - monthlyDebts;\n      // Use the more conservative of the two\n      const maxMonthlyPayment = Math.min(frontEndMaxPayment, backEndMaxPayment);\n      \n      // Adjust for property tax and insurance (will be calculated more precisely later)\n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100; // Convert from percent to decimal\n        // Will estimate with a placeholder value for now\n        additionalHousingCosts += (300000 * propertyTaxRate) / 12; // Placeholder home value for estimation\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        additionalHousingCosts += annualInsurance / 12;\n      }\n      \n      // Adjust max payment to account for property tax and insurance\n      const maxPIPayment = maxMonthlyPayment - additionalHousingCosts;\n      \n      if (maxPIPayment <= 0) {\n        setErrors({ \n          general: 'Your expenses and debts are too high relative to your income for a mortgage'\n        });\n        return;\n      }\n      \n      // Calculate max home price\n      const maxHomePrice = calculateMaxHomePrice(\n        monthlyTakeHome,\n        interestRate,\n        loanTermYears,\n        downPaymentPercent,\n        monthlyDebts + monthlyExpenses\n      );\n      \n      const maxLoanAmount = maxHomePrice * (1 - (downPaymentPercent / 100));\n      const downPaymentAmount = maxHomePrice * (downPaymentPercent / 100);\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        maxHomePrice,\n        downPaymentPercent,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate payment with taxes and insurance more precisely now that we know max home price\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (maxHomePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate payment options for different terms\n      const termOptions = [15, 20, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termPayment = calculateMonthlyMortgage(\n          maxHomePrice,\n          downPaymentPercent,\n          interestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        const totalInterest = (termPayment * (term * 12)) - maxLoanAmount;\n        \n        paymentOptions[term] = {\n          principalAndInterest: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfTakeHome: (totalTermPayment / monthlyTakeHome) * 100,\n          isAffordable: (totalTermPayment / monthlyTakeHome) <= 0.28\n        };\n      });\n      \n      setPaymentsByTerm(paymentOptions);\n      \n      // Create results object\n      const affordabilityResults = {\n        // Income details\n        annualIncome,\n        monthlyTakeHome,\n        \n        // Tax details (if calculated)\n        federalTax: taxResults.federal,\n        ficaTax: taxResults.fica,\n        stateTax: taxResults.state,\n        localTax: taxResults.local,\n        totalTax: taxResults.total,\n        effectiveTaxRate: taxResults.effectiveRate * 100,\n        \n        // Financial details\n        monthlyDebts,\n        monthlyExpenses,\n        totalMonthlyObligations: monthlyDebts + monthlyExpenses,\n        \n        // Affordability details\n        frontEndMaxPayment,\n        backEndMaxPayment,\n        maxMonthlyPIPayment: maxPIPayment,\n        maxMonthlyAllPayment: maxMonthlyPayment,\n        \n        // Mortgage details\n        maxHomePrice,\n        maxLoanAmount,\n        downPaymentAmount,\n        downPaymentPercent,\n        baseMonthlyPayment,\n        monthlyPropertyTax,\n        monthlyInsurance,\n        totalMonthlyPayment,\n        \n        // Percentages\n        percentOfTakeHomePay: (totalMonthlyPayment / monthlyTakeHome) * 100,\n        isAffordable: (totalMonthlyPayment / monthlyTakeHome) <= 0.28\n      };\n      \n      setResults(affordabilityResults);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: \"An error occurred during calculation. Please check your inputs.\" });\n    }\n  };\n\n  // Analyze a specific home price\n  const analyzeSpecificHome = () => {\n    if (!validateForm()) return;\n\n    try {\n      let annualIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate take-home pay\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        annualIncome = monthlyTakeHome * 12; // Approximate\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const monthlyExpenses = parseFloat(financialData.monthlyExpenses) || 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      const downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n      const homePrice = parseFloat(housingData.homePrice);\n      \n      // Calculate loan amount and down payment\n      const downPaymentAmount = homePrice * (downPaymentPercent / 100);\n      const loanAmount = homePrice - downPaymentAmount;\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        homePrice,\n        downPaymentPercent,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate total monthly payment with taxes and insurance\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (homePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate payment options for different terms\n      const termOptions = [15, 20, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termPayment = calculateMonthlyMortgage(\n          homePrice,\n          downPaymentPercent,\n          interestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        const totalInterest = (termPayment * (term * 12)) - loanAmount;\n        \n        paymentOptions[term] = {\n          principalAndInterest: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfTakeHome: (totalTermPayment / monthlyTakeHome) * 100,\n          isAffordable: (totalTermPayment / monthlyTakeHome) <= 0.28\n        };\n      });\n      \n      setPaymentsByTerm(paymentOptions);\n      \n      // Create results object\n      const affordabilityResults = {\n        // Income details\n        annualIncome,\n        monthlyTakeHome,\n        \n        // Tax details (if calculated)\n        federalTax: taxResults.federal,\n        ficaTax: taxResults.fica,\n        stateTax: taxResults.state,\n        localTax: taxResults.local,\n        totalTax: taxResults.total,\n        effectiveTaxRate: taxResults.effectiveRate * 100,\n        \n        // Financial details\n        monthlyDebts,\n        monthlyExpenses,\n        totalMonthlyObligations: monthlyDebts + monthlyExpenses,\n        \n        // Mortgage details\n        homePrice,\n        loanAmount,\n        downPaymentAmount,\n        downPaymentPercent,\n        baseMonthlyPayment,\n        monthlyPropertyTax,\n        monthlyInsurance,\n        totalMonthlyPayment,\n        \n        // Affordability metrics\n        percentOfTakeHomePay: (totalMonthlyPayment / monthlyTakeHome) * 100,\n        isAffordable: (totalMonthlyPayment / monthlyTakeHome) <= 0.28\n      };\n      \n      setResults(affordabilityResults);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: \"An error occurred during calculation. Please check your inputs.\" });\n    }\n  };\n\n  const handleCalculate = () => {\n    if (activeTab === 'what-can-i-afford') {\n      calculateAffordability();\n    } else {\n      analyzeSpecificHome();\n    }\n  };\n\n  // Get the affordability color class based on percentage\n  const getAffordabilityColorClass = (percentage) => {\n    if (percentage <= 25) return \"green\";\n    if (percentage <= 28) return \"green\";\n    if (percentage <= 32) return \"yellow\";\n    if (percentage <= 36) return \"yellow\";\n    return \"red\";\n  };\n\n  return (\n    <div className=\"tax-calculator\">\n      <h2>Home Affordability Calculator</h2>\n      <p>Find your ideal home price based on your take-home pay and financial situation</p>\n      \n      {/* Tabs for calculator modes */}\n      <div className=\"calculator-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'what-can-i-afford' ? 'active' : ''}`}\n          onClick={() => setActiveTab('what-can-i-afford')}\n        >\n          What Can I Afford?\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'analyze-mortgage' ? 'active' : ''}`}\n          onClick={() => setActiveTab('analyze-mortgage')}\n        >\n          Analyze a Home Price\n        </button>\n      </div>\n      \n      {errors.general && (\n        <div className=\"error-message\">\n          <p>{errors.general}</p>\n        </div>\n      )}\n      \n      <div className=\"calculator-grid\">\n        {/* Left Column - Input Form */}\n        <div className=\"calculator-inputs\">\n          {/* Income Section */}\n          <div className=\"form-section\">\n            <h3>Income Information</h3>\n            \n            <div className=\"form-group toggle\">\n              <input\n                type=\"checkbox\"\n                id=\"useCustomTakeHome\"\n                checked={incomeData.useCustomTakeHome}\n                onChange={(e) => handleIncomeChange('useCustomTakeHome', e.target.checked)}\n              />\n              <label htmlFor=\"useCustomTakeHome\">\n                I know my monthly take-home pay (after taxes)\n              </label>\n            </div>\n            \n            {!incomeData.useCustomTakeHome ? (\n              <>\n                <div className=\"form-group\">\n                  <label htmlFor=\"income\">Income</label>\n                  <div className=\"input-group\">\n                    <input\n                      id=\"income\"\n                      value={incomeData.income}\n                      onChange={(e) => handleIncomeChange('income', e.target.value)}\n                      type=\"text\"\n                      placeholder=\"e.g. 75000\"\n                      className={errors.income ? \"error-input\" : \"\"}\n                    />\n                    <select\n                      value={incomeData.payType}\n                      onChange={(e) => handleIncomeChange('payType', e.target.value)}\n                    >\n                      <option value=\"hourly\">Hourly</option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"biweekly\">Bi-Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                      <option value=\"annual\">Annual</option>\n                    </select>\n                  </div>\n                  {errors.income && <p className=\"error\">{errors.income}</p>}\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">State</label>\n                  <select\n                    id=\"state\"\n                    value={incomeData.state}\n                    onChange={(e) => handleIncomeChange('state', e.target.value)}\n                    className={errors.state ? \"error-input\" : \"\"}\n                  >\n                    <option value=\"\">Select state</option>\n                    {Object.keys(STATE_TAX_RATES).sort().map(state => (\n                      <option key={state} value={state}>{state}</option>\n                    ))}\n                  </select>\n                  {errors.state && <p className=\"error\">{errors.state}</p>}\n                </div>\n              </>\n            ) : (\n              <div className=\"form-group\">\n                <label htmlFor=\"monthlyTakeHome\">Monthly Take-Home Pay</label>\n                <input\n                  id=\"monthlyTakeHome\"\n                  value={incomeData.monthlyTakeHome}\n                  onChange={(e) => handleIncomeChange('monthlyTakeHome', e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g. 4500\"\n                  className={errors.monthlyTakeHome ? \"error-input\" : \"\"}\n                />\n                {errors.monthlyTakeHome && <p className=\"error\">{errors.monthlyTakeHome}</p>}\n                <small>Enter your monthly income after taxes and deductions</small>\n              </div>\n            )}\n          </div>\n          \n          {/* Other Financial Details - Keep them visible but simpler */}\n          <div className=\"form-section\">\n            <h3>Financial Details</h3>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"monthlyDebts\">Monthly Debt Payments ($)</label>\n              <input\n                id=\"monthlyDebts\"\n                value={financialData.monthlyDebts}\n                onChange={(e) => handleFinancialChange('monthlyDebts', e.target.value)}\n                type=\"text\"\n                placeholder=\"e.g. 500\"\n                className={errors.monthlyDebts ? \"error-input\" : \"\"}\n              />\n              {errors.monthlyDebts && <p className=\"error\">{errors.monthlyDebts}</p>}\n              <small>Car loans, student loans, credit cards, etc.</small>\n            </div>\n          </div>\n\n          {/* Housing Details */}\n          <div className=\"form-section\">\n            <div className=\"section-header\">\n              <h3>Mortgage Details</h3>\n              <button \n                onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}\n                className=\"toggle-button\"\n              >\n                {showAdvancedOptions ? \"Hide Advanced\" : \"Show Advanced\"}\n              </button>\n            </div>\n            \n            {activeTab === 'analyze-mortgage' && (\n              <div className=\"form-group\">\n                <label htmlFor=\"homePrice\">Home Price</label>\n                <input\n                  id=\"homePrice\"\n                  value={housingData.homePrice}\n                  onChange={(e) => handleHousingChange('homePrice', e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g. 350000\"\n                  className={errors.homePrice ? \"error-input\" : \"\"}\n                />\n                {errors.homePrice && <p className=\"error\">{errors.homePrice}</p>}\n              </div>\n            )}\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"downPaymentPercent\">Down Payment (%)</label>\n                <input\n                  id=\"downPaymentPercent\"\n                  value={housingData.downPaymentPercent}\n                  onChange={(e) => handleHousingChange('downPaymentPercent', e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g. 20\"\n                  className={errors.downPaymentPercent ? \"error-input\" : \"\"}\n                />\n                {errors.downPaymentPercent && (\n                  <p className=\"error\">{errors.downPaymentPercent}</p>\n                )}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"interestRate\">Interest Rate (%)</label>\n                <input\n                  id=\"interestRate\"\n                  value={housingData.interestRate}\n                  onChange={(e) => handleHousingChange('interestRate', e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g. 6.5\"\n                  className={errors.interestRate ? \"error-input\" : \"\"}\n                />\n                {errors.interestRate && <p className=\"error\">{errors.interestRate}</p>}\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"loanTermYears\">Loan Term</label>\n              <select\n                id=\"loanTermYears\"\n                value={housingData.loanTermYears}\n                onChange={(e) => handleHousingChange('loanTermYears', e.target.value)}\n              >\n                <option value=\"15\">15 years</option>\n                <option value=\"20\">20 years</option>\n                <option value=\"30\">30 years</option>\n              </select>\n            </div>\n            \n            {showAdvancedOptions && (\n              <div className=\"advanced-options\">\n                <div className=\"form-group toggle\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"includePropertyTax\"\n                    checked={housingData.includePropertyTax}\n                    onChange={(e) => handleHousingChange('includePropertyTax', e.target.checked)}\n                  />\n                  <label htmlFor=\"includePropertyTax\">\n                    Include property tax\n                  </label>\n                </div>\n                \n                {housingData.includePropertyTax && (\n                  <div className=\"form-group indented\">\n                    <label htmlFor=\"propertyTaxRate\">Property Tax Rate (%)</label>\n                    <input\n                      id=\"propertyTaxRate\"\n                      value={housingData.propertyTaxRate}\n                      onChange={(e) => handleHousingChange('propertyTaxRate', e.target.value)}\n                      type=\"text\"\n                      placeholder=\"e.g. 1.1\"\n                    />\n                    <small>The average property tax rate in the US is 1.1%</small>\n                  </div>\n                )}\n\n                <div className=\"form-group toggle\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"includeHomeInsurance\"\n                    checked={housingData.includeHomeInsurance}\n                    onChange={(e) => handleHousingChange('includeHomeInsurance', e.target.checked)}\n                  />\n                  <label htmlFor=\"includeHomeInsurance\">\n                    Include home insurance\n                  </label>\n                </div>\n                \n                {housingData.includeHomeInsurance && (\n                  <div className=\"form-group indented\">\n                    <label htmlFor=\"homeInsurance\">Annual Insurance ($)</label>\n                    <input\n                      id=\"homeInsurance\"\n                      value={housingData.homeInsurance}\n                      onChange={(e) => handleHousingChange('homeInsurance', e.target.value)}\n                      type=\"text\"\n                      placeholder=\"e.g. 1200\"\n                    />\n                    <small>The average annual home insurance cost is $1,200</small>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          <button \n            onClick={handleCalculate}\n            className=\"calculate-btn\"\n          >\n            {activeTab === 'what-can-i-afford' ? 'Calculate What I Can Afford' : 'Analyze This Home'}\n          </button>\n        </div>\n\n        {/* Right Column - Results */}\n        <div className=\"calculator-results\">\n          {results ? (\n            <div className=\"results\">\n              <h2>Results Summary</h2>\n\n              {/* Visual representation of mortgage as % of take-home pay */}\n              <div className=\"affordability-visual\">\n                <h3>Mortgage Impact on Monthly Budget</h3>\n                <div className=\"affordability-meter\">\n                  <div className=\"meter-header\">\n                    <span>Monthly Take-Home: {formatCurrency(results.monthlyTakeHome)}</span>\n                    <span className={getAffordabilityColorClass(results.percentOfTakeHomePay)}>\n                      {results.percentOfTakeHomePay.toFixed(1)}% of Income\n                    </span>\n                  </div>\n                  <div className=\"meter-bar\">\n                    <div \n                      className={`meter-fill ${getAffordabilityColorClass(results.percentOfTakeHomePay)}`} \n                      style={{width: `${Math.min(results.percentOfTakeHomePay * 2, 100)}%`}}\n                    ></div>\n                  </div>\n                  <div className=\"meter-labels\">\n                    <span>0%</span>\n                    <span className=\"green\">25%</span>\n                    <span className=\"yellow\">35%</span>\n                    <span>50%</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Affordability Summary */}\n              <div className=\"result-summary\">\n                {activeTab === 'what-can-i-afford' ? (\n                  <>\n                    <div className=\"result-item total\">\n                      <span>Maximum Home Price:</span>\n                      <span className=\"highlight\">\n                        {formatCurrency(results.maxHomePrice)}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Down Payment ({results.downPaymentPercent}%):</span>\n                        <span>\n                          {formatCurrency(results.downPaymentAmount)}\n                        </span>\n                      </div>\n\n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.maxLoanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className={`result-item total ${results.isAffordable ? \"affordable\" : \"unaffordable\"}`}>\n                      <span>Affordability:</span>\n                      <span>\n                        {results.isAffordable \n                          ? \"✓ Affordable\" \n                          : \"⚠️ May be too expensive\"}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Home Price:</span>\n                        <span>\n                          {formatCurrency(results.homePrice)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.loanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {/* Monthly Payment Breakdown */}\n              <div className=\"payment-breakdown\">\n                <h3>Monthly Payment Breakdown</h3>\n\n                <div className=\"payment-details\">\n                  <div className=\"result-item\">\n                    <span>Principal & Interest:</span>\n                    <span>\n                      {formatCurrency(results.baseMonthlyPayment)}\n                    </span>\n                  </div>\n\n                  {results.monthlyPropertyTax > 0 && (\n                    <div className=\"result-item\">\n                      <span>Property Tax:</span>\n                      <span>\n                        {formatCurrency(results.monthlyPropertyTax)}\n                      </span>\n                    </div>\n                  )}\n\n                  {results.monthlyInsurance > 0 && (\n                    <div className=\"result-item\">\n                      <span>Home Insurance:</span>\n                      <span>\n                        {formatCurrency(results.monthlyInsurance)}\n                      </span>\n                    </div>\n                  )}\n\n                  <div className=\"result-item total\">\n                    <span>Total Monthly Payment:</span>\n                    <span>\n                      {formatCurrency(results.totalMonthlyPayment)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Term comparison */}\n              {paymentsByTerm && (\n                <div className=\"term-comparison\">\n                  <h3>Payment Options by Term</h3>\n\n                  <div className=\"term-options\">\n                    {Object.entries(paymentsByTerm).map(([term, data]) => (\n                      <div key={term} className=\"term-option\">\n                        <div className=\"term-header\">\n                          <span>{term} Year Mortgage:</span>\n                          <span className=\"term-payment\">{formatCurrency(data.totalPayment)}/mo</span>\n                        </div>\n                        \n                        <div className=\"term-details\">\n                          <div className=\"term-detail\">\n                            <span>Total Interest:</span>\n                            <span>{formatCurrency(data.totalInterest)}</span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>% of Take-Home:</span>\n                            <span className={getAffordabilityColorClass(data.percentOfTakeHome)}>\n                              {data.percentOfTakeHome.toFixed(1)}%\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Income and Expense Details Expandable Section */}\n              <div className=\"financial-details\">\n                <button\n                  onClick={() => setShowDetailedResults(!showDetailedResults)}\n                  className=\"toggle-details\"\n                >\n                  {showDetailedResults ? \"Hide Financial Details\" : \"Show Financial Details\"}\n                </button>\n\n                {showDetailedResults && (\n                  <div className=\"detailed-results\">\n                    {/* Tax Breakdown (if calculated from income) */}\n                    {!incomeData.useCustomTakeHome && (\n                      <div className=\"tax-summary\">\n                        <h3>Tax Summary</h3>\n                        <div className=\"tax-details\">\n                          <div className=\"result-item\">\n                            <span>Annual Income:</span>\n                            <span>\n                              {formatCurrency(results.annualIncome)}\n                            </span>\n                          </div>\n\n                          <div className=\"result-item\">\n                            <span>Federal Tax:</span>\n                            <span>\n                              {formatCurrency(results.federalTax)}\n                            </span>\n                          </div>\n\n                          <div className=\"result-item\">\n                            <span>FICA Tax:</span>\n                            <span>\n                              {formatCurrency(results.ficaTax)}\n                            </span>\n                          </div>\n\n                          <div className=\"result-item\">\n                            <span>State Tax:</span>\n                            <span>\n                              {formatCurrency(results.stateTax)}\n                            </span>\n                          </div>\n\n                          <div className=\"result-item total\">\n                            <span>Total Tax:</span>\n                            <span>\n                              {formatCurrency(results.totalTax)}\n                            </span>\n                          </div>\n\n                          <div className=\"result-item\">\n                            <span>Effective Tax Rate:</span>\n                            <span>\n                              {results.effectiveTaxRate.toFixed(1)}%\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Monthly Budget Breakdown */}\n                    <div className=\"budget-summary\">\n                      <h3>Monthly Budget</h3>\n                      <div className=\"budget-details\">\n                        <div className=\"result-item total take-home\">\n                          <span>Take-Home Pay:</span>\n                          <span>\n                            {formatCurrency(results.monthlyTakeHome)}\n                          </span>\n                        </div>\n\n                        <div className=\"result-item\">\n                          <span>Mortgage Payment:</span>\n                          <span>\n                            {formatCurrency(results.totalMonthlyPayment)}\n                          </span>\n                        </div>\n\n                        {results.monthlyDebts > 0 && (\n                          <div className=\"result-item\">\n                            <span>Other Debt Payments:</span>\n                            <span>\n                              {formatCurrency(results.monthlyDebts)}\n                            </span>\n                          </div>\n                        )}\n\n                        <div className=\"result-item total\">\n                          <span>Income Remaining:</span>\n                          <span>\n                            {formatCurrency(results.monthlyTakeHome - results.totalMonthlyPayment - results.monthlyDebts)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"no-results\">\n              <h3>Complete the form and calculate</h3>\n              <p>\n                Fill in your income and basic mortgage details to see what home price you can afford or \n                analyze a specific home price.\n              </p>\n            </div>\n          )}\n\n          {/* Affordability Guidelines */}\n          <div className=\"guidelines\">\n            <h3>Affordability Guidelines</h3>\n            <ul>\n              <li>\n                <strong>28% Rule:</strong> Your monthly housing payment should not exceed 28% of your monthly take-home pay for comfortable affordability.\n              </li>\n              <li>\n                <strong>36% Rule:</strong> Your total monthly debt payments (including housing) should ideally stay below 36% of your monthly take-home pay.\n              </li>\n              <li>\n                <strong>PITI:</strong> Remember that your total housing costs include Principal, Interest, Taxes, and Insurance.\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeAffordabilityCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}