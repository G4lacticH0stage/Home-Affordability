{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./TaxCalculator.css';import{INDIANA_COUNTIES}from'../data/indianaTaxData';import{MARYLAND_COUNTIES}from'../data/marylandTaxData';import{MICHIGAN_CITIES,calculateMichiganLocalTax}from'../data/michiganTaxData';import{MISSOURI_CITIES}from'../data/missouriTaxData';import{NEW_JERSEY_CITIES}from'../data/newJerseyTaxData';import{NEW_YORK_TAX,calculateNYTax}from'../data/newYorkTaxData';import{OHIO_MUNICIPALITIES}from'../data/ohioTaxData';import{OREGON_TAX}from'../data/oregon-tax';import{PENNSYLVANIA_TAX}from'../data/pennsylvaniaTaxData';import{WEST_VIRGINIA_TAX}from'../data/westVirginiaTaxData';import{STATE_TAX_DATA}from'../data/tax-data';// Utility functions\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const calculateMonthlyMortgage=(homePrice,downPayment,interestRate,loanTermYears)=>{// Calculate loan amount\nconst loanAmount=homePrice-downPayment;// Convert annual interest rate to monthly and decimal form\nconst monthlyInterestRate=interestRate/100/12;// Calculate number of payments\nconst numberOfPayments=loanTermYears*12;// Avoid division by zero for 0% interest\nif(monthlyInterestRate===0){return loanAmount/numberOfPayments;}// Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\nconst monthlyPayment=loanAmount*(monthlyInterestRate*Math.pow(1+monthlyInterestRate,numberOfPayments))/(Math.pow(1+monthlyInterestRate,numberOfPayments)-1);return monthlyPayment;};// Calculate maximum home price based on gross income\nconst calculateMaxHomePrice=function(monthlyGrossIncome,interestRate,loanTermYears,downPayment){let monthlyDebts=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;// Maximum payment based on whether there are debts included\n// If debts included, use 36% rule (minus debts), otherwise use 28% rule\nconst maxMonthlyPaymentPercent=monthlyDebts>0?0.36:0.28;const maxMonthlyPayment=monthlyGrossIncome*maxMonthlyPaymentPercent-monthlyDebts;if(maxMonthlyPayment<=0)return 0;// Convert annual interest rate to monthly\nconst monthlyInterestRate=interestRate/100/12;// Number of payments\nconst numberOfPayments=loanTermYears*12;// Avoid division by zero for 0% interest\nif(monthlyInterestRate===0){const maxLoanAmount=maxMonthlyPayment*numberOfPayments;return maxLoanAmount+downPayment;}// Calculate maximum loan amount\n// Using formula: P = pmt * (1 - (1 + r)^-n) / r\nconst maxLoanAmount=maxMonthlyPayment*(1-Math.pow(1+monthlyInterestRate,-numberOfPayments))/monthlyInterestRate;// Calculate max home price (loan amount + down payment)\nconst maxHomePrice=maxLoanAmount+downPayment;return maxHomePrice;};// Format currency for display\nconst formatCurrency=value=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',maximumFractionDigits:0}).format(value);};// Format percentage for display\nconst formatPercentage=value=>{return value.toFixed(1)+'%';};// Federal Tax Brackets 2024\n// Define the federal tax brackets correctly with \"limit\" being the upper bound of each bracket\nconst FEDERAL_TAX_BRACKETS_2024=[{min:0,max:11600,rate:0.10},{min:11600,max:47150,rate:0.12},{min:47150,max:100525,rate:0.22},{min:100525,max:191950,rate:0.24},{min:191950,max:243725,rate:0.32},{min:243725,max:609350,rate:0.35},{min:609350,max:Infinity,rate:0.37}];// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax=(income,brackets)=>{let tax=0;for(let i=0;i<brackets.length;i++){const currentBracket=brackets[i];// Calculate income in this bracket\nconst bracketMin=currentBracket.min;const bracketMax=currentBracket.max;if(income>bracketMin){// Calculate the portion of income that falls within this bracket\nconst taxableInThisBracket=Math.min(income,bracketMax)-bracketMin;tax+=taxableInThisBracket*currentBracket.rate;}// If we've processed all income, we can stop\nif(income<=bracketMax)break;}return tax;};// Example calculation for $58,000 income\nfunction calculateExampleTax(){const income=58000;const federalTax=calculateProgressiveTax(income,FEDERAL_TAX_BRACKETS_2024);console.log(`Federal tax on $${income.toFixed(2)}:`);// Show calculation breakdown\nlet totalTax=0;for(let i=0;i<FEDERAL_TAX_BRACKETS_2024.length;i++){const bracket=FEDERAL_TAX_BRACKETS_2024[i];if(income>bracket.min){const taxableAmount=Math.min(income,bracket.max)-bracket.min;const taxInBracket=taxableAmount*bracket.rate;totalTax+=taxInBracket;console.log(`${bracket.min.toLocaleString()} to ${Math.min(income,bracket.max).toLocaleString()}: ${taxableAmount.toLocaleString()} @ ${(bracket.rate*100).toFixed(1)}% = $${taxInBracket.toFixed(2)}`);}if(income<=bracket.max)break;}console.log(`Total federal tax: $${totalTax.toFixed(2)}`);console.log(`Effective tax rate: ${(totalTax/income*100).toFixed(2)}%`);return federalTax;}calculateExampleTax();// FICA rates\nconst FICA_RATES={socialSecurity:0.062,// 6.2%\nmedicare:0.0145,// 1.45%\nadditionalMedicare:0.009,// 0.9% additional Medicare tax for high earners\nsocialSecurityWageCap:168600// 2024 wage cap for Social Security tax\n};// State tax rates (simplified)\nconst STATE_TAX_RATES={\"Alabama\":0.05,\"Alaska\":0.00,\"Arizona\":0.025,\"Arkansas\":0.039,\"California\":0.095,\"Colorado\":0.044,\"Connecticut\":0.0699,\"Delaware\":0.066,\"Florida\":0.00,\"Georgia\":0.0539,\"Hawaii\":0.11,\"Idaho\":0.059,\"Illinois\":0.049,\"Indiana\":0.03,\"Iowa\":0.038,\"Kansas\":0.055,\"Kentucky\":0.04,\"Louisiana\":0.03,\"Maine\":0.071,\"Maryland\":0.057,\"Massachusetts\":0.09,\"Michigan\":0.042,\"Minnesota\":0.098,\"Mississippi\":0.044,\"Missouri\":0.047,\"Montana\":0.059,\"Nebraska\":0.052,\"Nevada\":0.00,\"New Hampshire\":0.05,\"New Jersey\":0.057,\"New Mexico\":0.059,\"New York\":0.065,\"North Carolina\":0.0425,\"North Dakota\":0.025,\"Ohio\":0.035,\"Oklahoma\":0.0475,\"Oregon\":0.099,\"Pennsylvania\":0.0307,\"Rhode Island\":0.0599,\"South Carolina\":0.062,\"South Dakota\":0.00,\"Tennessee\":0.00,\"Texas\":0.00,\"Utah\":0.0455,\"Vermont\":0.0875,\"Virginia\":0.0575,\"Washington\":0.00,\"West Virginia\":0.0482,\"Wisconsin\":0.0765,\"Wyoming\":0.00};// Default interest rates by term\nconst DEFAULT_INTEREST_RATES={10:5.84,15:5.96,30:6.5};// Convert various income types to annual\nconst convertToAnnualIncome=(income,payType)=>{const numericIncome=parseFloat(income);if(isNaN(numericIncome))return 0;switch(payType){case'hourly':return numericIncome*40*52;// 40 hours per week, 52 weeks per year\ncase'weekly':return numericIncome*52;case'biweekly':return numericIncome*26;case'monthly':return numericIncome*12;case'annual':default:return numericIncome;}};// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax=income=>{const{socialSecurity,medicare,additionalMedicare,socialSecurityWageCap}=FICA_RATES;// Social Security has a wage cap\nconst socialSecurityTax=Math.min(income,socialSecurityWageCap)*socialSecurity;// Regular Medicare tax\nlet medicareTax=income*medicare;// Additional Medicare tax for high earners (over $200,000)\nif(income>200000){medicareTax+=(income-200000)*additionalMedicare;}return{socialSecurity:socialSecurityTax,medicare:medicareTax,total:socialSecurityTax+medicareTax};};// Helper function to safely get tax rate value from different tax structures\nconst getTaxRateValue=taxData=>{if(!taxData)return 0;if(taxData.type===\"percentage\"||taxData.type===\"flat\"){return taxData.value;}else if(taxData.type===\"range\"){return(taxData.min+taxData.max)/2;// Use average of range\n}else if(taxData.type===\"fixed\"){return taxData.value;}return 0;};// Calculate local tax (city or county)\nconst calculateLocalTax=(income,state,city)=>{if(!state||!city||!STATE_TAX_DATA[state]||!STATE_TAX_DATA[state].hasLocalTax){return 0;}switch(state){case'Indiana':if(INDIANA_COUNTIES[city]){return income*getTaxRateValue(INDIANA_COUNTIES[city]);}break;case'Maryland':if(MARYLAND_COUNTIES[city]){return income*getTaxRateValue(MARYLAND_COUNTIES[city]);}break;case'Michigan':return calculateMichiganLocalTax(income,city);case'Missouri':if(MISSOURI_CITIES[city]){return income*getTaxRateValue(MISSOURI_CITIES[city]);}break;case'New Jersey':if(NEW_JERSEY_CITIES[city]){return income*getTaxRateValue(NEW_JERSEY_CITIES[city]);}break;case'New York':if(NEW_YORK_TAX.cities[city]){const taxResult=calculateNYTax(income,city);return taxResult.cityTax;}break;case'Ohio':if(OHIO_MUNICIPALITIES[city]){return income*getTaxRateValue(OHIO_MUNICIPALITIES[city]);}break;case'Oregon':return OREGON_TAX.calculateTax(income).localTax;case'Pennsylvania':if(PENNSYLVANIA_TAX.counties[city]){const countyData=PENNSYLVANIA_TAX.counties[city];if(countyData.type===\"fixed\"){return income*countyData.value;}else if(countyData.type===\"range\"){return income*((countyData.max+countyData.min)/2);}}break;case'West Virginia':if(WEST_VIRGINIA_TAX.cities[city]){return WEST_VIRGINIA_TAX.calculateTax(city);}break;}return 0;};// Calculate federal tax\nconst calculateFederalTax=income=>{return calculateProgressiveTax(income,FEDERAL_TAX_BRACKETS_2024);};// Calculate state tax (simplified)\nconst calculateStateTax=(income,state)=>{if(!state||!STATE_TAX_RATES[state])return 0;return income*STATE_TAX_RATES[state];};// Calculate total tax burden\nconst calculateTotalTax=(income,state)=>{const federalTax=calculateFederalTax(income);const ficaTaxes=calculateFICATax(income);const stateTax=calculateStateTax(income,state);return{federal:federalTax,fica:ficaTaxes.total,ficaSocialSecurity:ficaTaxes.socialSecurity,ficaMedicare:ficaTaxes.medicare,state:stateTax,local:0,// This will be calculated separately if local jurisdiction is provided\ntotal:federalTax+ficaTaxes.total+stateTax,effectiveRate:(federalTax+ficaTaxes.total+stateTax)/income};};// Get affordability color class based on income percentage and debt situation\nconst getAffordabilityColorClass=(percentage,hasDebts)=>{if(hasDebts){// Using 36% rule with debts\nif(percentage<=36)return\"green\";if(percentage<=42)return\"yellow\";return\"red\";}else{// Using 28% rule without debts\nif(percentage<=28)return\"green\";if(percentage<=32)return\"yellow\";return\"red\";}};const HomeAffordabilityCalculator=()=>{// Income and tax state\nconst[incomeData,setIncomeData]=useState({income:'',payType:'annual',state:'',city:'',useCustomTakeHome:false,monthlyTakeHome:''});// Housing state\nconst[housingData,setHousingData]=useState({homePrice:'',downPaymentType:'percent',// 'percent' or 'amount'\ndownPaymentPercent:'20',downPaymentAmount:'',loanTermYears:'30',includePropertyTax:true,propertyTaxRate:'1.1',includeHomeInsurance:true,homeInsurance:'1200'});// Additional financial details\nconst[financialData,setFinancialData]=useState({monthlyDebts:''});// Results and UI state\nconst[errors,setErrors]=useState({});const[results,setResults]=useState(null);const[activeTab,setActiveTab]=useState('what-can-i-afford');const[showDetailedResults,setShowDetailedResults]=useState(false);const[showAdvancedOptions,setShowAdvancedOptions]=useState(false);const[paymentsByTerm,setPaymentsByTerm]=useState(null);// Add city selection for local tax calculations\nconst getJurisdictionsForState=state=>{if(!state||!STATE_TAX_DATA[state]||!STATE_TAX_DATA[state].hasLocalTax){return[];}switch(state){case'Indiana':return Object.keys(INDIANA_COUNTIES);case'Maryland':return Object.keys(MARYLAND_COUNTIES);case'Michigan':return[...Object.keys(MICHIGAN_CITIES.exceptions),'Other'];case'Missouri':return Object.keys(MISSOURI_CITIES);case'New Jersey':return Object.keys(NEW_JERSEY_CITIES);case'New York':return Object.keys(NEW_YORK_TAX.cities);case'Ohio':return Object.keys(OHIO_MUNICIPALITIES);case'Pennsylvania':return['Philadelphia',...Object.keys(PENNSYLVANIA_TAX.counties).slice(0,10),'Other'];case'West Virginia':return Object.keys(WEST_VIRGINIA_TAX.cities),'Other';default:return[];}};// Get jurisdiction label based on state\nconst getJurisdictionLabel=state=>{if(!state||!STATE_TAX_DATA[state])return'Municipality/City';const stateData=STATE_TAX_DATA[state];switch(stateData.taxType){case'county':return'County';case'city':return'City/Municipality';case'school_district':return'School District';case'both':return'City/County';default:return'Municipality/City';}};// Set interest rate based on loan term\nuseEffect(()=>{const term=parseInt(housingData.loanTermYears,10);const defaultRate=DEFAULT_INTEREST_RATES[term]||DEFAULT_INTEREST_RATES[30];setHousingData(prev=>({...prev,interestRate:defaultRate}));},[housingData.loanTermYears]);// Calculate down payment amount when percent changes\nuseEffect(()=>{if(housingData.downPaymentType==='percent'&&housingData.homePrice){const homePrice=parseFloat(housingData.homePrice);const percent=parseFloat(housingData.downPaymentPercent);if(!isNaN(homePrice)&&!isNaN(percent)){const amount=homePrice*(percent/100);setHousingData(prev=>({...prev,downPaymentAmount:amount.toFixed(0)}));}}},[housingData.downPaymentPercent,housingData.homePrice,housingData.downPaymentType]);// Calculate down payment percent when amount changes\nuseEffect(()=>{if(housingData.downPaymentType==='amount'&&housingData.homePrice){const homePrice=parseFloat(housingData.homePrice);const amount=parseFloat(housingData.downPaymentAmount);if(!isNaN(homePrice)&&!isNaN(amount)&&homePrice>0){const percent=amount/homePrice*100;setHousingData(prev=>({...prev,downPaymentPercent:percent.toFixed(1)}));}}},[housingData.downPaymentAmount,housingData.homePrice,housingData.downPaymentType]);// Handle changes to income data\nconst handleIncomeChange=(field,value)=>{setIncomeData(prev=>{// If changing state, reset city\nif(field==='state'){return{...prev,[field]:value,city:''};}return{...prev,[field]:value};});};// Handle changes to housing data\nconst handleHousingChange=(field,value)=>{setHousingData(prev=>({...prev,[field]:value}));};// Handle changes to financial data\nconst handleFinancialChange=(field,value)=>{setFinancialData(prev=>({...prev,[field]:value}));};// Switch between percentage and amount for down payment\nconst handleDownPaymentTypeChange=type=>{setHousingData(prev=>({...prev,downPaymentType:type}));};// Validate the input form\nconst validateForm=()=>{const newErrors={};if(!incomeData.useCustomTakeHome){// Validate income inputs\nif(!incomeData.income){newErrors.income='Income is required';}else if(isNaN(parseFloat(incomeData.income))||parseFloat(incomeData.income)<=0){newErrors.income='Please enter a valid income amount';}if(!incomeData.state){newErrors.state='State selection is required for tax calculation';}// Validate city selection if state has local taxes\nif(incomeData.state&&STATE_TAX_DATA[incomeData.state]&&STATE_TAX_DATA[incomeData.state].hasLocalTax&&!incomeData.city){newErrors.city=`${getJurisdictionLabel(incomeData.state)} selection is required for accurate tax calculation`;}}else{// Validate custom take-home pay\nif(!incomeData.monthlyTakeHome){newErrors.monthlyTakeHome='Monthly take-home pay is required';}else if(isNaN(parseFloat(incomeData.monthlyTakeHome))||parseFloat(incomeData.monthlyTakeHome)<=0){newErrors.monthlyTakeHome='Please enter a valid monthly take-home amount';}}// If we're analyzing a specific home, validate home price\nif(activeTab==='analyze-mortgage'&&!housingData.homePrice){newErrors.homePrice='Home price is required';}else if(activeTab==='analyze-mortgage'&&(isNaN(parseFloat(housingData.homePrice))||parseFloat(housingData.homePrice)<=0)){newErrors.homePrice='Please enter a valid home price';}// Validate down payment\nif(housingData.downPaymentType==='percent'){if(!housingData.downPaymentPercent||isNaN(parseFloat(housingData.downPaymentPercent))||parseFloat(housingData.downPaymentPercent)<0||parseFloat(housingData.downPaymentPercent)>100){newErrors.downPaymentPercent='Down payment must be between 0% and 100%';}}else{if(!housingData.downPaymentAmount||isNaN(parseFloat(housingData.downPaymentAmount))||parseFloat(housingData.downPaymentAmount)<0){newErrors.downPaymentAmount='Please enter a valid down payment amount';}}// Validate optional financial data\nif(financialData.monthlyDebts&&(isNaN(parseFloat(financialData.monthlyDebts))||parseFloat(financialData.monthlyDebts)<0)){newErrors.monthlyDebts='Please enter a valid monthly debt amount';}setErrors(newErrors);return Object.keys(newErrors).length===0;};// Calculate affordability (what can I afford)\nconst calculateAffordability=()=>{if(!validateForm())return;try{let annualIncome=0;let monthlyGrossIncome=0;let monthlyTakeHome=0;let taxResults={total:0,federal:0,fica:0,state:0,local:0,effectiveRate:0};// Calculate gross income and taxes\nif(!incomeData.useCustomTakeHome){// Convert to annual income and calculate taxes\nannualIncome=convertToAnnualIncome(incomeData.income,incomeData.payType);// Use local tax data if available\nif(incomeData.city&&STATE_TAX_DATA[incomeData.state]&&STATE_TAX_DATA[incomeData.state].hasLocalTax){// Calculate local tax\nconst localTax=calculateLocalTax(annualIncome,incomeData.state,incomeData.city);taxResults=calculateTotalTax(annualIncome,incomeData.state);taxResults.local=localTax;taxResults.total+=localTax;}else{taxResults=calculateTotalTax(annualIncome,incomeData.state);}monthlyGrossIncome=annualIncome/12;const takeHomePay=annualIncome-taxResults.total;monthlyTakeHome=takeHomePay/12;}else{// Use custom take-home pay\nmonthlyTakeHome=parseFloat(incomeData.monthlyTakeHome);// Estimate gross income based on take-home pay\nmonthlyGrossIncome=monthlyTakeHome*1.3;annualIncome=monthlyGrossIncome*12;}// Parse other inputs\nconst monthlyDebts=parseFloat(financialData.monthlyDebts)||0;const hasDebts=monthlyDebts>0;const interestRate=parseFloat(housingData.interestRate);const loanTermYears=parseInt(housingData.loanTermYears,10);// Determine down payment based on type\nlet downPaymentPercent,downPaymentAmount;if(housingData.downPaymentType==='percent'){downPaymentPercent=parseFloat(housingData.downPaymentPercent);// Will calculate actual amount after we know max home price\n}else{downPaymentAmount=parseFloat(housingData.downPaymentAmount);// Will use this fixed amount\n}// Calculate affordability ratios\n// Front-end ratio: 28% of monthly gross income for housing (PITI)\nconst frontEndMaxPayment=monthlyGrossIncome*0.28;// Back-end ratio: 36% of monthly gross income for all debt payments\nconst backEndMaxPayment=monthlyGrossIncome*0.36-monthlyDebts;// Use the more conservative of the two\nconst maxMonthlyPayment=Math.min(frontEndMaxPayment,backEndMaxPayment);// Adjust for property tax and insurance\nlet additionalHousingCosts=0;if(housingData.includePropertyTax){const propertyTaxRate=parseFloat(housingData.propertyTaxRate)/100;// Will estimate with a placeholder value for now\nadditionalHousingCosts+=300000*propertyTaxRate/12;// Placeholder home value\n}if(housingData.includeHomeInsurance){const annualInsurance=parseFloat(housingData.homeInsurance)||1200;additionalHousingCosts+=annualInsurance/12;}// Adjust max payment to account for property tax and insurance\nconst maxPIPayment=maxMonthlyPayment-additionalHousingCosts;if(maxPIPayment<=0){setErrors({general:'Your expenses and debts are too high relative to your income for a mortgage'});return;}// Calculate max home price based on the down payment situation\nlet maxHomePrice,maxLoanAmount;if(housingData.downPaymentType==='percent'){// Percentage-based down payment\nmaxHomePrice=calculateMaxHomePrice(monthlyGrossIncome,interestRate,loanTermYears,0,// Temporarily use 0 for down payment\nmonthlyDebts);// Now apply the down payment percentage\ndownPaymentAmount=maxHomePrice*(downPaymentPercent/100);maxLoanAmount=maxHomePrice-downPaymentAmount;}else{// Fixed amount down payment\n// For fixed down payment, we need to calculate differently\nconst fixedDownPayment=parseFloat(housingData.downPaymentAmount);// Calculate max loan amount first\nconst maxLoanPayment=maxPIPayment;const monthlyInterestRate=interestRate/100/12;const numberOfPayments=loanTermYears*12;if(monthlyInterestRate===0){maxLoanAmount=maxLoanPayment*numberOfPayments;}else{maxLoanAmount=maxLoanPayment*(1-Math.pow(1+monthlyInterestRate,-numberOfPayments))/monthlyInterestRate;}// Then calculate max home price by adding fixed down payment\nmaxHomePrice=maxLoanAmount+fixedDownPayment;downPaymentAmount=fixedDownPayment;downPaymentPercent=fixedDownPayment/maxHomePrice*100;}// Calculate monthly mortgage payment\nconst baseMonthlyPayment=calculateMonthlyMortgage(maxHomePrice,downPaymentAmount,interestRate,loanTermYears);// Calculate more precise property tax and insurance now that we know max home price\nlet totalMonthlyPayment=baseMonthlyPayment;let monthlyPropertyTax=0;let monthlyInsurance=0;if(housingData.includePropertyTax){const propertyTaxRate=parseFloat(housingData.propertyTaxRate)/100;monthlyPropertyTax=maxHomePrice*propertyTaxRate/12;totalMonthlyPayment+=monthlyPropertyTax;}if(housingData.includeHomeInsurance){const annualInsurance=parseFloat(housingData.homeInsurance)||1200;monthlyInsurance=annualInsurance/12;totalMonthlyPayment+=monthlyInsurance;}// Calculate payment options for different terms\nconst termOptions=[10,15,30];const paymentOptions={};termOptions.forEach(term=>{const termInterestRate=DEFAULT_INTEREST_RATES[term]||DEFAULT_INTEREST_RATES[30];const termPayment=calculateMonthlyMortgage(maxHomePrice,downPaymentAmount,termInterestRate,term);let totalTermPayment=termPayment;if(housingData.includePropertyTax){totalTermPayment+=monthlyPropertyTax;}if(housingData.includeHomeInsurance){totalTermPayment+=monthlyInsurance;}// Calculate total interest paid over loan term\nconst totalInterest=termPayment*term*12-maxLoanAmount;// Calculate percentage of gross income\nconst percentOfGrossIncome=totalTermPayment/monthlyGrossIncome*100;// Calculate percentage of take-home income\nconst percentOfTakeHomeIncome=totalTermPayment/monthlyTakeHome*100;// Determine affordability class\nconst affordabilityClass=getAffordabilityColorClass(percentOfGrossIncome,hasDebts);paymentOptions[term]={interestRate:termInterestRate,payment:termPayment,totalPayment:totalTermPayment,totalInterest:totalInterest,percentOfGrossIncome:percentOfGrossIncome,percentOfTakeHomeIncome:percentOfTakeHomeIncome,affordabilityClass:affordabilityClass};});// Calculate percentage of gross income\nconst percentOfGrossIncome=totalMonthlyPayment/monthlyGrossIncome*100;// Calculate percentage of take-home income\nconst percentOfTakeHomeIncome=totalMonthlyPayment/monthlyTakeHome*100;// Determine affordability class (color coding)\nconst affordabilityClass=getAffordabilityColorClass(percentOfGrossIncome,hasDebts);// Set results for display\nsetResults({annualIncome:annualIncome,monthlyGrossIncome:monthlyGrossIncome,monthlyTakeHome:monthlyTakeHome,maxHomePrice:maxHomePrice,maxLoanAmount:maxLoanAmount,downPaymentAmount:downPaymentAmount,downPaymentPercent:downPaymentPercent,baseMonthlyPayment:baseMonthlyPayment,monthlyPropertyTax:monthlyPropertyTax,monthlyInsurance:monthlyInsurance,totalMonthlyPayment:totalMonthlyPayment,percentOfGrossIncome:percentOfGrossIncome,percentOfTakeHomeIncome:percentOfTakeHomeIncome,affordabilityClass:affordabilityClass,taxResults:taxResults});// Set payment options by term\nsetPaymentsByTerm(paymentOptions);}catch(error){console.error(\"Calculation error:\",error);setErrors({general:'An error occurred during calculations. Please check your inputs.'});}};// Calculate affordability for a specific home price\nconst analyzeMortgage=()=>{if(!validateForm())return;try{let annualIncome=0;let monthlyGrossIncome=0;let monthlyTakeHome=0;let taxResults={total:0,federal:0,fica:0,state:0,local:0,effectiveRate:0};// Calculate gross income and taxes\nif(!incomeData.useCustomTakeHome){// Convert to annual income and calculate taxes\nannualIncome=convertToAnnualIncome(incomeData.income,incomeData.payType);// Use local tax data if available\nif(incomeData.city&&STATE_TAX_DATA[incomeData.state]&&STATE_TAX_DATA[incomeData.state].hasLocalTax){// Calculate local tax\nconst localTax=calculateLocalTax(annualIncome,incomeData.state,incomeData.city);taxResults=calculateTotalTax(annualIncome,incomeData.state);taxResults.local=localTax;taxResults.total+=localTax;}else{taxResults=calculateTotalTax(annualIncome,incomeData.state);}monthlyGrossIncome=annualIncome/12;const takeHomePay=annualIncome-taxResults.total;monthlyTakeHome=takeHomePay/12;}else{// Use custom take-home pay\nmonthlyTakeHome=parseFloat(incomeData.monthlyTakeHome);// Estimate gross income based on take-home pay\nmonthlyGrossIncome=monthlyTakeHome*1.3;annualIncome=monthlyGrossIncome*12;}// Parse inputs for the specified home\nconst homePrice=parseFloat(housingData.homePrice);const monthlyDebts=parseFloat(financialData.monthlyDebts)||0;const hasDebts=monthlyDebts>0;const interestRate=parseFloat(housingData.interestRate);const loanTermYears=parseInt(housingData.loanTermYears,10);// Calculate down payment\nlet downPaymentAmount,downPaymentPercent;if(housingData.downPaymentType==='percent'){downPaymentPercent=parseFloat(housingData.downPaymentPercent);downPaymentAmount=homePrice*(downPaymentPercent/100);}else{downPaymentAmount=parseFloat(housingData.downPaymentAmount);downPaymentPercent=downPaymentAmount/homePrice*100;}// Calculate loan amount\nconst loanAmount=homePrice-downPaymentAmount;// Calculate monthly mortgage payment\nconst baseMonthlyPayment=calculateMonthlyMortgage(homePrice,downPaymentAmount,interestRate,loanTermYears);// Calculate property tax and insurance\nlet totalMonthlyPayment=baseMonthlyPayment;let monthlyPropertyTax=0;let monthlyInsurance=0;if(housingData.includePropertyTax){const propertyTaxRate=parseFloat(housingData.propertyTaxRate)/100;monthlyPropertyTax=homePrice*propertyTaxRate/12;totalMonthlyPayment+=monthlyPropertyTax;}if(housingData.includeHomeInsurance){const annualInsurance=parseFloat(housingData.homeInsurance)||1200;monthlyInsurance=annualInsurance/12;totalMonthlyPayment+=monthlyInsurance;}// Calculate percentage of gross income\nconst percentOfGrossIncome=totalMonthlyPayment/monthlyGrossIncome*100;// Determine affordability using standard rules\nlet isAffordable=false;if(hasDebts){// If they have other debts, use back-end ratio (36% rule)\nconst totalMonthlyDebtPayments=totalMonthlyPayment+monthlyDebts;const backEndRatio=totalMonthlyDebtPayments/monthlyGrossIncome*100;isAffordable=backEndRatio<=36;}else{// Otherwise use front-end ratio (28% rule)\nisAffordable=percentOfGrossIncome<=28;}// Determine affordability class (color coding)\nconst affordabilityClass=getAffordabilityColorClass(percentOfGrossIncome,hasDebts);// Calculate payment options for different terms\nconst termOptions=[10,15,30];const paymentOptions={};termOptions.forEach(term=>{const termInterestRate=DEFAULT_INTEREST_RATES[term]||DEFAULT_INTEREST_RATES[30];const termPayment=calculateMonthlyMortgage(homePrice,downPaymentAmount,termInterestRate,term);let totalTermPayment=termPayment;if(housingData.includePropertyTax){totalTermPayment+=monthlyPropertyTax;}if(housingData.includeHomeInsurance){totalTermPayment+=monthlyInsurance;}// Calculate total interest paid over loan term\nconst totalInterest=termPayment*term*12-loanAmount;// Calculate percentage of gross income\nconst percentOfGrossIncome=totalTermPayment/monthlyGrossIncome*100;// Determine affordability class\nconst affordabilityClass=getAffordabilityColorClass(percentOfGrossIncome,hasDebts);paymentOptions[term]={interestRate:termInterestRate,payment:termPayment,totalPayment:totalTermPayment,totalInterest:totalInterest,percentOfGrossIncome:percentOfGrossIncome,affordabilityClass:affordabilityClass};});// Set results for display\nsetResults({annualIncome:annualIncome,monthlyGrossIncome:monthlyGrossIncome,monthlyTakeHome:monthlyTakeHome,homePrice:homePrice,loanAmount:loanAmount,downPaymentAmount:downPaymentAmount,downPaymentPercent:downPaymentPercent,baseMonthlyPayment:baseMonthlyPayment,monthlyPropertyTax:monthlyPropertyTax,monthlyInsurance:monthlyInsurance,totalMonthlyPayment:totalMonthlyPayment,percentOfGrossIncome:percentOfGrossIncome,affordabilityClass:affordabilityClass,isAffordable:isAffordable,taxResults:taxResults});// Set payment options by term\nsetPaymentsByTerm(paymentOptions);}catch(error){console.error(\"Calculation error:\",error);setErrors({general:'An error occurred during calculations. Please check your inputs.'});}};// Handle calculation based on active tab\nconst handleCalculate=()=>{if(activeTab==='what-can-i-afford'){calculateAffordability();}else{analyzeMortgage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Home Affordability Calculator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='what-can-i-afford'?'active':''}`,onClick:()=>setActiveTab('what-can-i-afford'),children:\"What Can I Afford?\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='analyze-mortgage'?'active':''}`,onClick:()=>setActiveTab('analyze-mortgage'),children:\"Analyze Mortgage\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-body\",style:{display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-inputs\",style:{flex:'1',marginRight:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Income & Location\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Income Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeData.income,onChange:e=>handleIncomeChange('income',e.target.value),placeholder:\"Enter income\",disabled:incomeData.useCustomTakeHome,className:errors.income?'error':''}),errors.income&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.income})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pay Frequency\"}),/*#__PURE__*/_jsxs(\"select\",{value:incomeData.payType,onChange:e=>handleIncomeChange('payType',e.target.value),disabled:incomeData.useCustomTakeHome,children:[/*#__PURE__*/_jsx(\"option\",{value:\"hourly\",children:\"Hourly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weekly\",children:\"Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"biweekly\",children:\"Bi-weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"annual\",children:\"Annual\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"State\"}),/*#__PURE__*/_jsxs(\"select\",{value:incomeData.state,onChange:e=>handleIncomeChange('state',e.target.value),disabled:incomeData.useCustomTakeHome,className:errors.state?'error':'',children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select State\"}),Object.keys(STATE_TAX_RATES).map(state=>/*#__PURE__*/_jsx(\"option\",{value:state,children:state},state))]}),errors.state&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.state})]}),incomeData.state&&STATE_TAX_DATA[incomeData.state]&&STATE_TAX_DATA[incomeData.state].hasLocalTax&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:getJurisdictionLabel(incomeData.state)}),/*#__PURE__*/_jsxs(\"select\",{value:incomeData.city,onChange:e=>handleIncomeChange('city',e.target.value),disabled:incomeData.useCustomTakeHome,className:errors.city?'error':'',children:[/*#__PURE__*/_jsxs(\"option\",{value:\"\",children:[\"Select \",getJurisdictionLabel(incomeData.state)]}),getJurisdictionsForState(incomeData.state).map(jurisdiction=>/*#__PURE__*/_jsx(\"option\",{value:jurisdiction,children:jurisdiction},jurisdiction))]}),errors.city&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.city})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-toggle\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:incomeData.useCustomTakeHome,onChange:e=>handleIncomeChange('useCustomTakeHome',e.target.checked)}),\"I know my monthly take-home pay\"]})}),incomeData.useCustomTakeHome&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Monthly Take-Home Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeData.monthlyTakeHome,onChange:e=>handleIncomeChange('monthlyTakeHome',e.target.value),placeholder:\"Enter monthly take-home pay\",className:errors.monthlyTakeHome?'error':''}),errors.monthlyTakeHome&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.monthlyTakeHome})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Home Details\"}),activeTab==='analyze-mortgage'&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Home Price\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.homePrice,onChange:e=>handleHousingChange('homePrice',e.target.value),placeholder:\"Enter home price\",className:errors.homePrice?'error':''}),errors.homePrice&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.homePrice})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Down Payment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-input-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-button ${housingData.downPaymentType==='percent'?'active':''}`,onClick:()=>handleDownPaymentTypeChange('percent'),children:\"%\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`toggle-button ${housingData.downPaymentType==='amount'?'active':''}`,onClick:()=>handleDownPaymentTypeChange('amount'),children:\"$\"})]}),housingData.downPaymentType==='percent'?/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.downPaymentPercent,onChange:e=>handleHousingChange('downPaymentPercent',e.target.value),placeholder:\"Enter percentage\",className:errors.downPaymentPercent?'error':''}):/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.downPaymentAmount,onChange:e=>handleHousingChange('downPaymentAmount',e.target.value),placeholder:\"Enter amount\",className:errors.downPaymentAmount?'error':''})]}),errors.downPaymentPercent&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.downPaymentPercent}),errors.downPaymentAmount&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.downPaymentAmount})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Loan Term\"}),/*#__PURE__*/_jsxs(\"select\",{value:housingData.loanTermYears,onChange:e=>handleHousingChange('loanTermYears',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"10 years\"}),/*#__PURE__*/_jsx(\"option\",{value:\"15\",children:\"15 years\"}),/*#__PURE__*/_jsx(\"option\",{value:\"30\",children:\"30 years\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Interest Rate (%)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.interestRate,onChange:e=>handleHousingChange('interestRate',e.target.value),step:\"0.01\",min:\"0\",max:\"15\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-section\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-advanced-btn\",onClick:()=>setShowAdvancedOptions(!showAdvancedOptions),children:showAdvancedOptions?'Hide Advanced Options':'Show Advanced Options'}),showAdvancedOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"advanced-options\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-toggle\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:housingData.includePropertyTax,onChange:e=>handleHousingChange('includePropertyTax',e.target.checked)}),\"Include Property Tax\"]})}),housingData.includePropertyTax&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Property Tax Rate (%/year)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.propertyTaxRate,onChange:e=>handleHousingChange('propertyTaxRate',e.target.value),step:\"0.01\",min:\"0\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-toggle\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:housingData.includeHomeInsurance,onChange:e=>handleHousingChange('includeHomeInsurance',e.target.checked)}),\"Include Home Insurance\"]})}),housingData.includeHomeInsurance&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Annual Home Insurance ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:housingData.homeInsurance,onChange:e=>handleHousingChange('homeInsurance',e.target.value),min:\"0\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Additional Financial Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Monthly Debt Payments\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:financialData.monthlyDebts,onChange:e=>handleFinancialChange('monthlyDebts',e.target.value),placeholder:\"Car loans, credit cards, etc.\",className:errors.monthlyDebts?'error':''}),errors.monthlyDebts&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.monthlyDebts})]})]}),errors.general&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message general-error\",children:errors.general}),/*#__PURE__*/_jsx(\"button\",{className:\"calculate-btn\",onClick:handleCalculate,children:\"Calculate\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calculator-results\",style:{flex:'1',marginLeft:'20px'},children:results?/*#__PURE__*/_jsxs(\"div\",{className:\"results\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Results Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"affordability-visual\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Mortgage Impact on Monthly Budget\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"affordability-meter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meter-header\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Monthly Gross Income: \",formatCurrency(results.monthlyGrossIncome)]}),/*#__PURE__*/_jsxs(\"span\",{className:results.affordabilityClass,children:[results.percentOfGrossIncome.toFixed(1),\"% of Gross Income\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meter-header\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Monthly Take-Home: \",formatCurrency(results.monthlyTakeHome)]}),/*#__PURE__*/_jsxs(\"span\",{className:results.affordabilityClass,children:[results.percentOfTakeHomeIncome.toFixed(1),\"% of Take-Home Pay\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"meter-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:`meter-fill ${results.affordabilityClass}`,style:{width:`${Math.min(results.percentOfGrossIncome*2,100)}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"meter-labels\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"0%\"}),/*#__PURE__*/_jsx(\"span\",{children:\"28%\"}),/*#__PURE__*/_jsx(\"span\",{children:\"32%\"}),/*#__PURE__*/_jsx(\"span\",{children:\"50%\"})]}),/*#__PURE__*/_jsx(\"div\",{className:`affordability-message ${results.affordabilityClass}`,children:results.affordabilityClass===\"green\"?\"You are well within budget, you should be proud!\":results.affordabilityClass===\"yellow\"?\"This house is a little outside of your budget. It is manageable, but you'll need to be more conscious about spending.\":\"This house is outside of your budget. Maybe another home will be more suitable, but if your heart is set on this one be sure to cut expenses elsewhere.\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-summary\",children:activeTab==='what-can-i-afford'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-item total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Maximum Home Price:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:formatCurrency(results.maxHomePrice)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Down Payment (\",results.downPaymentPercent.toFixed(1),\"%):\"]}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.downPaymentAmount)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Loan Amount:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.maxLoanAmount)})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:`result-item total ${results.isAffordable?\"affordable\":\"unaffordable\"}`,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Affordability:\"}),/*#__PURE__*/_jsx(\"span\",{children:results.isAffordable?\"✓ Affordable\":\"⚠️ May be too expensive\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Home Price:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.homePrice)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Loan Amount:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.loanAmount)})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-breakdown\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Monthly Payment Breakdown\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Principal & Interest:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.baseMonthlyPayment)})]}),results.monthlyPropertyTax>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Property Tax:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.monthlyPropertyTax)})]}),results.monthlyInsurance>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Home Insurance:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.monthlyInsurance)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Monthly Payment:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(results.totalMonthlyPayment)})]})]})]}),paymentsByTerm&&/*#__PURE__*/_jsxs(\"div\",{className:\"term-comparison\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Options by Term\"}),/*#__PURE__*/_jsx(\"div\",{className:\"term-options\",children:Object.entries(paymentsByTerm).map(_ref=>{let[term,data]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:`term-option ${data.affordabilityClass}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"term-header\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[term,\" Year \",term===housingData.loanTermYears?'(selected)':'']}),/*#__PURE__*/_jsxs(\"span\",{className:\"term-payment\",children:[formatCurrency(data.totalPayment),\"/mo\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"term-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"term-detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Rate:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[data.interestRate.toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"term-detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"% of Gross Income:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[data.percentOfGrossIncome.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"term-detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"% of Take-Home Pay:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[data.percentOfTakeHomeIncome.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"term-detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Interest:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(data.totalInterest)})]})]})]},term);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"financial-details\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-details-btn\",onClick:()=>setShowDetailedResults(!showDetailedResults),children:showDetailedResults?'Hide Detailed Analysis':'Show Detailed Analysis'}),showDetailedResults&&/*#__PURE__*/_jsx(\"div\",{className:\"detailed-results\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tax-breakdown\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tax Breakdown\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Federal Tax:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formatCurrency(results.taxResults.federal),\"/year\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"FICA:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formatCurrency(results.taxResults.fica),\"/year\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"State Tax:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formatCurrency(results.taxResults.state),\"/year\"]})]}),results.taxResults.local>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Local Tax:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formatCurrency(results.taxResults.local),\"/year\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Tax:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formatCurrency(results.taxResults.total),\"/year\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Effective Tax Rate:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[(results.taxResults.effectiveRate*100).toFixed(1),\"%\"]})]})]})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-results\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Enter your details and click \\\"Calculate\\\" to see results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How This Calculator Works\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This calculator uses industry-standard affordability guidelines:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"28% Rule:\"}),\" Your monthly mortgage payment should not exceed 28% of your gross monthly income.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"36% Rule:\"}),\" Your total monthly debt payments (including mortgage) should not exceed 36% of your gross monthly income.\"]})]}),/*#__PURE__*/_jsx(\"p\",{children:\"The calculator uses these rules to determine either how much home you can afford or whether a specific home price is affordable for you.\"})]})]})})]})]});};export default HomeAffordabilityCalculator;","map":{"version":3,"names":["React","useState","useEffect","INDIANA_COUNTIES","MARYLAND_COUNTIES","MICHIGAN_CITIES","calculateMichiganLocalTax","MISSOURI_CITIES","NEW_JERSEY_CITIES","NEW_YORK_TAX","calculateNYTax","OHIO_MUNICIPALITIES","OREGON_TAX","PENNSYLVANIA_TAX","WEST_VIRGINIA_TAX","STATE_TAX_DATA","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","calculateMonthlyMortgage","homePrice","downPayment","interestRate","loanTermYears","loanAmount","monthlyInterestRate","numberOfPayments","monthlyPayment","Math","pow","calculateMaxHomePrice","monthlyGrossIncome","monthlyDebts","arguments","length","undefined","maxMonthlyPaymentPercent","maxMonthlyPayment","maxLoanAmount","maxHomePrice","formatCurrency","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","formatPercentage","toFixed","FEDERAL_TAX_BRACKETS_2024","min","max","rate","Infinity","calculateProgressiveTax","income","brackets","tax","i","currentBracket","bracketMin","bracketMax","taxableInThisBracket","calculateExampleTax","federalTax","console","log","totalTax","bracket","taxableAmount","taxInBracket","toLocaleString","FICA_RATES","socialSecurity","medicare","additionalMedicare","socialSecurityWageCap","STATE_TAX_RATES","DEFAULT_INTEREST_RATES","convertToAnnualIncome","payType","numericIncome","parseFloat","isNaN","calculateFICATax","socialSecurityTax","medicareTax","total","getTaxRateValue","taxData","type","calculateLocalTax","state","city","hasLocalTax","cities","taxResult","cityTax","calculateTax","localTax","counties","countyData","calculateFederalTax","calculateStateTax","calculateTotalTax","ficaTaxes","stateTax","federal","fica","ficaSocialSecurity","ficaMedicare","local","effectiveRate","getAffordabilityColorClass","percentage","hasDebts","HomeAffordabilityCalculator","incomeData","setIncomeData","useCustomTakeHome","monthlyTakeHome","housingData","setHousingData","downPaymentType","downPaymentPercent","downPaymentAmount","includePropertyTax","propertyTaxRate","includeHomeInsurance","homeInsurance","financialData","setFinancialData","errors","setErrors","results","setResults","activeTab","setActiveTab","showDetailedResults","setShowDetailedResults","showAdvancedOptions","setShowAdvancedOptions","paymentsByTerm","setPaymentsByTerm","getJurisdictionsForState","Object","keys","exceptions","slice","getJurisdictionLabel","stateData","taxType","term","parseInt","defaultRate","prev","percent","amount","handleIncomeChange","field","handleHousingChange","handleFinancialChange","handleDownPaymentTypeChange","validateForm","newErrors","calculateAffordability","annualIncome","taxResults","takeHomePay","frontEndMaxPayment","backEndMaxPayment","additionalHousingCosts","annualInsurance","maxPIPayment","general","fixedDownPayment","maxLoanPayment","baseMonthlyPayment","totalMonthlyPayment","monthlyPropertyTax","monthlyInsurance","termOptions","paymentOptions","forEach","termInterestRate","termPayment","totalTermPayment","totalInterest","percentOfGrossIncome","percentOfTakeHomeIncome","affordabilityClass","payment","totalPayment","error","analyzeMortgage","isAffordable","totalMonthlyDebtPayments","backEndRatio","handleCalculate","className","children","onClick","display","flexDirection","flex","marginRight","onChange","e","target","placeholder","disabled","map","jurisdiction","checked","step","marginLeft","width","entries","_ref","data"],"sources":["/Users/elizabethrichardson/taxcalc/src/components/HomeAffordabilityCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TaxCalculator.css';\nimport { INDIANA_COUNTIES } from '../data/indianaTaxData';\nimport { MARYLAND_COUNTIES } from '../data/marylandTaxData';\nimport { MICHIGAN_CITIES, calculateMichiganLocalTax } from '../data/michiganTaxData';\nimport { MISSOURI_CITIES } from '../data/missouriTaxData';\nimport { NEW_JERSEY_CITIES } from '../data/newJerseyTaxData';\nimport { NEW_YORK_TAX, calculateNYTax } from '../data/newYorkTaxData';\nimport { OHIO_MUNICIPALITIES } from '../data/ohioTaxData';\nimport { OREGON_TAX } from '../data/oregon-tax';\nimport { PENNSYLVANIA_TAX } from '../data/pennsylvaniaTaxData';\nimport { WEST_VIRGINIA_TAX } from '../data/westVirginiaTaxData';\nimport { STATE_TAX_DATA } from '../data/tax-data';\n\n// Utility functions\nconst calculateMonthlyMortgage = (homePrice, downPayment, interestRate, loanTermYears) => {\n  // Calculate loan amount\n  const loanAmount = homePrice - downPayment;\n  \n  // Convert annual interest rate to monthly and decimal form\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Calculate number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    return loanAmount / numberOfPayments;\n  }\n  \n  // Use mortgage payment formula: M = P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n  const monthlyPayment = loanAmount * \n    (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments)) / \n    (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n  \n  return monthlyPayment;\n};\n\n// Calculate maximum home price based on gross income\nconst calculateMaxHomePrice = (monthlyGrossIncome, interestRate, loanTermYears, downPayment, monthlyDebts = 0) => {\n  // Maximum payment based on whether there are debts included\n  // If debts included, use 36% rule (minus debts), otherwise use 28% rule\n  const maxMonthlyPaymentPercent = monthlyDebts > 0 ? 0.36 : 0.28;\n  const maxMonthlyPayment = (monthlyGrossIncome * maxMonthlyPaymentPercent) - monthlyDebts;\n  \n  if (maxMonthlyPayment <= 0) return 0;\n  \n  // Convert annual interest rate to monthly\n  const monthlyInterestRate = (interestRate / 100) / 12;\n  \n  // Number of payments\n  const numberOfPayments = loanTermYears * 12;\n  \n  // Avoid division by zero for 0% interest\n  if (monthlyInterestRate === 0) {\n    const maxLoanAmount = maxMonthlyPayment * numberOfPayments;\n    return maxLoanAmount + downPayment;\n  }\n  \n  // Calculate maximum loan amount\n  // Using formula: P = pmt * (1 - (1 + r)^-n) / r\n  const maxLoanAmount = maxMonthlyPayment * \n    (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / \n    monthlyInterestRate;\n  \n  // Calculate max home price (loan amount + down payment)\n  const maxHomePrice = maxLoanAmount + downPayment;\n  \n  return maxHomePrice;\n};\n\n// Format currency for display\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n};\n\n// Format percentage for display\nconst formatPercentage = (value) => {\n  return value.toFixed(1) + '%';\n};\n\n// Federal Tax Brackets 2024\n// Define the federal tax brackets correctly with \"limit\" being the upper bound of each bracket\nconst FEDERAL_TAX_BRACKETS_2024 = [\n  { min: 0, max: 11600, rate: 0.10 },\n  { min: 11600, max: 47150, rate: 0.12 },\n  { min: 47150, max: 100525, rate: 0.22 },\n  { min: 100525, max: 191950, rate: 0.24 },\n  { min: 191950, max: 243725, rate: 0.32 },\n  { min: 243725, max: 609350, rate: 0.35 },\n  { min: 609350, max: Infinity, rate: 0.37 }\n];\n\n// Calculate progressive tax (like federal income tax)\nconst calculateProgressiveTax = (income, brackets) => {\n  let tax = 0;\n  \n  for (let i = 0; i < brackets.length; i++) {\n    const currentBracket = brackets[i];\n    \n    // Calculate income in this bracket\n    const bracketMin = currentBracket.min;\n    const bracketMax = currentBracket.max;\n    \n    if (income > bracketMin) {\n      // Calculate the portion of income that falls within this bracket\n      const taxableInThisBracket = Math.min(income, bracketMax) - bracketMin;\n      tax += taxableInThisBracket * currentBracket.rate;\n    }\n    \n    // If we've processed all income, we can stop\n    if (income <= bracketMax) break;\n  }\n  \n  return tax;\n};\n\n// Example calculation for $58,000 income\nfunction calculateExampleTax() {\n  const income = 58000;\n  const federalTax = calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n  \n  console.log(`Federal tax on $${income.toFixed(2)}:`);\n  \n  // Show calculation breakdown\n  let totalTax = 0;\n  for (let i = 0; i < FEDERAL_TAX_BRACKETS_2024.length; i++) {\n    const bracket = FEDERAL_TAX_BRACKETS_2024[i];\n    if (income > bracket.min) {\n      const taxableAmount = Math.min(income, bracket.max) - bracket.min;\n      const taxInBracket = taxableAmount * bracket.rate;\n      totalTax += taxInBracket;\n      \n      console.log(`${bracket.min.toLocaleString()} to ${Math.min(income, bracket.max).toLocaleString()}: ${taxableAmount.toLocaleString()} @ ${(bracket.rate * 100).toFixed(1)}% = $${taxInBracket.toFixed(2)}`);\n    }\n    \n    if (income <= bracket.max) break;\n  }\n  \n  console.log(`Total federal tax: $${totalTax.toFixed(2)}`);\n  console.log(`Effective tax rate: ${((totalTax / income) * 100).toFixed(2)}%`);\n  \n  return federalTax;\n}\n\ncalculateExampleTax();\n\n// FICA rates\nconst FICA_RATES = {\n  socialSecurity: 0.062,  // 6.2%\n  medicare: 0.0145,      // 1.45%\n  additionalMedicare: 0.009, // 0.9% additional Medicare tax for high earners\n  socialSecurityWageCap: 168600 // 2024 wage cap for Social Security tax\n};\n\n// State tax rates (simplified)\nconst STATE_TAX_RATES = {\n  \"Alabama\": 0.05,\n  \"Alaska\": 0.00,\n  \"Arizona\": 0.025,\n  \"Arkansas\": 0.039,\n  \"California\": 0.095,\n  \"Colorado\": 0.044,\n  \"Connecticut\": 0.0699,\n  \"Delaware\": 0.066,\n  \"Florida\": 0.00,\n  \"Georgia\": 0.0539,\n  \"Hawaii\": 0.11,\n  \"Idaho\": 0.059,\n  \"Illinois\": 0.049,\n  \"Indiana\": 0.03,\n  \"Iowa\": 0.038,\n  \"Kansas\": 0.055,\n  \"Kentucky\": 0.04,\n  \"Louisiana\": 0.03,\n  \"Maine\": 0.071,\n  \"Maryland\": 0.057,\n  \"Massachusetts\": 0.09,\n  \"Michigan\": 0.042,\n  \"Minnesota\": 0.098,\n  \"Mississippi\": 0.044,\n  \"Missouri\": 0.047,\n  \"Montana\": 0.059,\n  \"Nebraska\": 0.052,\n  \"Nevada\": 0.00,\n  \"New Hampshire\": 0.05,\n  \"New Jersey\": 0.057,\n  \"New Mexico\": 0.059,\n  \"New York\": 0.065,\n  \"North Carolina\": 0.0425,\n  \"North Dakota\": 0.025,\n  \"Ohio\": 0.035,\n  \"Oklahoma\": 0.0475,\n  \"Oregon\": 0.099,\n  \"Pennsylvania\": 0.0307,\n  \"Rhode Island\": 0.0599,\n  \"South Carolina\": 0.062,\n  \"South Dakota\": 0.00,\n  \"Tennessee\": 0.00,\n  \"Texas\": 0.00,\n  \"Utah\": 0.0455,\n  \"Vermont\": 0.0875,\n  \"Virginia\": 0.0575,\n  \"Washington\": 0.00,\n  \"West Virginia\": 0.0482,\n  \"Wisconsin\": 0.0765,\n  \"Wyoming\": 0.00\n};\n\n// Default interest rates by term\nconst DEFAULT_INTEREST_RATES = {\n  10: 5.84,\n  15: 5.96,\n  30: 6.5\n};\n\n// Convert various income types to annual\nconst convertToAnnualIncome = (income, payType) => {\n  const numericIncome = parseFloat(income);\n  \n  if (isNaN(numericIncome)) return 0;\n  \n  switch (payType) {\n    case 'hourly':\n      return numericIncome * 40 * 52; // 40 hours per week, 52 weeks per year\n    case 'weekly':\n      return numericIncome * 52;\n    case 'biweekly':\n      return numericIncome * 26;\n    case 'monthly':\n      return numericIncome * 12;\n    case 'annual':\n    default:\n      return numericIncome;\n  }\n};\n\n\n// Calculate FICA taxes (Social Security and Medicare)\nconst calculateFICATax = (income) => {\n  const { socialSecurity, medicare, additionalMedicare, socialSecurityWageCap } = FICA_RATES;\n  \n  // Social Security has a wage cap\n  const socialSecurityTax = Math.min(income, socialSecurityWageCap) * socialSecurity;\n  \n  // Regular Medicare tax\n  let medicareTax = income * medicare;\n  \n  // Additional Medicare tax for high earners (over $200,000)\n  if (income > 200000) {\n    medicareTax += (income - 200000) * additionalMedicare;\n  }\n  \n  return {\n    socialSecurity: socialSecurityTax,\n    medicare: medicareTax,\n    total: socialSecurityTax + medicareTax\n  };\n};\n\n// Helper function to safely get tax rate value from different tax structures\nconst getTaxRateValue = (taxData) => {\n  if (!taxData) return 0;\n  \n  if (taxData.type === \"percentage\" || taxData.type === \"flat\") {\n    return taxData.value;\n  } else if (taxData.type === \"range\") {\n    return (taxData.min + taxData.max) / 2; // Use average of range\n  } else if (taxData.type === \"fixed\") {\n    return taxData.value;\n  }\n  \n  return 0;\n};\n\n// Calculate local tax (city or county)\nconst calculateLocalTax = (income, state, city) => {\n  if (!state || !city || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n    return 0;\n  }\n  \n  switch (state) {\n    case 'Indiana':\n      if (INDIANA_COUNTIES[city]) {\n        return income * getTaxRateValue(INDIANA_COUNTIES[city]);\n      }\n      break;\n    case 'Maryland':\n      if (MARYLAND_COUNTIES[city]) {\n        return income * getTaxRateValue(MARYLAND_COUNTIES[city]);\n      }\n      break;\n    case 'Michigan':\n      return calculateMichiganLocalTax(income, city);\n    case 'Missouri':\n      if (MISSOURI_CITIES[city]) {\n        return income * getTaxRateValue(MISSOURI_CITIES[city]);\n      }\n      break;\n    case 'New Jersey':\n      if (NEW_JERSEY_CITIES[city]) {\n        return income * getTaxRateValue(NEW_JERSEY_CITIES[city]);\n      }\n      break;\n    case 'New York':\n      if (NEW_YORK_TAX.cities[city]) {\n        const taxResult = calculateNYTax(income, city);\n        return taxResult.cityTax;\n      }\n      break;\n    case 'Ohio':\n      if (OHIO_MUNICIPALITIES[city]) {\n        return income * getTaxRateValue(OHIO_MUNICIPALITIES[city]);\n      }\n      break;\n    case 'Oregon':\n      return OREGON_TAX.calculateTax(income).localTax;\n    case 'Pennsylvania':\n      if (PENNSYLVANIA_TAX.counties[city]) {\n        const countyData = PENNSYLVANIA_TAX.counties[city];\n        if (countyData.type === \"fixed\") {\n          return income * countyData.value;\n        } else if (countyData.type === \"range\") {\n          return income * ((countyData.max + countyData.min) / 2);\n        }\n      }\n      break;\n    case 'West Virginia':\n      if (WEST_VIRGINIA_TAX.cities[city]) {\n        return WEST_VIRGINIA_TAX.calculateTax(city);\n      }\n      break;\n  }\n  \n  return 0;\n};\n\n// Calculate federal tax\nconst calculateFederalTax = (income) => {\n  return calculateProgressiveTax(income, FEDERAL_TAX_BRACKETS_2024);\n};\n\n// Calculate state tax (simplified)\nconst calculateStateTax = (income, state) => {\n  if (!state || !STATE_TAX_RATES[state]) return 0;\n  return income * STATE_TAX_RATES[state];\n};\n\n// Calculate total tax burden\nconst calculateTotalTax = (income, state) => {\n  const federalTax = calculateFederalTax(income);\n  const ficaTaxes = calculateFICATax(income);\n  const stateTax = calculateStateTax(income, state);\n  \n  return {\n    federal: federalTax,\n    fica: ficaTaxes.total,\n    ficaSocialSecurity: ficaTaxes.socialSecurity,\n    ficaMedicare: ficaTaxes.medicare,\n    state: stateTax,\n    local: 0, // This will be calculated separately if local jurisdiction is provided\n    total: federalTax + ficaTaxes.total + stateTax,\n    effectiveRate: (federalTax + ficaTaxes.total + stateTax) / income\n  };\n};\n\n// Get affordability color class based on income percentage and debt situation\nconst getAffordabilityColorClass = (percentage, hasDebts) => {\n  if (hasDebts) {\n    // Using 36% rule with debts\n    if (percentage <= 36) return \"green\";\n    if (percentage <= 42) return \"yellow\";\n    return \"red\";\n  } else {\n    // Using 28% rule without debts\n    if (percentage <= 28) return \"green\";\n    if (percentage <= 32) return \"yellow\";\n    return \"red\";\n  }\n};\n\nconst HomeAffordabilityCalculator = () => {\n  // Income and tax state\n  const [incomeData, setIncomeData] = useState({\n    income: '',\n    payType: 'annual',\n    state: '',\n    city: '',\n    useCustomTakeHome: false,\n    monthlyTakeHome: ''\n  });\n\n  // Housing state\n  const [housingData, setHousingData] = useState({\n    homePrice: '',\n    downPaymentType: 'percent', // 'percent' or 'amount'\n    downPaymentPercent: '20',\n    downPaymentAmount: '',\n    loanTermYears: '30',\n    includePropertyTax: true,\n    propertyTaxRate: '1.1',\n    includeHomeInsurance: true,\n    homeInsurance: '1200'\n  });\n\n  // Additional financial details\n  const [financialData, setFinancialData] = useState({\n    monthlyDebts: ''\n  });\n\n  // Results and UI state\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('what-can-i-afford');\n  const [showDetailedResults, setShowDetailedResults] = useState(false);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [paymentsByTerm, setPaymentsByTerm] = useState(null);\n\n  // Add city selection for local tax calculations\n  const getJurisdictionsForState = (state) => {\n    if (!state || !STATE_TAX_DATA[state] || !STATE_TAX_DATA[state].hasLocalTax) {\n      return [];\n    }\n    \n    switch (state) {\n      case 'Indiana':\n        return Object.keys(INDIANA_COUNTIES);\n      case 'Maryland':\n        return Object.keys(MARYLAND_COUNTIES);\n      case 'Michigan':\n        return [...Object.keys(MICHIGAN_CITIES.exceptions), 'Other'];\n      case 'Missouri':\n        return Object.keys(MISSOURI_CITIES);\n      case 'New Jersey':\n        return Object.keys(NEW_JERSEY_CITIES);\n      case 'New York':\n        return Object.keys(NEW_YORK_TAX.cities);\n      case 'Ohio':\n        return Object.keys(OHIO_MUNICIPALITIES);\n      case 'Pennsylvania':\n        return ['Philadelphia', ...Object.keys(PENNSYLVANIA_TAX.counties).slice(0, 10), 'Other'];\n      case 'West Virginia':\n        return Object.keys(WEST_VIRGINIA_TAX.cities), 'Other';\n      default:\n        return [];\n    }\n  };\n\n  // Get jurisdiction label based on state\n  const getJurisdictionLabel = (state) => {\n    if (!state || !STATE_TAX_DATA[state]) return 'Municipality/City';\n    \n    const stateData = STATE_TAX_DATA[state];\n    \n    switch (stateData.taxType) {\n      case 'county':\n        return 'County';\n      case 'city':\n        return 'City/Municipality';\n      case 'school_district':\n        return 'School District';\n      case 'both':\n        return 'City/County';\n      default:\n        return 'Municipality/City';\n    }\n  };\n\n  // Set interest rate based on loan term\n  useEffect(() => {\n    const term = parseInt(housingData.loanTermYears, 10);\n    const defaultRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n    setHousingData(prev => ({ ...prev, interestRate: defaultRate }));\n  }, [housingData.loanTermYears]);\n\n  // Calculate down payment amount when percent changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'percent' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const percent = parseFloat(housingData.downPaymentPercent);\n      if (!isNaN(homePrice) && !isNaN(percent)) {\n        const amount = homePrice * (percent / 100);\n        setHousingData(prev => ({ \n          ...prev, \n          downPaymentAmount: amount.toFixed(0)\n        }));\n      }\n    }\n  }, [housingData.downPaymentPercent, housingData.homePrice, housingData.downPaymentType]);\n\n  // Calculate down payment percent when amount changes\n  useEffect(() => {\n    if (housingData.downPaymentType === 'amount' && housingData.homePrice) {\n      const homePrice = parseFloat(housingData.homePrice);\n      const amount = parseFloat(housingData.downPaymentAmount);\n      if (!isNaN(homePrice) && !isNaN(amount) && homePrice > 0) {\n        const percent = (amount / homePrice) * 100;\n        setHousingData(prev => ({ \n          ...prev, \n          downPaymentPercent: percent.toFixed(1)\n        }));\n      }\n    }\n  }, [housingData.downPaymentAmount, housingData.homePrice, housingData.downPaymentType]);\n\n  // Handle changes to income data\n  const handleIncomeChange = (field, value) => {\n    setIncomeData(prev => {\n      // If changing state, reset city\n      if (field === 'state') {\n        return { ...prev, [field]: value, city: '' };\n      }\n      return { ...prev, [field]: value };\n    });\n  };\n\n  // Handle changes to housing data\n  const handleHousingChange = (field, value) => {\n    setHousingData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle changes to financial data\n  const handleFinancialChange = (field, value) => {\n    setFinancialData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Switch between percentage and amount for down payment\n  const handleDownPaymentTypeChange = (type) => {\n    setHousingData(prev => ({\n      ...prev,\n      downPaymentType: type\n    }));\n  };\n\n  // Validate the input form\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!incomeData.useCustomTakeHome) {\n      // Validate income inputs\n      if (!incomeData.income) {\n        newErrors.income = 'Income is required';\n      } else if (isNaN(parseFloat(incomeData.income)) || parseFloat(incomeData.income) <= 0) {\n        newErrors.income = 'Please enter a valid income amount';\n      }\n\n      if (!incomeData.state) {\n        newErrors.state = 'State selection is required for tax calculation';\n      }\n      \n      // Validate city selection if state has local taxes\n      if (incomeData.state && STATE_TAX_DATA[incomeData.state] && \n          STATE_TAX_DATA[incomeData.state].hasLocalTax && !incomeData.city) {\n        newErrors.city = `${getJurisdictionLabel(incomeData.state)} selection is required for accurate tax calculation`;\n      }\n    } else {\n      // Validate custom take-home pay\n      if (!incomeData.monthlyTakeHome) {\n        newErrors.monthlyTakeHome = 'Monthly take-home pay is required';\n      } else if (isNaN(parseFloat(incomeData.monthlyTakeHome)) || parseFloat(incomeData.monthlyTakeHome) <= 0) {\n        newErrors.monthlyTakeHome = 'Please enter a valid monthly take-home amount';\n      }\n    }\n\n    // If we're analyzing a specific home, validate home price\n    if (activeTab === 'analyze-mortgage' && !housingData.homePrice) {\n      newErrors.homePrice = 'Home price is required';\n    } else if (activeTab === 'analyze-mortgage' && (isNaN(parseFloat(housingData.homePrice)) || parseFloat(housingData.homePrice) <= 0)) {\n      newErrors.homePrice = 'Please enter a valid home price';\n    }\n\n    // Validate down payment\n    if (housingData.downPaymentType === 'percent') {\n      if (!housingData.downPaymentPercent || isNaN(parseFloat(housingData.downPaymentPercent)) || \n          parseFloat(housingData.downPaymentPercent) < 0 || parseFloat(housingData.downPaymentPercent) > 100) {\n        newErrors.downPaymentPercent = 'Down payment must be between 0% and 100%';\n      }\n    } else {\n      if (!housingData.downPaymentAmount || isNaN(parseFloat(housingData.downPaymentAmount)) || parseFloat(housingData.downPaymentAmount) < 0) {\n        newErrors.downPaymentAmount = 'Please enter a valid down payment amount';\n      }\n    }\n\n    // Validate optional financial data\n    if (financialData.monthlyDebts && (isNaN(parseFloat(financialData.monthlyDebts)) || parseFloat(financialData.monthlyDebts) < 0)) {\n      newErrors.monthlyDebts = 'Please enter a valid monthly debt amount';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Calculate affordability (what can I afford)\n  const calculateAffordability = () => {\n    if (!validateForm()) return;\n\n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n\n      // Parse other inputs\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      \n      // Determine down payment based on type\n      let downPaymentPercent, downPaymentAmount;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        // Will calculate actual amount after we know max home price\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        // Will use this fixed amount\n      }\n      \n      // Calculate affordability ratios\n      // Front-end ratio: 28% of monthly gross income for housing (PITI)\n      const frontEndMaxPayment = monthlyGrossIncome * 0.28;\n      // Back-end ratio: 36% of monthly gross income for all debt payments\n      const backEndMaxPayment = (monthlyGrossIncome * 0.36) - monthlyDebts;\n      // Use the more conservative of the two\n      const maxMonthlyPayment = Math.min(frontEndMaxPayment, backEndMaxPayment);\n      \n      // Adjust for property tax and insurance\n      let additionalHousingCosts = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        // Will estimate with a placeholder value for now\n        additionalHousingCosts += (300000 * propertyTaxRate) / 12; // Placeholder home value\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        additionalHousingCosts += annualInsurance / 12;\n      }\n      \n      // Adjust max payment to account for property tax and insurance\n      const maxPIPayment = maxMonthlyPayment - additionalHousingCosts;\n      \n      if (maxPIPayment <= 0) {\n        setErrors({ \n          general: 'Your expenses and debts are too high relative to your income for a mortgage'\n        });\n        return;\n      }\n      \n      // Calculate max home price based on the down payment situation\n      let maxHomePrice, maxLoanAmount;\n      \n      if (housingData.downPaymentType === 'percent') {\n        // Percentage-based down payment\n        maxHomePrice = calculateMaxHomePrice(\n          monthlyGrossIncome,\n          interestRate,\n          loanTermYears,\n          0, // Temporarily use 0 for down payment\n          monthlyDebts\n        );\n        \n        // Now apply the down payment percentage\n        downPaymentAmount = maxHomePrice * (downPaymentPercent / 100);\n        maxLoanAmount = maxHomePrice - downPaymentAmount;\n      } else {\n        // Fixed amount down payment\n        // For fixed down payment, we need to calculate differently\n        const fixedDownPayment = parseFloat(housingData.downPaymentAmount);\n        \n        // Calculate max loan amount first\n        const maxLoanPayment = maxPIPayment;\n        const monthlyInterestRate = (interestRate / 100) / 12;\n        const numberOfPayments = loanTermYears * 12;\n        \n        if (monthlyInterestRate === 0) {\n          maxLoanAmount = maxLoanPayment * numberOfPayments;\n        } else {\n          maxLoanAmount = maxLoanPayment * \n            (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) / \n            monthlyInterestRate;\n        }\n        \n        // Then calculate max home price by adding fixed down payment\n        maxHomePrice = maxLoanAmount + fixedDownPayment;\n        downPaymentAmount = fixedDownPayment;\n        downPaymentPercent = (fixedDownPayment / maxHomePrice) * 100;\n      }\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        maxHomePrice,\n        downPaymentAmount,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate more precise property tax and insurance now that we know max home price\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (maxHomePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        \n        const termPayment = calculateMonthlyMortgage(\n          maxHomePrice,\n          downPaymentAmount,\n          termInterestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        // Calculate total interest paid over loan term\n        const totalInterest = (termPayment * term * 12) - maxLoanAmount;\n        \n        // Calculate percentage of gross income\n        const percentOfGrossIncome = (totalTermPayment / monthlyGrossIncome) * 100;\n        \n        // Calculate percentage of take-home income\n        const percentOfTakeHomeIncome = (totalTermPayment / monthlyTakeHome) * 100;\n        \n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        \n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n      \n      // Calculate percentage of gross income\n      const percentOfGrossIncome = (totalMonthlyPayment / monthlyGrossIncome) * 100;\n      \n      // Calculate percentage of take-home income\n      const percentOfTakeHomeIncome = (totalMonthlyPayment / monthlyTakeHome) * 100;\n      \n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n      \n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        maxHomePrice: maxHomePrice,\n        maxLoanAmount: maxLoanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        percentOfTakeHomeIncome: percentOfTakeHomeIncome,\n        affordabilityClass: affordabilityClass,\n        taxResults: taxResults\n      });\n      \n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n      \n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: 'An error occurred during calculations. Please check your inputs.' });\n    }\n  };\n  \n  // Calculate affordability for a specific home price\n  const analyzeMortgage = () => {\n    if (!validateForm()) return;\n    \n    try {\n      let annualIncome = 0;\n      let monthlyGrossIncome = 0;\n      let monthlyTakeHome = 0;\n      let taxResults = { total: 0, federal: 0, fica: 0, state: 0, local: 0, effectiveRate: 0 };\n      \n      // Calculate gross income and taxes\n      if (!incomeData.useCustomTakeHome) {\n        // Convert to annual income and calculate taxes\n        annualIncome = convertToAnnualIncome(incomeData.income, incomeData.payType);\n        // Use local tax data if available\n        if (incomeData.city && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax) {\n          // Calculate local tax\n          const localTax = calculateLocalTax(annualIncome, incomeData.state, incomeData.city);\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n          taxResults.local = localTax;\n          taxResults.total += localTax;\n        } else {\n          taxResults = calculateTotalTax(annualIncome, incomeData.state);\n        }\n        monthlyGrossIncome = annualIncome / 12;\n        const takeHomePay = annualIncome - taxResults.total;\n        monthlyTakeHome = takeHomePay / 12;\n      } else {\n        // Use custom take-home pay\n        monthlyTakeHome = parseFloat(incomeData.monthlyTakeHome);\n        // Estimate gross income based on take-home pay\n        monthlyGrossIncome = monthlyTakeHome * 1.3;\n        annualIncome = monthlyGrossIncome * 12;\n      }\n      \n      // Parse inputs for the specified home\n      const homePrice = parseFloat(housingData.homePrice);\n      const monthlyDebts = parseFloat(financialData.monthlyDebts) || 0;\n      const hasDebts = monthlyDebts > 0;\n      const interestRate = parseFloat(housingData.interestRate);\n      const loanTermYears = parseInt(housingData.loanTermYears, 10);\n      \n      // Calculate down payment\n      let downPaymentAmount, downPaymentPercent;\n      if (housingData.downPaymentType === 'percent') {\n        downPaymentPercent = parseFloat(housingData.downPaymentPercent);\n        downPaymentAmount = homePrice * (downPaymentPercent / 100);\n      } else {\n        downPaymentAmount = parseFloat(housingData.downPaymentAmount);\n        downPaymentPercent = (downPaymentAmount / homePrice) * 100;\n      }\n      \n      // Calculate loan amount\n      const loanAmount = homePrice - downPaymentAmount;\n      \n      // Calculate monthly mortgage payment\n      const baseMonthlyPayment = calculateMonthlyMortgage(\n        homePrice,\n        downPaymentAmount,\n        interestRate,\n        loanTermYears\n      );\n      \n      // Calculate property tax and insurance\n      let totalMonthlyPayment = baseMonthlyPayment;\n      let monthlyPropertyTax = 0;\n      let monthlyInsurance = 0;\n      \n      if (housingData.includePropertyTax) {\n        const propertyTaxRate = parseFloat(housingData.propertyTaxRate) / 100;\n        monthlyPropertyTax = (homePrice * propertyTaxRate) / 12;\n        totalMonthlyPayment += monthlyPropertyTax;\n      }\n      \n      if (housingData.includeHomeInsurance) {\n        const annualInsurance = parseFloat(housingData.homeInsurance) || 1200;\n        monthlyInsurance = annualInsurance / 12;\n        totalMonthlyPayment += monthlyInsurance;\n      }\n      \n      // Calculate percentage of gross income\n      const percentOfGrossIncome = (totalMonthlyPayment / monthlyGrossIncome) * 100;\n      \n      // Determine affordability using standard rules\n      let isAffordable = false;\n      if (hasDebts) {\n        // If they have other debts, use back-end ratio (36% rule)\n        const totalMonthlyDebtPayments = totalMonthlyPayment + monthlyDebts;\n        const backEndRatio = (totalMonthlyDebtPayments / monthlyGrossIncome) * 100;\n        isAffordable = backEndRatio <= 36;\n      } else {\n        // Otherwise use front-end ratio (28% rule)\n        isAffordable = percentOfGrossIncome <= 28;\n      }\n      \n      // Determine affordability class (color coding)\n      const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n      \n      // Calculate payment options for different terms\n      const termOptions = [10, 15, 30];\n      const paymentOptions = {};\n      \n      termOptions.forEach(term => {\n        const termInterestRate = DEFAULT_INTEREST_RATES[term] || DEFAULT_INTEREST_RATES[30];\n        \n        const termPayment = calculateMonthlyMortgage(\n          homePrice,\n          downPaymentAmount,\n          termInterestRate,\n          term\n        );\n        \n        let totalTermPayment = termPayment;\n        \n        if (housingData.includePropertyTax) {\n          totalTermPayment += monthlyPropertyTax;\n        }\n        \n        if (housingData.includeHomeInsurance) {\n          totalTermPayment += monthlyInsurance;\n        }\n        \n        // Calculate total interest paid over loan term\n        const totalInterest = (termPayment * term * 12) - loanAmount;\n        \n        // Calculate percentage of gross income\n        const percentOfGrossIncome = (totalTermPayment / monthlyGrossIncome) * 100;\n        \n        // Determine affordability class\n        const affordabilityClass = getAffordabilityColorClass(percentOfGrossIncome, hasDebts);\n        \n        paymentOptions[term] = {\n          interestRate: termInterestRate,\n          payment: termPayment,\n          totalPayment: totalTermPayment,\n          totalInterest: totalInterest,\n          percentOfGrossIncome: percentOfGrossIncome,\n          affordabilityClass: affordabilityClass\n        };\n      });\n      \n      // Set results for display\n      setResults({\n        annualIncome: annualIncome,\n        monthlyGrossIncome: monthlyGrossIncome,\n        monthlyTakeHome: monthlyTakeHome,\n        homePrice: homePrice,\n        loanAmount: loanAmount,\n        downPaymentAmount: downPaymentAmount,\n        downPaymentPercent: downPaymentPercent,\n        baseMonthlyPayment: baseMonthlyPayment,\n        monthlyPropertyTax: monthlyPropertyTax,\n        monthlyInsurance: monthlyInsurance,\n        totalMonthlyPayment: totalMonthlyPayment,\n        percentOfGrossIncome: percentOfGrossIncome,\n        affordabilityClass: affordabilityClass,\n        isAffordable: isAffordable,\n        taxResults: taxResults\n      });\n      \n      // Set payment options by term\n      setPaymentsByTerm(paymentOptions);\n      \n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setErrors({ general: 'An error occurred during calculations. Please check your inputs.' });\n    }\n  };\n  \n  // Handle calculation based on active tab\n  const handleCalculate = () => {\n    if (activeTab === 'what-can-i-afford') {\n      calculateAffordability();\n    } else {\n      analyzeMortgage();\n    }\n  };\n  \n  return (\n    <div className=\"calculator-container\">\n      <div className=\"calculator-header\">\n        <h1>Home Affordability Calculator</h1>\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'what-can-i-afford' ? 'active' : ''}`}\n            onClick={() => setActiveTab('what-can-i-afford')}\n          >\n            What Can I Afford?\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'analyze-mortgage' ? 'active' : ''}`}\n            onClick={() => setActiveTab('analyze-mortgage')}\n          >\n            Analyze Mortgage\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"calculator-body\" style={{ display: 'flex', flexDirection: 'row' }}>\n        {/* Left Column - Inputs */}\n        <div className=\"calculator-inputs\" style={{ flex: '1', marginRight: '20px' }}>\n          {/* Income & Location Section */}\n          <div className=\"input-section\">\n            <h2>Income & Location</h2>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Income Amount</label>\n                <input\n                  type=\"number\"\n                  value={incomeData.income}\n                  onChange={(e) => handleIncomeChange('income', e.target.value)}\n                  placeholder=\"Enter income\"\n                  disabled={incomeData.useCustomTakeHome}\n                  className={errors.income ? 'error' : ''}\n                />\n                {errors.income && <div className=\"error-message\">{errors.income}</div>}\n              </div>\n              \n              <div className=\"input-group\">\n                <label>Pay Frequency</label>\n                <select\n                  value={incomeData.payType}\n                  onChange={(e) => handleIncomeChange('payType', e.target.value)}\n                  disabled={incomeData.useCustomTakeHome}\n                >\n                  <option value=\"hourly\">Hourly</option>\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"biweekly\">Bi-weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"annual\">Annual</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>State</label>\n                <select\n                  value={incomeData.state}\n                  onChange={(e) => handleIncomeChange('state', e.target.value)}\n                  disabled={incomeData.useCustomTakeHome}\n                  className={errors.state ? 'error' : ''}\n                >\n                  <option value=\"\">Select State</option>\n                  {Object.keys(STATE_TAX_RATES).map(state => (\n                    <option key={state} value={state}>{state}</option>\n                  ))}\n                </select>\n                {errors.state && <div className=\"error-message\">{errors.state}</div>}\n              </div>\n              \n              {incomeData.state && STATE_TAX_DATA[incomeData.state] && STATE_TAX_DATA[incomeData.state].hasLocalTax && (\n                <div className=\"input-group\">\n                  <label>{getJurisdictionLabel(incomeData.state)}</label>\n                  <select\n                    value={incomeData.city}\n                    onChange={(e) => handleIncomeChange('city', e.target.value)}\n                    disabled={incomeData.useCustomTakeHome}\n                    className={errors.city ? 'error' : ''}\n                  >\n                    <option value=\"\">Select {getJurisdictionLabel(incomeData.state)}</option>\n                    {getJurisdictionsForState(incomeData.state).map(jurisdiction => (\n                      <option key={jurisdiction} value={jurisdiction}>{jurisdiction}</option>\n                    ))}\n                  </select>\n                  {errors.city && <div className=\"error-message\">{errors.city}</div>}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"input-toggle\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={incomeData.useCustomTakeHome}\n                  onChange={(e) => handleIncomeChange('useCustomTakeHome', e.target.checked)}\n                />\n                I know my monthly take-home pay\n              </label>\n            </div>\n            \n            {incomeData.useCustomTakeHome && (\n              <div className=\"input-group\">\n                <label>Monthly Take-Home Pay</label>\n                <input\n                  type=\"number\"\n                  value={incomeData.monthlyTakeHome}\n                  onChange={(e) => handleIncomeChange('monthlyTakeHome', e.target.value)}\n                  placeholder=\"Enter monthly take-home pay\"\n                  className={errors.monthlyTakeHome ? 'error' : ''}\n                />\n                {errors.monthlyTakeHome && <div className=\"error-message\">{errors.monthlyTakeHome}</div>}\n              </div>\n            )}\n          </div>\n          \n          {/* Home Details Section */}\n          <div className=\"input-section\">\n            <h2>Home Details</h2>\n            \n            {activeTab === 'analyze-mortgage' && (\n              <div className=\"input-group\">\n                <label>Home Price</label>\n                <input\n                  type=\"number\"\n                  value={housingData.homePrice}\n                  onChange={(e) => handleHousingChange('homePrice', e.target.value)}\n                  placeholder=\"Enter home price\"\n                  className={errors.homePrice ? 'error' : ''}\n                />\n                {errors.homePrice && <div className=\"error-message\">{errors.homePrice}</div>}\n              </div>\n            )}\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Down Payment</label>\n                <div className=\"toggle-input-group\">\n                  <div className=\"toggle-buttons\">\n                    <button\n                      type=\"button\"\n                      className={`toggle-button ${housingData.downPaymentType === 'percent' ? 'active' : ''}`}\n                      onClick={() => handleDownPaymentTypeChange('percent')}\n                    >\n                      %\n                    </button>\n                    <button\n                      type=\"button\"\n                      className={`toggle-button ${housingData.downPaymentType === 'amount' ? 'active' : ''}`}\n                      onClick={() => handleDownPaymentTypeChange('amount')}\n                    >\n                      $\n                    </button>\n                  </div>\n                  \n                  {housingData.downPaymentType === 'percent' ? (\n                    <input\n                      type=\"number\"\n                      value={housingData.downPaymentPercent}\n                      onChange={(e) => handleHousingChange('downPaymentPercent', e.target.value)}\n                      placeholder=\"Enter percentage\"\n                      className={errors.downPaymentPercent ? 'error' : ''}\n                    />\n                  ) : (\n                    <input\n                      type=\"number\"\n                      value={housingData.downPaymentAmount}\n                      onChange={(e) => handleHousingChange('downPaymentAmount', e.target.value)}\n                      placeholder=\"Enter amount\"\n                      className={errors.downPaymentAmount ? 'error' : ''}\n                    />\n                  )}\n                </div>\n                {errors.downPaymentPercent && <div className=\"error-message\">{errors.downPaymentPercent}</div>}\n                {errors.downPaymentAmount && <div className=\"error-message\">{errors.downPaymentAmount}</div>}\n              </div>\n              \n              <div className=\"input-group\">\n                <label>Loan Term</label>\n                <select\n                  value={housingData.loanTermYears}\n                  onChange={(e) => handleHousingChange('loanTermYears', e.target.value)}\n                >\n                  <option value=\"10\">10 years</option>\n                  <option value=\"15\">15 years</option>\n                  <option value=\"30\">30 years</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"input-row\">\n              <div className=\"input-group\">\n                <label>Interest Rate (%)</label>\n                <input\n                  type=\"number\"\n                  value={housingData.interestRate}\n                  onChange={(e) => handleHousingChange('interestRate', e.target.value)}\n                  step=\"0.01\"\n                  min=\"0\"\n                  max=\"15\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"toggle-section\">\n              <button\n                type=\"button\"\n                className=\"toggle-advanced-btn\"\n                onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}\n              >\n                {showAdvancedOptions ? 'Hide Advanced Options' : 'Show Advanced Options'}\n              </button>\n              \n              {showAdvancedOptions && (\n                <div className=\"advanced-options\">\n                  <div className=\"input-toggle\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={housingData.includePropertyTax}\n                        onChange={(e) => handleHousingChange('includePropertyTax', e.target.checked)}\n                      />\n                      Include Property Tax\n                    </label>\n                  </div>\n                  \n                  {housingData.includePropertyTax && (\n                    <div className=\"input-group\">\n                      <label>Property Tax Rate (%/year)</label>\n                      <input\n                        type=\"number\"\n                        value={housingData.propertyTaxRate}\n                        onChange={(e) => handleHousingChange('propertyTaxRate', e.target.value)}\n                        step=\"0.01\"\n                        min=\"0\"\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"input-toggle\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={housingData.includeHomeInsurance}\n                        onChange={(e) => handleHousingChange('includeHomeInsurance', e.target.checked)}\n                      />\n                      Include Home Insurance\n                    </label>\n                  </div>\n                  \n                  {housingData.includeHomeInsurance && (\n                    <div className=\"input-group\">\n                      <label>Annual Home Insurance ($)</label>\n                      <input\n                        type=\"number\"\n                        value={housingData.homeInsurance}\n                        onChange={(e) => handleHousingChange('homeInsurance', e.target.value)}\n                        min=\"0\"\n                      />\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Additional Financial Details */}\n          <div className=\"input-section\">\n            <h2>Additional Financial Details</h2>\n            \n            <div className=\"input-group\">\n              <label>Monthly Debt Payments</label>\n              <input\n                type=\"number\"\n                value={financialData.monthlyDebts}\n                onChange={(e) => handleFinancialChange('monthlyDebts', e.target.value)}\n                placeholder=\"Car loans, credit cards, etc.\"\n                className={errors.monthlyDebts ? 'error' : ''}\n              />\n              {errors.monthlyDebts && <div className=\"error-message\">{errors.monthlyDebts}</div>}\n            </div>\n          </div>\n          \n          {/* Error message and calculate button */}\n          {errors.general && (\n            <div className=\"error-message general-error\">{errors.general}</div>\n          )}\n          \n          <button \n            className=\"calculate-btn\"\n            onClick={handleCalculate}\n          >\n            Calculate\n          </button>\n        </div>\n\n        {/* Right Column - Results */}\n        <div className=\"calculator-results\" style={{ flex: '1', marginLeft: '20px' }}>\n          {results ? (\n            <div className=\"results\">\n              <h2>Results Summary</h2>\n\n              {/* Visual representation of mortgage as % of income */}\n              <div className=\"affordability-visual\">\n                <h3>Mortgage Impact on Monthly Budget</h3>\n                <div className=\"affordability-meter\">\n                  <div className=\"meter-header\">\n                    <span>Monthly Gross Income: {formatCurrency(results.monthlyGrossIncome)}</span>\n                    <span className={results.affordabilityClass}>\n                      {results.percentOfGrossIncome.toFixed(1)}% of Gross Income\n                    </span>\n                  </div>\n                  <div className=\"meter-header\">\n                    <span>Monthly Take-Home: {formatCurrency(results.monthlyTakeHome)}</span>\n                    <span className={results.affordabilityClass}>\n                      {results.percentOfTakeHomeIncome.toFixed(1)}% of Take-Home Pay\n                    </span>\n                  </div>\n                  <div className=\"meter-bar\">\n                    <div \n                      className={`meter-fill ${results.affordabilityClass}`} \n                      style={{width: `${Math.min(results.percentOfGrossIncome * 2, 100)}%`}}\n                    ></div>\n                  </div>\n                  <div className=\"meter-labels\">\n                    <span>0%</span>\n                    <span>28%</span>\n                    <span>32%</span>\n                    <span>50%</span>\n                  </div>\n                  <div className={`affordability-message ${results.affordabilityClass}`}>\n  {results.affordabilityClass === \"green\" ? (\n    \"You are well within budget, you should be proud!\"\n  ) : results.affordabilityClass === \"yellow\" ? (\n    \"This house is a little outside of your budget. It is manageable, but you'll need to be more conscious about spending.\"\n  ) : (\n    \"This house is outside of your budget. Maybe another home will be more suitable, but if your heart is set on this one be sure to cut expenses elsewhere.\"\n  )}\n</div> \n                </div>\n              </div>\n\n              {/* Affordability Summary */}\n              <div className=\"result-summary\">\n                {activeTab === 'what-can-i-afford' ? (\n                  <>\n                    <div className=\"result-item total\">\n                      <span>Maximum Home Price:</span>\n                      <span className=\"highlight\">\n                        {formatCurrency(results.maxHomePrice)}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Down Payment ({results.downPaymentPercent.toFixed(1)}%):</span>\n                        <span>\n                          {formatCurrency(results.downPaymentAmount)}\n                        </span>\n                      </div>\n\n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.maxLoanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className={`result-item total ${results.isAffordable ? \"affordable\" : \"unaffordable\"}`}>\n                      <span>Affordability:</span>\n                      <span>\n                        {results.isAffordable \n                          ? \"✓ Affordable\" \n                          : \"⚠️ May be too expensive\"}\n                      </span>\n                    </div>\n\n                    <div className=\"result-row\">\n                      <div className=\"result-item\">\n                        <span>Home Price:</span>\n                        <span>\n                          {formatCurrency(results.homePrice)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"result-item\">\n                        <span>Loan Amount:</span>\n                        <span>\n                          {formatCurrency(results.loanAmount)}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {/* Monthly Payment Breakdown */}\n              <div className=\"payment-breakdown\">\n                <h3>Monthly Payment Breakdown</h3>\n\n                <div className=\"payment-details\">\n                  <div className=\"result-item\">\n                    <span>Principal & Interest:</span>\n                    <span>\n                      {formatCurrency(results.baseMonthlyPayment)}\n                    </span>\n                  </div>\n\n                  {results.monthlyPropertyTax > 0 && (\n                    <div className=\"result-item\">\n                      <span>Property Tax:</span>\n                      <span>\n                        {formatCurrency(results.monthlyPropertyTax)}\n                      </span>\n                    </div>\n                  )}\n\n                  {results.monthlyInsurance > 0 && (\n                    <div className=\"result-item\">\n                      <span>Home Insurance:</span>\n                      <span>\n                        {formatCurrency(results.monthlyInsurance)}\n                      </span>\n                    </div>\n                  )}\n\n                  <div className=\"result-item total\">\n                    <span>Total Monthly Payment:</span>\n                    <span>\n                      {formatCurrency(results.totalMonthlyPayment)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Term comparison */}\n              {paymentsByTerm && (\n                <div className=\"term-comparison\">\n                  <h3>Payment Options by Term</h3>\n\n                  <div className=\"term-options\">\n                    {Object.entries(paymentsByTerm).map(([term, data]) => (\n                      <div key={term} className={`term-option ${data.affordabilityClass}`}>\n                        <div className=\"term-header\">\n                          <span>{term} Year {term === housingData.loanTermYears ? '(selected)' : ''}</span>\n                          <span className=\"term-payment\">{formatCurrency(data.totalPayment)}/mo</span>\n                        </div>\n                        \n                        <div className=\"term-details\">\n                          <div className=\"term-detail\">\n                            <span>Rate:</span>\n                            <span>{data.interestRate.toFixed(2)}%</span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>% of Gross Income:</span>\n                            <span>\n                              {data.percentOfGrossIncome.toFixed(1)}%\n                            </span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>% of Take-Home Pay:</span>\n                            <span>\n                              {data.percentOfTakeHomeIncome.toFixed(1)}%\n                            </span>\n                          </div>\n                          \n                          <div className=\"term-detail\">\n                            <span>Total Interest:</span>\n                            <span>{formatCurrency(data.totalInterest)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Detailed Results Toggle Section */}\n              <div className=\"financial-details\">\n                <button \n                  className=\"toggle-details-btn\"\n                  onClick={() => setShowDetailedResults(!showDetailedResults)}\n                >\n                  {showDetailedResults ? 'Hide Detailed Analysis' : 'Show Detailed Analysis'}\n                </button>\n                \n                {showDetailedResults && (\n                  <div className=\"detailed-results\">\n                    {/* Tax breakdown */}\n                    <div className=\"tax-breakdown\">\n                      <h3>Tax Breakdown</h3>\n                      <div className=\"result-item\">\n                        <span>Federal Tax:</span>\n                        <span>{formatCurrency(results.taxResults.federal)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>FICA:</span>\n                        <span>{formatCurrency(results.taxResults.fica)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>State Tax:</span>\n                        <span>{formatCurrency(results.taxResults.state)}/year</span>\n                      </div>\n                      {results.taxResults.local > 0 && (\n                        <div className=\"result-item\">\n                          <span>Local Tax:</span>\n                          <span>{formatCurrency(results.taxResults.local)}/year</span>\n                        </div>\n                      )}\n                      <div className=\"result-item total\">\n                        <span>Total Tax:</span>\n                        <span>{formatCurrency(results.taxResults.total)}/year</span>\n                      </div>\n                      <div className=\"result-item\">\n                        <span>Effective Tax Rate:</span>\n                        <span>{(results.taxResults.effectiveRate * 100).toFixed(1)}%</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"no-results\">\n              <p>Enter your details and click \"Calculate\" to see results</p>\n              \n              <div className=\"calculator-info\">\n                <h3>How This Calculator Works</h3>\n                <p>This calculator uses industry-standard affordability guidelines:</p>\n                <ul>\n                  <li><strong>28% Rule:</strong> Your monthly mortgage payment should not exceed 28% of your gross monthly income.</li>\n                  <li><strong>36% Rule:</strong> Your total monthly debt payments (including mortgage) should not exceed 36% of your gross monthly income.</li>\n                </ul>\n                <p>The calculator uses these rules to determine either how much home you can afford or whether a specific home price is affordable for you.</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeAffordabilityCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}